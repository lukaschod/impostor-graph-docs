{
  "api/GraphProcessor.AnimationCurveParameter.html": {
    "href": "api/GraphProcessor.AnimationCurveParameter.html",
    "title": "Class AnimationCurveParameter",
    "keywords": "Class AnimationCurveParameter Inheritance object ExposedParameter AnimationCurveParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class AnimationCurveParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Methods | Improve this Doc View Source GetValueType() Declaration public override Type GetValueType() Returns Type Description Type Overrides ExposedParameter.GetValueType() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.AppDomainExtension.html": {
    "href": "api/GraphProcessor.AppDomainExtension.html",
    "title": "Class AppDomainExtension",
    "keywords": "Class AppDomainExtension Inheritance object AppDomainExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public static class AppDomainExtension Methods | Improve this Doc View Source GetAllTypes(AppDomain) Declaration public static IEnumerable<Type> GetAllTypes(this AppDomain domain) Parameters Type Name Description AppDomain domain Returns Type Description IEnumerable<Type>"
  },
  "api/GraphProcessor.BaseEdgeConnector.html": {
    "href": "api/GraphProcessor.BaseEdgeConnector.html",
    "title": "Class BaseEdgeConnector",
    "keywords": "Class BaseEdgeConnector Inheritance object Manipulator MouseManipulator EdgeConnector BaseEdgeConnector Implements IManipulator Inherited Members MouseManipulator.CanStartManipulation(IMouseEvent) MouseManipulator.CanStopManipulation(IMouseEvent) MouseManipulator.activators Manipulator.target object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class BaseEdgeConnector : EdgeConnector, IManipulator Constructors | Improve this Doc View Source BaseEdgeConnector(IEdgeConnectorListener) Declaration public BaseEdgeConnector(IEdgeConnectorListener listener) Parameters Type Name Description IEdgeConnectorListener listener Fields | Improve this Doc View Source active Declaration protected bool active Field Value Type Description bool | Improve this Doc View Source dragHelper Declaration protected BaseEdgeDragHelper dragHelper Field Value Type Description BaseEdgeDragHelper | Improve this Doc View Source graphView Declaration protected BaseGraphView graphView Field Value Type Description BaseGraphView Properties | Improve this Doc View Source edgeDragHelper Reference to the edge drag helper. Declaration public override EdgeDragHelper edgeDragHelper { get; } Property Value Type Description EdgeDragHelper Overrides UnityEditor.Experimental.GraphView.EdgeConnector.edgeDragHelper Methods | Improve this Doc View Source InitEdgeConnector(IEdgeConnectorListener) Declaration protected virtual void InitEdgeConnector(IEdgeConnectorListener listener) Parameters Type Name Description IEdgeConnectorListener listener | Improve this Doc View Source OnMouseDown(MouseDownEvent) Declaration protected virtual void OnMouseDown(MouseDownEvent e) Parameters Type Name Description MouseDownEvent e | Improve this Doc View Source OnMouseMove(MouseMoveEvent) Declaration protected virtual void OnMouseMove(MouseMoveEvent e) Parameters Type Name Description MouseMoveEvent e | Improve this Doc View Source OnMouseUp(MouseUpEvent) Declaration protected virtual void OnMouseUp(MouseUpEvent e) Parameters Type Name Description MouseUpEvent e | Improve this Doc View Source RegisterCallbacksOnTarget() Called to register event callbacks on the target element. Declaration protected override void RegisterCallbacksOnTarget() Overrides UnityEngine.UIElements.Manipulator.RegisterCallbacksOnTarget() | Improve this Doc View Source UnregisterCallbacksFromTarget() Called to unregister event callbacks from the target element. Declaration protected override void UnregisterCallbacksFromTarget() Overrides UnityEngine.UIElements.Manipulator.UnregisterCallbacksFromTarget() Implements UnityEngine.UIElements.IManipulator"
  },
  "api/GraphProcessor.BaseEdgeConnectorListener.html": {
    "href": "api/GraphProcessor.BaseEdgeConnectorListener.html",
    "title": "Class BaseEdgeConnectorListener",
    "keywords": "Class BaseEdgeConnectorListener Base class to write your own edge handling connection system Inheritance object BaseEdgeConnectorListener Implements IEdgeConnectorListener Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class BaseEdgeConnectorListener : IEdgeConnectorListener Constructors | Improve this Doc View Source BaseEdgeConnectorListener(BaseGraphView) Base class to write your own edge handling connection system Declaration public BaseEdgeConnectorListener(BaseGraphView graphView) Parameters Type Name Description BaseGraphView graphView Fields | Improve this Doc View Source graphView Base class to write your own edge handling connection system Declaration public readonly BaseGraphView graphView Field Value Type Description BaseGraphView Methods | Improve this Doc View Source OnDrop(GraphView, Edge) Called when a new edge is dropped on a port. Declaration public virtual void OnDrop(GraphView graphView, Edge edge) Parameters Type Name Description GraphView graphView Reference to the GraphView. Edge edge The edge being created. | Improve this Doc View Source OnDropOutsidePort(Edge, Vector2) Called when edge is dropped in empty space. Declaration public virtual void OnDropOutsidePort(Edge edge, Vector2 position) Parameters Type Name Description Edge edge The edge being dropped. Vector2 position The position in empty space the edge is dropped on. Implements UnityEditor.Experimental.GraphView.IEdgeConnectorListener"
  },
  "api/GraphProcessor.BaseEdgeDragHelper.html": {
    "href": "api/GraphProcessor.BaseEdgeDragHelper.html",
    "title": "Class BaseEdgeDragHelper",
    "keywords": "Class BaseEdgeDragHelper Inheritance object EdgeDragHelper BaseEdgeDragHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class BaseEdgeDragHelper : EdgeDragHelper Constructors | Improve this Doc View Source BaseEdgeDragHelper(IEdgeConnectorListener) Declaration public BaseEdgeDragHelper(IEdgeConnectorListener listener) Parameters Type Name Description IEdgeConnectorListener listener Fields | Improve this Doc View Source compatiblePorts Declaration protected Dictionary<BaseNodeView, List<PortView>> compatiblePorts Field Value Type Description Dictionary<BaseNodeView, List<PortView>> | Improve this Doc View Source graphView Declaration protected GraphView graphView Field Value Type Description GraphView | Improve this Doc View Source listener Declaration protected readonly IEdgeConnectorListener listener Field Value Type Description IEdgeConnectorListener | Improve this Doc View Source nodeAdapter Declaration protected static NodeAdapter nodeAdapter Field Value Type Description NodeAdapter Properties | Improve this Doc View Source draggedPort The port the edge is being dragged from. Declaration public override Port draggedPort { get; set; } Property Value Type Description Port Overrides UnityEditor.Experimental.GraphView.EdgeDragHelper.draggedPort | Improve this Doc View Source edgeCandidate The edge being dragged. Declaration public override Edge edgeCandidate { get; set; } Property Value Type Description Edge Overrides UnityEditor.Experimental.GraphView.EdgeDragHelper.edgeCandidate | Improve this Doc View Source resetPositionOnPan Declaration public bool resetPositionOnPan { get; set; } Property Value Type Description bool Methods | Improve this Doc View Source CreateEdgeView() Declaration protected virtual EdgeView CreateEdgeView() Returns Type Description EdgeView | Improve this Doc View Source HandleMouseDown(MouseDownEvent) Handle mouse down event. Declaration public override bool HandleMouseDown(MouseDownEvent evt) Parameters Type Name Description MouseDownEvent evt The event. Returns Type Description bool True if the drag has been started. False otherwise. Overrides UnityEditor.Experimental.GraphView.EdgeDragHelper.HandleMouseDown(UnityEngine.UIElements.MouseDownEvent) | Improve this Doc View Source HandleMouseMove(MouseMoveEvent) Handle mouse move event. Declaration public override void HandleMouseMove(MouseMoveEvent evt) Parameters Type Name Description MouseMoveEvent evt The event. Overrides UnityEditor.Experimental.GraphView.EdgeDragHelper.HandleMouseMove(UnityEngine.UIElements.MouseMoveEvent) | Improve this Doc View Source HandleMouseUp(MouseUpEvent) Handle mouse up event. Declaration public override void HandleMouseUp(MouseUpEvent evt) Parameters Type Name Description MouseUpEvent evt The event. Overrides UnityEditor.Experimental.GraphView.EdgeDragHelper.HandleMouseUp(UnityEngine.UIElements.MouseUpEvent) | Improve this Doc View Source Reset(bool) Reset the state of the drag helper. Declaration public override void Reset(bool didConnect = false) Parameters Type Name Description bool didConnect Whether the connection was successful or not. View will not reset in this case. Overrides EdgeDragHelper.Reset(bool)"
  },
  "api/GraphProcessor.BaseGraph.html": {
    "href": "api/GraphProcessor.BaseGraph.html",
    "title": "Class BaseGraph",
    "keywords": "Class BaseGraph Inheritance object Object ScriptableObject BaseGraph ImpostorGraph Implements ISerializationCallbackReceiver Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class BaseGraph : ScriptableObject, ISerializationCallbackReceiver Fields | Improve this Doc View Source edges Json list of edges Declaration [SerializeField] public List<SerializableEdge> edges Field Value Type Description List<SerializableEdge> | Improve this Doc View Source edgesPerGUID Dictionary of edges per GUID, faster than a search in a list Declaration [NonSerialized] public Dictionary<string, SerializableEdge> edgesPerGUID Field Value Type Description Dictionary<string, SerializableEdge> | Improve this Doc View Source exposedParameters All exposed parameters in the graph Declaration [SerializeField] [SerializeReference] public List<ExposedParameter> exposedParameters Field Value Type Description List<ExposedParameter> | Improve this Doc View Source groups All groups in the graph Declaration [SerializeField] [FormerlySerializedAs(\"commentBlocks\")] public List<Group> groups Field Value Type Description List<Group> | Improve this Doc View Source invalidComputeOrder Invalid compute order number of a node can't process Declaration public static readonly int invalidComputeOrder Field Value Type Description int | Improve this Doc View Source loopComputeOrder Invalid compute order number of a node when it's inside a loop Declaration public static readonly int loopComputeOrder Field Value Type Description int | Improve this Doc View Source nodes List of all the nodes in the graph. Declaration [SerializeReference] public List<BaseNode> nodes Field Value Type Description List<BaseNode> | Improve this Doc View Source nodesPerGUID Dictionary to access node per GUID, faster than a search in a list Declaration [NonSerialized] public Dictionary<string, BaseNode> nodesPerGUID Field Value Type Description Dictionary<string, BaseNode> | Improve this Doc View Source pinnedElements All pinned elements in the graph Declaration [SerializeField] public List<PinnedElement> pinnedElements Field Value Type Description List<PinnedElement> | Improve this Doc View Source position Declaration public Vector3 position Field Value Type Description Vector3 | Improve this Doc View Source scale Declaration public Vector3 scale Field Value Type Description Vector3 | Improve this Doc View Source serializedNodes Json list of serialized nodes only used for copy pasting in the editor. Note that this field isn't serialized Declaration [SerializeField] [Obsolete(\"Use BaseGraph.nodes instead\")] public List<JsonElement> serializedNodes Field Value Type Description List<JsonElement> | Improve this Doc View Source stackNodes All Stack Nodes in the graph Declaration [SerializeField] [SerializeReference] public List<BaseStackNode> stackNodes Field Value Type Description List<BaseStackNode> | Improve this Doc View Source stickyNotes Declaration [SerializeField] public List<StickyNote> stickyNotes Field Value Type Description List<StickyNote> Properties | Improve this Doc View Source graphOutputs Declaration public HashSet<BaseNode> graphOutputs { get; } Property Value Type Description HashSet<BaseNode> | Improve this Doc View Source isEnabled Declaration public bool isEnabled { get; } Property Value Type Description bool Methods | Improve this Doc View Source AddExposedParameter(ExposedParameter) Add an already allocated / initialized parameter to the graph Declaration public string AddExposedParameter(ExposedParameter parameter) Parameters Type Name Description ExposedParameter parameter The parameter to add Returns Type Description string The unique id of the parameter | Improve this Doc View Source AddExposedParameter(string, Type, object) Add an exposed parameter Declaration public string AddExposedParameter(string name, Type type, object value = null) Parameters Type Name Description string name parameter name Type type parameter type (must be a subclass of ExposedParameter) object value default value Returns Type Description string The unique id of the parameter | Improve this Doc View Source AddGroup(Group) Add a group Declaration public void AddGroup(Group block) Parameters Type Name Description Group block | Improve this Doc View Source AddNode(BaseNode) Adds a node to the graph Declaration public BaseNode AddNode(BaseNode node) Parameters Type Name Description BaseNode node Returns Type Description BaseNode | Improve this Doc View Source AddStackNode(BaseStackNode) Add a StackNode Declaration public void AddStackNode(BaseStackNode stackNode) Parameters Type Name Description BaseStackNode stackNode | Improve this Doc View Source AddStickyNote(StickyNote) Add a sticky note Declaration public void AddStickyNote(StickyNote note) Parameters Type Name Description StickyNote note | Improve this Doc View Source ClosePinned(Type) Closes a pinned element of type viewType Declaration public void ClosePinned(Type viewType) Parameters Type Name Description Type viewType type of the pinned element | Improve this Doc View Source Connect(NodePort, NodePort, bool) Connect two ports with an edge Declaration public SerializableEdge Connect(NodePort inputPort, NodePort outputPort, bool autoDisconnectInputs = true) Parameters Type Name Description NodePort inputPort input port NodePort outputPort output port bool autoDisconnectInputs Returns Type Description SerializableEdge the connecting edge | Improve this Doc View Source Deserialize() Declaration public void Deserialize() | Improve this Doc View Source Disconnect(BaseNode, string, BaseNode, string) Disconnect two ports Declaration public void Disconnect(BaseNode inputNode, string inputFieldName, BaseNode outputNode, string outputFieldName) Parameters Type Name Description BaseNode inputNode input node string inputFieldName input field name BaseNode outputNode output node string outputFieldName output field name | Improve this Doc View Source Disconnect(SerializableEdge) Disconnect an edge Declaration public void Disconnect(SerializableEdge edge) Parameters Type Name Description SerializableEdge edge | Improve this Doc View Source Disconnect(string) Disconnect an edge Declaration public void Disconnect(string edgeGUID) Parameters Type Name Description string edgeGUID | Improve this Doc View Source GetExposedParameter(string) Get the exposed parameter from name Declaration public ExposedParameter GetExposedParameter(string name) Parameters Type Name Description string name name Returns Type Description ExposedParameter the parameter or null | Improve this Doc View Source GetExposedParameterFromGUID(string) Get exposed parameter from GUID Declaration public ExposedParameter GetExposedParameterFromGUID(string guid) Parameters Type Name Description string guid GUID of the parameter Returns Type Description ExposedParameter The parameter | Improve this Doc View Source GetLinkedScene() Get the linked scene. If there is no linked scene, it returns an invalid scene Declaration public Scene GetLinkedScene() Returns Type Description Scene | Improve this Doc View Source GetParameterValue(string) Get the parameter value Declaration public object GetParameterValue(string name) Parameters Type Name Description string name parameter name Returns Type Description object value | Improve this Doc View Source GetParameterValue<T>(string) Get the parameter value template Declaration public T GetParameterValue<T>(string name) Parameters Type Name Description string name parameter name Returns Type Description T value Type Parameters Name Description T type of the parameter | Improve this Doc View Source IsLinkedToScene() Return true when the graph is linked to a scene, false otherwise. Declaration public bool IsLinkedToScene() Returns Type Description bool | Improve this Doc View Source LinkToScene(Scene) Link the current graph to the scene in parameter, allowing the graph to pick and serialize objects from the scene. Declaration public void LinkToScene(Scene scene) Parameters Type Name Description Scene scene Target scene to link | Improve this Doc View Source MigrateGraphIfNeeded() Declaration public void MigrateGraphIfNeeded() | Improve this Doc View Source NotifyExposedParameterChanged(ExposedParameter) Update parameter visibility Declaration public void NotifyExposedParameterChanged(ExposedParameter parameter) Parameters Type Name Description ExposedParameter parameter The parameter | Improve this Doc View Source NotifyExposedParameterValueChanged(ExposedParameter) Declaration public void NotifyExposedParameterValueChanged(ExposedParameter parameter) Parameters Type Name Description ExposedParameter parameter | Improve this Doc View Source NotifyNodeChanged(BaseNode) Invoke the onGraphChanges event, can be used as trigger to execute the graph when the content of a node is changed Declaration public void NotifyNodeChanged(BaseNode node) Parameters Type Name Description BaseNode node | Improve this Doc View Source OnAfterDeserialize() Implement this method to receive a callback after Unity deserializes your object. Declaration public void OnAfterDeserialize() | Improve this Doc View Source OnAssetDeleted() Declaration public virtual void OnAssetDeleted() | Improve this Doc View Source OnBeforeSerialize() Implement this method to receive a callback before Unity serializes your object. Declaration public void OnBeforeSerialize() | Improve this Doc View Source OnDisable() Declaration protected virtual void OnDisable() | Improve this Doc View Source OnEnable() Declaration protected virtual void OnEnable() | Improve this Doc View Source OpenPinned(Type) Open a pinned element of type viewType Declaration public PinnedElement OpenPinned(Type viewType) Parameters Type Name Description Type viewType type of the pinned element Returns Type Description PinnedElement the pinned element | Improve this Doc View Source RemoveExposedParameter(ExposedParameter) Remove an exposed parameter Declaration public void RemoveExposedParameter(ExposedParameter ep) Parameters Type Name Description ExposedParameter ep the parameter to remove | Improve this Doc View Source RemoveExposedParameter(string) Remove an exposed parameter Declaration public void RemoveExposedParameter(string guid) Parameters Type Name Description string guid GUID of the parameter | Improve this Doc View Source RemoveGroup(Group) Removes a group Declaration public void RemoveGroup(Group block) Parameters Type Name Description Group block | Improve this Doc View Source RemoveNode(BaseNode) Removes a node from the graph Declaration public void RemoveNode(BaseNode node) Parameters Type Name Description BaseNode node | Improve this Doc View Source RemoveStackNode(BaseStackNode) Remove a StackNode Declaration public void RemoveStackNode(BaseStackNode stackNode) Parameters Type Name Description BaseStackNode stackNode | Improve this Doc View Source RemoveStickyNote(StickyNote) Removes a sticky note Declaration public void RemoveStickyNote(StickyNote note) Parameters Type Name Description StickyNote note | Improve this Doc View Source SetParameterValue(string, object) Set parameter value from name. (Warning: the parameter name can be changed by the user) Declaration public bool SetParameterValue(string name, object value) Parameters Type Name Description string name name of the parameter object value new value Returns Type Description bool true if the value have been assigned | Improve this Doc View Source TypesAreConnectable(Type, Type) Tell if two types can be connected in the context of a graph Declaration public static bool TypesAreConnectable(Type t1, Type t2) Parameters Type Name Description Type t1 Type t2 Returns Type Description bool | Improve this Doc View Source UpdateComputeOrder(ComputeOrderType) Update the compute order of the nodes in the graph Declaration public void UpdateComputeOrder(ComputeOrderType type = ComputeOrderType.DepthFirst) Parameters Type Name Description ComputeOrderType type Compute order type | Improve this Doc View Source UpdateExposedParameter(string, object) Update an exposed parameter value Declaration public void UpdateExposedParameter(string guid, object value) Parameters Type Name Description string guid GUID of the parameter object value new value | Improve this Doc View Source UpdateExposedParameterName(ExposedParameter, string) Update the exposed parameter name Declaration public void UpdateExposedParameterName(ExposedParameter parameter, string name) Parameters Type Name Description ExposedParameter parameter The parameter string name new name Events | Improve this Doc View Source onEnabled Triggered when the graph is enabled Declaration public event Action onEnabled Event Type Type Description Action | Improve this Doc View Source onExposedParameterListChanged Triggered when something is changed in the list of exposed parameters Declaration public event Action onExposedParameterListChanged Event Type Type Description Action | Improve this Doc View Source onExposedParameterModified Declaration public event Action<ExposedParameter> onExposedParameterModified Event Type Type Description Action<ExposedParameter> | Improve this Doc View Source onExposedParameterValueChanged Declaration public event Action<ExposedParameter> onExposedParameterValueChanged Event Type Type Description Action<ExposedParameter> | Improve this Doc View Source onGraphChanges Triggered when the graph is changed Declaration public event Action<GraphChanges> onGraphChanges Event Type Type Description Action<GraphChanges> | Improve this Doc View Source onSceneLinked Triggered when the graph is linked to an active scene. Declaration public event Action<Scene> onSceneLinked Event Type Type Description Action<Scene> Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.BaseGraphProcessor.html": {
    "href": "api/GraphProcessor.BaseGraphProcessor.html",
    "title": "Class BaseGraphProcessor",
    "keywords": "Class BaseGraphProcessor Graph processor Inheritance object BaseGraphProcessor JobGraphProcessor ProcessGraphProcessor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public abstract class BaseGraphProcessor Constructors | Improve this Doc View Source BaseGraphProcessor(BaseGraph) Manage graph scheduling and processing Declaration public BaseGraphProcessor(BaseGraph graph) Parameters Type Name Description BaseGraph graph Graph to be processed Fields | Improve this Doc View Source graph Graph processor Declaration protected BaseGraph graph Field Value Type Description BaseGraph Methods | Improve this Doc View Source Run() Schedule the graph into the job system Declaration public abstract void Run() | Improve this Doc View Source UpdateComputeOrder() Graph processor Declaration public abstract void UpdateComputeOrder()"
  },
  "api/GraphProcessor.BaseGraphView.ComputeOrderUpdatedDelegate.html": {
    "href": "api/GraphProcessor.BaseGraphView.ComputeOrderUpdatedDelegate.html",
    "title": "Delegate BaseGraphView.ComputeOrderUpdatedDelegate",
    "keywords": "Delegate BaseGraphView.ComputeOrderUpdatedDelegate Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public delegate void BaseGraphView.ComputeOrderUpdatedDelegate()"
  },
  "api/GraphProcessor.BaseGraphView.NodeDuplicatedDelegate.html": {
    "href": "api/GraphProcessor.BaseGraphView.NodeDuplicatedDelegate.html",
    "title": "Delegate BaseGraphView.NodeDuplicatedDelegate",
    "keywords": "Delegate BaseGraphView.NodeDuplicatedDelegate Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public delegate void BaseGraphView.NodeDuplicatedDelegate(BaseNode duplicatedNode, BaseNode newNode) Parameters Type Name Description BaseNode duplicatedNode BaseNode newNode"
  },
  "api/GraphProcessor.BaseGraphView.html": {
    "href": "api/GraphProcessor.BaseGraphView.html",
    "title": "Class BaseGraphView",
    "keywords": "Class BaseGraphView Base class to write a custom view for a node Inheritance object CallbackEventHandler Focusable VisualElement GraphView BaseGraphView ImpostorGraphView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelection IDisposable Inherited Members GraphView.ports GraphView.UpdateViewTransform(Vector3, Vector3) GraphView.GetPortCenterOverride(Port, out Vector2) GraphView.AddLayer(int) GraphView.GetElementByGuid(string) GraphView.GetNodeByGuid(string) GraphView.GetPortByGuid(string) GraphView.GetEdgeByGuid(string) GraphView.SetupZoom(float, float) GraphView.SetupZoom(float, float, float, float) GraphView.ValidateTransform() GraphView.AddToSelection(ISelectable) GraphView.RemoveFromSelection(ISelectable) GraphView.ClearSelection() GraphView.ExecuteDefaultActionAtTarget(EventBase) GraphView.ExecuteDefaultAction(EventBase) GraphView.CollectElements(IEnumerable<GraphElement>, HashSet<GraphElement>, Func<GraphElement, bool>) GraphView.CollectCopyableGraphElements(IEnumerable<GraphElement>, HashSet<GraphElement>) GraphView.CopySelectionCallback() GraphView.CutSelectionCallback() GraphView.PasteCallback() GraphView.DuplicateSelectionCallback() GraphView.DeleteSelectionCallback(GraphView.AskUser) GraphView.SerializeGraphElements(IEnumerable<GraphElement>) GraphView.CanPasteSerializedData(string) GraphView.UnserializeAndPasteOperation(string, string) GraphView.DeleteSelectionOperation(string, GraphView.AskUser) GraphView.AddElement(GraphElement) GraphView.RemoveElement(GraphElement) GraphView.DeleteSelection() GraphView.DeleteElements(IEnumerable<GraphElement>) GraphView.FrameAll() GraphView.FrameSelection() GraphView.FrameOrigin() GraphView.FramePrev() GraphView.FrameNext() GraphView.FramePrev(Func<GraphElement, bool>) GraphView.FrameNext(Func<GraphElement, bool>) GraphView.CalculateRectToFitAll(VisualElement) GraphView.CalculateFrameTransform(Rect, Rect, int, out Vector3, out Vector3) GraphView.GetBlackboard() GraphView.ReleaseBlackboard(Blackboard) GraphView.CreatePlacematContainer() GraphView.nodeCreationRequest GraphView.graphViewChanged GraphView.groupTitleChanged GraphView.elementsAddedToGroup GraphView.elementsRemovedFromGroup GraphView.elementsInsertedToStackNode GraphView.elementsRemovedFromStackNode GraphView.elementResized GraphView.viewTransformChanged GraphView.supportsWindowedBlackboard GraphView.contentViewContainer GraphView.viewport GraphView.viewTransform GraphView.isReframable GraphView.contentContainer GraphView.placematContainer GraphView.graphElements GraphView.nodes GraphView.edges GraphView.minScale GraphView.maxScale GraphView.scaleStep GraphView.referenceScale GraphView.scale GraphView.zoomerMaxElementCountWithPixelCacheRegen GraphView.selection GraphView.canPaste GraphView.canDuplicateSelection GraphView.canDeleteSelection GraphView.serializeGraphElements GraphView.canPasteSerializedData GraphView.unserializeAndPaste GraphView.deleteSelection VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class BaseGraphView : GraphView, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelection, IDisposable Constructors | Improve this Doc View Source BaseGraphView(EditorWindow) Base class to write a custom view for a node Declaration public BaseGraphView(EditorWindow window) Parameters Type Name Description EditorWindow window Fields | Improve this Doc View Source connectorListener Connector listener that will create the edges between ports Declaration public BaseEdgeConnectorListener connectorListener Field Value Type Description BaseEdgeConnectorListener | Improve this Doc View Source edgeViews List of all edge views in the graph Declaration public List<EdgeView> edgeViews Field Value Type Description List<EdgeView> | Improve this Doc View Source graph Graph that owns of the node Declaration public BaseGraph graph Field Value Type Description BaseGraph | Improve this Doc View Source groupViews List of all group views in the graph Declaration public List<GroupView> groupViews Field Value Type Description List<GroupView> | Improve this Doc View Source nodeViews List of all node views in the graph Declaration public List<BaseNodeView> nodeViews Field Value Type Description List<BaseNodeView> | Improve this Doc View Source nodeViewsPerNode Dictionary of the node views accessed view the node instance, faster than a Find in the node view list Declaration public Dictionary<BaseNode, BaseNodeView> nodeViewsPerNode Field Value Type Description Dictionary<BaseNode, BaseNodeView> | Improve this Doc View Source stackNodeViews List of all stack node views in the graph Declaration public List<BaseStackNodeView> stackNodeViews Field Value Type Description List<BaseStackNodeView> Properties | Improve this Doc View Source canCopySelection Base class to write a custom view for a node Declaration protected override bool canCopySelection { get; } Property Value Type Description bool Overrides UnityEditor.Experimental.GraphView.GraphView.canCopySelection | Improve this Doc View Source canCutSelection Base class to write a custom view for a node Declaration protected override bool canCutSelection { get; } Property Value Type Description bool Overrides UnityEditor.Experimental.GraphView.GraphView.canCutSelection | Improve this Doc View Source exposedParameterFactory Workaround object for creating exposed parameter property fields. Declaration public ExposedParameterFieldFactory exposedParameterFactory { get; } Property Value Type Description ExposedParameterFieldFactory | Improve this Doc View Source nodeInspector Object to handle nodes that shows their UI in the inspector. Declaration [SerializeField] protected NodeInspectorObject nodeInspector { get; } Property Value Type Description NodeInspectorObject | Improve this Doc View Source serializedGraph Base class to write a custom view for a node Declaration public SerializedObject serializedGraph { get; } Property Value Type Description SerializedObject Methods | Improve this Doc View Source AddGroup(Group) Base class to write a custom view for a node Declaration public GroupView AddGroup(Group block) Parameters Type Name Description Group block Returns Type Description GroupView | Improve this Doc View Source AddGroupView(Group) Base class to write a custom view for a node Declaration public GroupView AddGroupView(Group block) Parameters Type Name Description Group block Returns Type Description GroupView | Improve this Doc View Source AddNode(BaseNode) Base class to write a custom view for a node Declaration public BaseNodeView AddNode(BaseNode node) Parameters Type Name Description BaseNode node Returns Type Description BaseNodeView | Improve this Doc View Source AddNodeView(BaseNode) Base class to write a custom view for a node Declaration public BaseNodeView AddNodeView(BaseNode node) Parameters Type Name Description BaseNode node Returns Type Description BaseNodeView | Improve this Doc View Source AddRelayNode(PortView, PortView, Vector2) Base class to write a custom view for a node Declaration public RelayNodeView AddRelayNode(PortView inputPort, PortView outputPort, Vector2 position) Parameters Type Name Description PortView inputPort PortView outputPort Vector2 position Returns Type Description RelayNodeView | Improve this Doc View Source AddSelectionsToGroup(GroupView) Base class to write a custom view for a node Declaration public void AddSelectionsToGroup(GroupView view) Parameters Type Name Description GroupView view | Improve this Doc View Source AddStackNode(BaseStackNode) Base class to write a custom view for a node Declaration public BaseStackNodeView AddStackNode(BaseStackNode stackNode) Parameters Type Name Description BaseStackNode stackNode Returns Type Description BaseStackNodeView | Improve this Doc View Source AddStackNodeView(BaseStackNode) Base class to write a custom view for a node Declaration public BaseStackNodeView AddStackNodeView(BaseStackNode stackNode) Parameters Type Name Description BaseStackNode stackNode Returns Type Description BaseStackNodeView | Improve this Doc View Source BuildContextualMenu(ContextualMenuPopulateEvent) Build the contextual menu shown when right clicking inside the graph view Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt Overrides UnityEditor.Experimental.GraphView.GraphView.BuildContextualMenu(UnityEngine.UIElements.ContextualMenuPopulateEvent) | Improve this Doc View Source BuildGroupContextualMenu(ContextualMenuPopulateEvent, int) Add the New Group entry to the context menu Declaration protected virtual void BuildGroupContextualMenu(ContextualMenuPopulateEvent evt, int menuPosition = -1) Parameters Type Name Description ContextualMenuPopulateEvent evt int menuPosition | Improve this Doc View Source BuildHelpContextualMenu(ContextualMenuPopulateEvent) Add the Help entry to the context menu Declaration protected void BuildHelpContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt | Improve this Doc View Source BuildSaveAssetContextualMenu(ContextualMenuPopulateEvent) Add the Save Asset entry to the context menu Declaration protected virtual void BuildSaveAssetContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt | Improve this Doc View Source BuildSelectAssetContextualMenu(ContextualMenuPopulateEvent) Add the Select Asset entry to the context menu Declaration protected virtual void BuildSelectAssetContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt | Improve this Doc View Source BuildStickyNoteContextualMenu(ContextualMenuPopulateEvent, int) -Add the New Sticky Note entry to the context menu Declaration protected virtual void BuildStickyNoteContextualMenu(ContextualMenuPopulateEvent evt, int menuPosition = -1) Parameters Type Name Description ContextualMenuPopulateEvent evt int menuPosition | Improve this Doc View Source BuildViewContextualMenu(ContextualMenuPopulateEvent) Add the View entry to the context menu Declaration protected virtual void BuildViewContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt | Improve this Doc View Source CanConnectEdge(EdgeView, bool) Base class to write a custom view for a node Declaration public bool CanConnectEdge(EdgeView e, bool autoDisconnectInputs = true) Parameters Type Name Description EdgeView e bool autoDisconnectInputs Returns Type Description bool | Improve this Doc View Source ClearGraphElements() Base class to write a custom view for a node Declaration public void ClearGraphElements() | Improve this Doc View Source ClosePinned(Type, PinnedElementView) Base class to write a custom view for a node Declaration public void ClosePinned(Type type, PinnedElementView elem) Parameters Type Name Description Type type PinnedElementView elem | Improve this Doc View Source ClosePinned<T>(PinnedElementView) Base class to write a custom view for a node Declaration public void ClosePinned<T>(PinnedElementView view) where T : PinnedElementView Parameters Type Name Description PinnedElementView view Type Parameters Name Description T | Improve this Doc View Source Connect(EdgeView, bool) Base class to write a custom view for a node Declaration public bool Connect(EdgeView e, bool autoDisconnectInputs = true) Parameters Type Name Description EdgeView e bool autoDisconnectInputs Returns Type Description bool | Improve this Doc View Source Connect(PortView, PortView, bool) Base class to write a custom view for a node Declaration public bool Connect(PortView inputPortView, PortView outputPortView, bool autoDisconnectInputs = true) Parameters Type Name Description PortView inputPortView PortView outputPortView bool autoDisconnectInputs Returns Type Description bool | Improve this Doc View Source ConnectView(EdgeView, bool) Base class to write a custom view for a node Declaration public bool ConnectView(EdgeView e, bool autoDisconnectInputs = true) Parameters Type Name Description EdgeView e bool autoDisconnectInputs Returns Type Description bool | Improve this Doc View Source CreateEdgeConnectorListener() Allow you to create your own edge connector listener Declaration protected virtual BaseEdgeConnectorListener CreateEdgeConnectorListener() Returns Type Description BaseEdgeConnectorListener | Improve this Doc View Source CreateEdgeView() Base class to write a custom view for a node Declaration public virtual EdgeView CreateEdgeView() Returns Type Description EdgeView | Improve this Doc View Source CreateNodeInspectorObject() Base class to write a custom view for a node Declaration protected virtual NodeInspectorObject CreateNodeInspectorObject() Returns Type Description NodeInspectorObject | Improve this Doc View Source DelayedDeleteSelection() Deletes the selected content, can be called form an IMGUI container Declaration public void DelayedDeleteSelection() | Improve this Doc View Source Disconnect(EdgeView, bool) Base class to write a custom view for a node Declaration public void Disconnect(EdgeView e, bool refreshPorts = true) Parameters Type Name Description EdgeView e bool refreshPorts | Improve this Doc View Source DisconnectView(EdgeView, bool) Base class to write a custom view for a node Declaration public void DisconnectView(EdgeView e, bool refreshPorts = true) Parameters Type Name Description EdgeView e bool refreshPorts | Improve this Doc View Source Dispose() Call this function when you want to remove this view Declaration public void Dispose() | Improve this Doc View Source FilterCreateNodeMenuEntries() Base class to write a custom view for a node Declaration public virtual IEnumerable<(string path, Type type)> FilterCreateNodeMenuEntries() Returns Type Description IEnumerable<(string path, Type type)> | Improve this Doc View Source GetCompatiblePorts(Port, NodeAdapter) Get all ports compatible with given port. Declaration public override List<Port> GetCompatiblePorts(Port startPort, NodeAdapter nodeAdapter) Parameters Type Name Description Port startPort Start port to validate against. NodeAdapter nodeAdapter Node adapter. Returns Type Description List<Port> List of compatible ports. Overrides UnityEditor.Experimental.GraphView.GraphView.GetCompatiblePorts(UnityEditor.Experimental.GraphView.Port, UnityEditor.Experimental.GraphView.NodeAdapter) | Improve this Doc View Source GetPinnedElementStatus(Type) Base class to write a custom view for a node Declaration public DropdownMenuAction.Status GetPinnedElementStatus(Type type) Parameters Type Name Description Type type Returns Type Description DropdownMenuAction.Status | Improve this Doc View Source GetPinnedElementStatus<T>() Base class to write a custom view for a node Declaration public DropdownMenuAction.Status GetPinnedElementStatus<T>() where T : PinnedElementView Returns Type Description DropdownMenuAction.Status Type Parameters Name Description T | Improve this Doc View Source Initialize(BaseGraph) Base class to write a custom view for a node Declaration public void Initialize(BaseGraph graph) Parameters Type Name Description BaseGraph graph | Improve this Doc View Source InitializeManipulators() Base class to write a custom view for a node Declaration protected virtual void InitializeManipulators() | Improve this Doc View Source InitializeView() Base class to write a custom view for a node Declaration protected virtual void InitializeView() | Improve this Doc View Source KeyDownCallback(KeyDownEvent) Base class to write a custom view for a node Declaration protected virtual void KeyDownCallback(KeyDownEvent e) Parameters Type Name Description KeyDownEvent e | Improve this Doc View Source OpenPinned(Type) Base class to write a custom view for a node Declaration public void OpenPinned(Type type) Parameters Type Name Description Type type | Improve this Doc View Source OpenPinned<T>() Base class to write a custom view for a node Declaration public void OpenPinned<T>() where T : PinnedElementView Type Parameters Name Description T | Improve this Doc View Source RegisterCompleteObjectUndo(string) Base class to write a custom view for a node Declaration public void RegisterCompleteObjectUndo(string name) Parameters Type Name Description string name | Improve this Doc View Source Reload() Base class to write a custom view for a node Declaration protected virtual void Reload() | Improve this Doc View Source RemoveEdges() Base class to write a custom view for a node Declaration public void RemoveEdges() | Improve this Doc View Source RemoveGroups() Base class to write a custom view for a node Declaration public void RemoveGroups() | Improve this Doc View Source RemoveNode(BaseNode) Base class to write a custom view for a node Declaration public void RemoveNode(BaseNode node) Parameters Type Name Description BaseNode node | Improve this Doc View Source RemoveNodeView(BaseNodeView) Base class to write a custom view for a node Declaration public void RemoveNodeView(BaseNodeView nodeView) Parameters Type Name Description BaseNodeView nodeView | Improve this Doc View Source RemoveStackNodeView(BaseStackNodeView) Base class to write a custom view for a node Declaration public void RemoveStackNodeView(BaseStackNodeView stackNodeView) Parameters Type Name Description BaseStackNodeView stackNodeView | Improve this Doc View Source ResetPositionAndZoom() Base class to write a custom view for a node Declaration public void ResetPositionAndZoom() | Improve this Doc View Source SaveGraphToDisk() Base class to write a custom view for a node Declaration public void SaveGraphToDisk() | Improve this Doc View Source SyncSerializedPropertyPathes() Update all the serialized property bindings (in case a node was deleted / added, the property pathes needs to be updated) Declaration public void SyncSerializedPropertyPathes() | Improve this Doc View Source ToggleView(Type) Base class to write a custom view for a node Declaration public void ToggleView(Type type) Parameters Type Name Description Type type | Improve this Doc View Source ToggleView<T>() Base class to write a custom view for a node Declaration public void ToggleView<T>() where T : PinnedElementView Type Parameters Name Description T | Improve this Doc View Source UpdateComputeOrder() Base class to write a custom view for a node Declaration public void UpdateComputeOrder() | Improve this Doc View Source UpdateNodeInspectorSelection() Base class to write a custom view for a node Declaration public void UpdateNodeInspectorSelection() Events | Improve this Doc View Source computeOrderUpdated Triggered just after the compute order of the graph is updated Declaration public event BaseGraphView.ComputeOrderUpdatedDelegate computeOrderUpdated Event Type Type Description BaseGraphView.ComputeOrderUpdatedDelegate | Improve this Doc View Source initialized Triggered just after the graph is initialized Declaration public event Action initialized Event Type Type Description Action | Improve this Doc View Source nodeDuplicated Triggered when a node is duplicated (crt-d) or copy-pasted (crtl-c/crtl-v) Declaration public event BaseGraphView.NodeDuplicatedDelegate nodeDuplicated Event Type Type Description BaseGraphView.NodeDuplicatedDelegate | Improve this Doc View Source onExposedParameterListChanged Same event than BaseGraph.onExposedParameterListChanged Safe event (not triggered in case the graph is null). Declaration public event Action onExposedParameterListChanged Event Type Type Description Action | Improve this Doc View Source onExposedParameterModified Same event than BaseGraph.onExposedParameterModified Safe event (not triggered in case the graph is null). Declaration public event Action<ExposedParameter> onExposedParameterModified Event Type Type Description Action<ExposedParameter> Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelection IDisposable"
  },
  "api/GraphProcessor.BaseGraphWindow.html": {
    "href": "api/GraphProcessor.BaseGraphWindow.html",
    "title": "Class BaseGraphWindow",
    "keywords": "Class BaseGraphWindow Inheritance object Object ScriptableObject EditorWindow BaseGraphWindow ImpostorGraphWindow Inherited Members EditorWindow.BeginWindows() EditorWindow.EndWindows() EditorWindow.ShowNotification(GUIContent) EditorWindow.ShowNotification(GUIContent, double) EditorWindow.RemoveNotification() EditorWindow.ShowTab() EditorWindow.Focus() EditorWindow.ShowUtility() EditorWindow.ShowPopup() EditorWindow.ShowModalUtility() EditorWindow.ShowAsDropDown(Rect, Vector2) EditorWindow.Show() EditorWindow.Show(bool) EditorWindow.ShowAuxWindow() EditorWindow.ShowModal() EditorWindow.GetWindow(Type, bool, string, bool) EditorWindow.GetWindow(Type, bool, string) EditorWindow.GetWindow(Type, bool) EditorWindow.GetWindow(Type) EditorWindow.GetWindowWithRect(Type, Rect, bool, string) EditorWindow.GetWindowWithRect(Type, Rect, bool) EditorWindow.GetWindowWithRect(Type, Rect) EditorWindow.GetWindow<T>() EditorWindow.GetWindow<T>(bool) EditorWindow.GetWindow<T>(bool, string) EditorWindow.GetWindow<T>(string) EditorWindow.GetWindow<T>(string, bool) EditorWindow.GetWindow<T>(bool, string, bool) EditorWindow.GetWindow<T>(params Type[]) EditorWindow.GetWindow<T>(string, params Type[]) EditorWindow.GetWindow<T>(string, bool, params Type[]) EditorWindow.CreateWindow<T>(params Type[]) EditorWindow.CreateWindow<T>(string, params Type[]) EditorWindow.HasOpenInstances<T>() EditorWindow.FocusWindowIfItsOpen(Type) EditorWindow.FocusWindowIfItsOpen<T>() EditorWindow.GetWindowWithRect<T>(Rect) EditorWindow.GetWindowWithRect<T>(Rect, bool) EditorWindow.GetWindowWithRect<T>(Rect, bool, string) EditorWindow.GetWindowWithRect<T>(Rect, bool, string, bool) EditorWindow.SaveChanges() EditorWindow.DiscardChanges() EditorWindow.Close() EditorWindow.Repaint() EditorWindow.SendEvent(Event) EditorWindow.GetExtraPaneTypes() EditorWindow.TryGetOverlay(string, out Overlay) EditorWindow.OnBackingScaleFactorChanged() EditorWindow.dataModeController EditorWindow.rootVisualElement EditorWindow.overlayCanvas EditorWindow.wantsMouseMove EditorWindow.wantsMouseEnterLeaveWindow EditorWindow.wantsLessLayoutEvents EditorWindow.autoRepaintOnSceneChange EditorWindow.maximized EditorWindow.hasFocus EditorWindow.docked EditorWindow.focusedWindow EditorWindow.mouseOverWindow EditorWindow.hasUnsavedChanges EditorWindow.saveChangesMessage EditorWindow.minSize EditorWindow.maxSize EditorWindow.title EditorWindow.titleContent EditorWindow.depthBufferBits EditorWindow.antiAlias EditorWindow.position ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [Serializable] public abstract class BaseGraphWindow : EditorWindow Fields | Improve this Doc View Source graph Declaration [SerializeField] protected BaseGraph graph Field Value Type Description BaseGraph | Improve this Doc View Source graphView Declaration protected BaseGraphView graphView Field Value Type Description BaseGraphView | Improve this Doc View Source rootView Declaration protected VisualElement rootView Field Value Type Description VisualElement Properties | Improve this Doc View Source isGraphLoaded Declaration public bool isGraphLoaded { get; } Property Value Type Description bool Methods | Improve this Doc View Source InitializeGraph(BaseGraph) Declaration public void InitializeGraph(BaseGraph graph) Parameters Type Name Description BaseGraph graph | Improve this Doc View Source InitializeGraphView(BaseGraphView) Declaration protected virtual void InitializeGraphView(BaseGraphView view) Parameters Type Name Description BaseGraphView view | Improve this Doc View Source InitializeWindow(BaseGraph) Declaration protected abstract void InitializeWindow(BaseGraph graph) Parameters Type Name Description BaseGraph graph | Improve this Doc View Source OnDestroy() Called by Unity when the window is closed Declaration protected virtual void OnDestroy() | Improve this Doc View Source OnDisable() Called by Unity when the window is disabled (happens on domain reload) Declaration protected virtual void OnDisable() | Improve this Doc View Source OnEnable() Called by Unity when the window is enabled / opened Declaration protected virtual void OnEnable() | Improve this Doc View Source OnGraphDeleted() Declaration public virtual void OnGraphDeleted() | Improve this Doc View Source Update() Declaration protected virtual void Update() Events | Improve this Doc View Source graphLoaded Declaration public event Action<BaseGraph> graphLoaded Event Type Type Description Action<BaseGraph> | Improve this Doc View Source graphUnloaded Declaration public event Action<BaseGraph> graphUnloaded Event Type Type Description Action<BaseGraph>"
  },
  "api/GraphProcessor.BaseNode.ProcessDelegate.html": {
    "href": "api/GraphProcessor.BaseNode.ProcessDelegate.html",
    "title": "Delegate BaseNode.ProcessDelegate",
    "keywords": "Delegate BaseNode.ProcessDelegate Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public delegate void BaseNode.ProcessDelegate()"
  },
  "api/GraphProcessor.BaseNode.html": {
    "href": "api/GraphProcessor.BaseNode.html",
    "title": "Class BaseNode",
    "keywords": "Class BaseNode Inheritance object BaseNode ParameterNode ImpostorNode OutputNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public abstract class BaseNode Constructors | Improve this Doc View Source BaseNode() Declaration protected BaseNode() Fields | Improve this Doc View Source GUID Declaration public string GUID Field Value Type Description string | Improve this Doc View Source computeOrder Declaration public int computeOrder Field Value Type Description int | Improve this Doc View Source debug Is debug visible Declaration public bool debug Field Value Type Description bool | Improve this Doc View Source expanded Is the node expanded Declaration public bool expanded Field Value Type Description bool | Improve this Doc View Source graph Declaration [NonSerialized] protected BaseGraph graph Field Value Type Description BaseGraph | Improve this Doc View Source inputPorts Container of input ports Declaration [NonSerialized] public readonly NodeInputPortContainer inputPorts Field Value Type Description NodeInputPortContainer | Improve this Doc View Source nodeLock Node locked state Declaration public bool nodeLock Field Value Type Description bool | Improve this Doc View Source outputPorts Container of output ports Declaration [NonSerialized] public readonly NodeOutputPortContainer outputPorts Field Value Type Description NodeOutputPortContainer | Improve this Doc View Source position Declaration public Rect position Field Value Type Description Rect Properties | Improve this Doc View Source canProcess Tell wether or not the node can be processed. Do not check anything from inputs because this step happens before inputs are sent to the node Declaration public virtual bool canProcess { get; } Property Value Type Description bool | Improve this Doc View Source color The accent color of the node Declaration public virtual Color color { get; } Property Value Type Description Color | Improve this Doc View Source createdFromDuplication Is the node created from a duplicate operation (either ctrl-D or copy/paste). Declaration public bool createdFromDuplication { get; } Property Value Type Description bool | Improve this Doc View Source createdWithinGroup True only when the node was created from a duplicate operation and is inside a group that was also duplicated at the same time. Declaration public bool createdWithinGroup { get; } Property Value Type Description bool | Improve this Doc View Source deletable True if the node can be deleted, false otherwise Declaration public virtual bool deletable { get; } Property Value Type Description bool | Improve this Doc View Source isLocked Is the node is locked (if locked it can't be moved) Declaration public virtual bool isLocked { get; } Property Value Type Description bool | Improve this Doc View Source isRenamable Can the node be renamed in the UI. By default a node can be renamed by double clicking it's name. Declaration public virtual bool isRenamable { get; } Property Value Type Description bool | Improve this Doc View Source layoutStyle Set a custom uss file for the node. We use a Resources.Load to get the stylesheet so be sure to put the correct resources path https://docs.unity3d.com/ScriptReference/Resources.Load.html Declaration public virtual string layoutStyle { get; } Property Value Type Description string | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public virtual string name { get; } Property Value Type Description string | Improve this Doc View Source needsInspector Does the node needs to be visible in the inspector (when selected). Declaration public virtual bool needsInspector { get; } Property Value Type Description bool | Improve this Doc View Source showControlsOnHover Show the node controlContainer only when the mouse is over the node Declaration public virtual bool showControlsOnHover { get; } Property Value Type Description bool | Improve this Doc View Source unlockable If the node can be locked or not Declaration public virtual bool unlockable { get; } Property Value Type Description bool Methods | Improve this Doc View Source AddMessage(string, NodeMessageType) Add a message on the node Declaration public void AddMessage(string message, NodeMessageType messageType) Parameters Type Name Description string message NodeMessageType messageType | Improve this Doc View Source AddPort(bool, string, PortData) Add a port Declaration public void AddPort(bool input, string fieldName, PortData portData) Parameters Type Name Description bool input is input port string fieldName C# field name PortData portData Data of the port | Improve this Doc View Source CanResetPort(NodePort) Declaration protected virtual bool CanResetPort(NodePort port) Parameters Type Name Description NodePort port Returns Type Description bool | Improve this Doc View Source ClearMessages() Remove all messages on the node Declaration public void ClearMessages() | Improve this Doc View Source CreateFromType(Type, Vector2) Creates a node of type nodeType at a certain position Declaration public static BaseNode CreateFromType(Type nodeType, Vector2 position) Parameters Type Name Description Type nodeType Vector2 position position in the graph in pixels Returns Type Description BaseNode the node instance | Improve this Doc View Source CreateFromType<T>(Vector2) Creates a node of type T at a certain position Declaration public static T CreateFromType<T>(Vector2 position) where T : BaseNode Parameters Type Name Description Vector2 position position in the graph in pixels Returns Type Description T the node instance Type Parameters Name Description T type of the node | Improve this Doc View Source Destroy() Called when the node is removed Declaration protected virtual void Destroy() | Improve this Doc View Source Disable() Called when the node is disabled Declaration protected virtual void Disable() | Improve this Doc View Source Enable() Called when the node is enabled Declaration protected virtual void Enable() | Improve this Doc View Source FindInDependencies(Func<BaseNode, bool>) Return a node matching the condition in the dependencies of the node Declaration public BaseNode FindInDependencies(Func<BaseNode, bool> condition) Parameters Type Name Description Func<BaseNode, bool> condition Condition to choose the node Returns Type Description BaseNode Matched node or null | Improve this Doc View Source GetAllEdges() Return all the connected edges of the node Declaration public IEnumerable<SerializableEdge> GetAllEdges() Returns Type Description IEnumerable<SerializableEdge> | Improve this Doc View Source GetAllPorts() Return all the ports of the node Declaration public IEnumerable<NodePort> GetAllPorts() Returns Type Description IEnumerable<NodePort> | Improve this Doc View Source GetCustomName() Get the name of the node. If the node have a custom name (set using the UI by double clicking on the node title) then it will return this name first, otherwise it returns the value of the name field. Declaration public string GetCustomName() Returns Type Description string The name of the node as written in the title | Improve this Doc View Source GetInputNodes() Get all the nodes connected to the input ports of this node Declaration public IEnumerable<BaseNode> GetInputNodes() Returns Type Description IEnumerable<BaseNode> an enumerable of node | Improve this Doc View Source GetNodeFields() Declaration public virtual FieldInfo[] GetNodeFields() Returns Type Description FieldInfo[] | Improve this Doc View Source GetOutputNodes() Get all the nodes connected to the output ports of this node Declaration public IEnumerable<BaseNode> GetOutputNodes() Returns Type Description IEnumerable<BaseNode> an enumerable of node | Improve this Doc View Source GetPort(string, string) Get the port from field name and identifier Declaration public NodePort GetPort(string fieldName, string identifier) Parameters Type Name Description string fieldName C# field name string identifier Unique port identifier Returns Type Description NodePort | Improve this Doc View Source Initialize(BaseGraph) Declaration public void Initialize(BaseGraph graph) Parameters Type Name Description BaseGraph graph | Improve this Doc View Source InitializePorts() Use this function to initialize anything related to ports generation in your node This will allow the node creation menu to correctly recognize ports that can be connected between nodes Declaration public virtual void InitializePorts() | Improve this Doc View Source InvokeOnProcessed() Declaration public void InvokeOnProcessed() | Improve this Doc View Source IsFieldInput(string) Is the port an input Declaration public bool IsFieldInput(string fieldName) Parameters Type Name Description string fieldName Returns Type Description bool | Improve this Doc View Source OnEdgeConnected(SerializableEdge) Declaration public void OnEdgeConnected(SerializableEdge edge) Parameters Type Name Description SerializableEdge edge | Improve this Doc View Source OnEdgeDisconnected(SerializableEdge) Declaration public void OnEdgeDisconnected(SerializableEdge edge) Parameters Type Name Description SerializableEdge edge | Improve this Doc View Source OnNodeCreated() Called only when the node is created, not when instantiated Declaration public virtual void OnNodeCreated() | Improve this Doc View Source OnProcess() Declaration public void OnProcess() | Improve this Doc View Source OverrideFieldOrder(IEnumerable<FieldInfo>) Override the field order inside the node. It allows to re-order all the ports and field in the UI. Declaration public virtual IEnumerable<FieldInfo> OverrideFieldOrder(IEnumerable<FieldInfo> fields) Parameters Type Name Description IEnumerable<FieldInfo> fields List of fields to sort Returns Type Description IEnumerable<FieldInfo> Sorted list of fields | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected virtual void Process() | Improve this Doc View Source RemoveMessage(string) Remove a message on the node Declaration public void RemoveMessage(string message) Parameters Type Name Description string message | Improve this Doc View Source RemoveMessageContains(string) Remove a message that contains Declaration public void RemoveMessageContains(string subMessage) Parameters Type Name Description string subMessage | Improve this Doc View Source RemovePort(bool, NodePort) Remove a port Declaration public void RemovePort(bool input, NodePort port) Parameters Type Name Description bool input is input port NodePort port the port to delete | Improve this Doc View Source RemovePort(bool, string) Remove port(s) from field name Declaration public void RemovePort(bool input, string fieldName) Parameters Type Name Description bool input is input string fieldName C# field name | Improve this Doc View Source SetCustomName(string) Set the custom name of the node. This is intended to be used by renamable nodes. This custom name will be serialized inside the node. Declaration public void SetCustomName(string customName) Parameters Type Name Description string customName | Improve this Doc View Source UpdateAllPorts() Update all ports of the node Declaration public bool UpdateAllPorts() Returns Type Description bool | Improve this Doc View Source UpdateAllPortsLocal() Update all ports of the node without updating the connected ports. Only use this method when you need to update all the nodes ports in your graph. Declaration public bool UpdateAllPortsLocal() Returns Type Description bool | Improve this Doc View Source UpdatePortsForField(string, bool) Update the ports related to one C# property field and all connected nodes in the graph Declaration public bool UpdatePortsForField(string fieldName, bool sendPortUpdatedEvent = true) Parameters Type Name Description string fieldName bool sendPortUpdatedEvent Returns Type Description bool | Improve this Doc View Source UpdatePortsForFieldLocal(string, bool) Update the ports related to one C# property field (only for this node) Declaration public bool UpdatePortsForFieldLocal(string fieldName, bool sendPortUpdatedEvent = true) Parameters Type Name Description string fieldName bool sendPortUpdatedEvent Returns Type Description bool Events | Improve this Doc View Source onAfterEdgeConnected Triggered after an edge was connected on the node Declaration public event Action<SerializableEdge> onAfterEdgeConnected Event Type Type Description Action<SerializableEdge> | Improve this Doc View Source onAfterEdgeDisconnected Triggered after an edge was disconnected on the node Declaration public event Action<SerializableEdge> onAfterEdgeDisconnected Event Type Type Description Action<SerializableEdge> | Improve this Doc View Source onMessageAdded Declaration public event Action<string, NodeMessageType> onMessageAdded Event Type Type Description Action<string, NodeMessageType> | Improve this Doc View Source onMessageRemoved Declaration public event Action<string> onMessageRemoved Event Type Type Description Action<string> | Improve this Doc View Source onPortsUpdated Triggered after a single/list of port(s) is updated, the parameter is the field name Declaration public event Action<string> onPortsUpdated Event Type Type Description Action<string> | Improve this Doc View Source onProcessed Triggered when the node is processes Declaration public event BaseNode.ProcessDelegate onProcessed Event Type Type Description BaseNode.ProcessDelegate"
  },
  "api/GraphProcessor.BaseNodeView.html": {
    "href": "api/GraphProcessor.BaseNodeView.html",
    "title": "Class BaseNodeView",
    "keywords": "Class BaseNodeView Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node BaseNodeView ImpostorNodeView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelectable ICollectibleElement Inherited Members Node.m_CollapseButton Node.m_ButtonContainer Node.RefreshExpandedState() Node.GetPosition() Node.OnPortRemoved(Port) Node.InstantiatePort(Orientation, Direction, Port.Capacity, Type) Node.ToggleCollapse() Node.UseDefaultStyling() Node.CollectElements(HashSet<GraphElement>, Func<GraphElement, bool>) Node.mainContainer Node.titleContainer Node.inputContainer Node.outputContainer Node.titleButtonContainer Node.topContainer Node.extensionContainer Node.title GraphElement.ResetLayer() GraphElement.OnCustomStyleResolved(ICustomStyle) GraphElement.IsSelectable() GraphElement.IsMovable() GraphElement.IsResizable() GraphElement.IsDroppable() GraphElement.IsAscendable() GraphElement.IsRenamable() GraphElement.IsCopiable() GraphElement.IsSnappable() GraphElement.IsGroupable() GraphElement.IsStackable() GraphElement.GetGlobalCenter() GraphElement.UpdatePresenterPosition() GraphElement.OnSelected() GraphElement.OnUnselected() GraphElement.HitTest(Vector2) GraphElement.Select(VisualElement, bool) GraphElement.Unselect(VisualElement) GraphElement.IsSelected(VisualElement) GraphElement.elementTypeColor GraphElement.layer GraphElement.showInMiniMap GraphElement.capabilities GraphElement.selected VisualElement.disabledUssClassName VisualElement.ExecuteDefaultAction(EventBase) VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [NodeCustomEditor(typeof(BaseNode))] public class BaseNodeView : Node, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelectable, ICollectibleElement Fields | Improve this Doc View Source bottomPortContainer Declaration protected VisualElement bottomPortContainer Field Value Type Description VisualElement | Improve this Doc View Source controlsContainer Declaration public VisualElement controlsContainer Field Value Type Description VisualElement | Improve this Doc View Source debugContainer Declaration protected VisualElement debugContainer Field Value Type Description VisualElement | Improve this Doc View Source initializing Declaration public bool initializing Field Value Type Description bool | Improve this Doc View Source inputPortViews Declaration public List<PortView> inputPortViews Field Value Type Description List<PortView> | Improve this Doc View Source nodeTarget Declaration public BaseNode nodeTarget Field Value Type Description BaseNode | Improve this Doc View Source outputPortViews Declaration public List<PortView> outputPortViews Field Value Type Description List<PortView> | Improve this Doc View Source portsPerFieldName Declaration protected Dictionary<string, List<PortView>> portsPerFieldName Field Value Type Description Dictionary<string, List<PortView>> | Improve this Doc View Source rightTitleContainer Declaration protected VisualElement rightTitleContainer Field Value Type Description VisualElement | Improve this Doc View Source topPortContainer Declaration protected VisualElement topPortContainer Field Value Type Description VisualElement Properties | Improve this Doc View Source expanded Is node expanded. Declaration public override bool expanded { get; set; } Property Value Type Description bool Overrides UnityEditor.Experimental.GraphView.Node.expanded | Improve this Doc View Source hasSettings Declaration protected virtual bool hasSettings { get; set; } Property Value Type Description bool | Improve this Doc View Source owner Declaration public BaseGraphView owner { get; } Property Value Type Description BaseGraphView Methods | Improve this Doc View Source AddControlField(FieldInfo, string, bool, Action) Declaration protected VisualElement AddControlField(FieldInfo field, string label = null, bool showInputDrawer = false, Action valueChangedCallback = null) Parameters Type Name Description FieldInfo field string label bool showInputDrawer Action valueChangedCallback Returns Type Description VisualElement | Improve this Doc View Source AddControlField(string, string, bool, Action) Declaration protected VisualElement AddControlField(string fieldName, string label = null, bool showInputDrawer = false, Action valueChangedCallback = null) Parameters Type Name Description string fieldName string label bool showInputDrawer Action valueChangedCallback Returns Type Description VisualElement | Improve this Doc View Source AddInputContainer() Declaration protected void AddInputContainer() | Improve this Doc View Source AddMessageView(string, NodeMessageType) Declaration public void AddMessageView(string message, NodeMessageType messageType) Parameters Type Name Description string message NodeMessageType messageType | Improve this Doc View Source AddMessageView(string, Texture, Color) Declaration public void AddMessageView(string message, Texture icon, Color color) Parameters Type Name Description string message Texture icon Color color | Improve this Doc View Source AddPort(FieldInfo, Direction, BaseEdgeConnectorListener, PortData) Declaration public PortView AddPort(FieldInfo fieldInfo, Direction direction, BaseEdgeConnectorListener listener, PortData portData) Parameters Type Name Description FieldInfo fieldInfo Direction direction BaseEdgeConnectorListener listener PortData portData Returns Type Description PortView | Improve this Doc View Source AddSettingField(FieldInfo) Declaration protected void AddSettingField(FieldInfo field) Parameters Type Name Description FieldInfo field | Improve this Doc View Source AlignToBottom() Declaration public void AlignToBottom() | Improve this Doc View Source AlignToCenter() Declaration public void AlignToCenter() | Improve this Doc View Source AlignToLeft() Declaration public void AlignToLeft() | Improve this Doc View Source AlignToMiddle() Declaration public void AlignToMiddle() | Improve this Doc View Source AlignToRight() Declaration public void AlignToRight() | Improve this Doc View Source AlignToTop() Declaration public void AlignToTop() | Improve this Doc View Source BuildAlignMenu(ContextualMenuPopulateEvent) Declaration protected void BuildAlignMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt | Improve this Doc View Source BuildContextualMenu(ContextualMenuPopulateEvent) Add menu items to the node contextual menu. Declaration public override void BuildContextualMenu(ContextualMenuPopulateEvent evt) Parameters Type Name Description ContextualMenuPopulateEvent evt The event holding the menu to populate. Overrides UnityEditor.Experimental.GraphView.Node.BuildContextualMenu(UnityEngine.UIElements.ContextualMenuPopulateEvent) | Improve this Doc View Source ChangeLockStatus() Declaration public void ChangeLockStatus() | Improve this Doc View Source CloseSettings() Declaration public void CloseSettings() | Improve this Doc View Source CreatePortView(Direction, FieldInfo, PortData, BaseEdgeConnectorListener) Declaration protected virtual PortView CreatePortView(Direction direction, FieldInfo fieldInfo, PortData portData, BaseEdgeConnectorListener listener) Parameters Type Name Description Direction direction FieldInfo fieldInfo PortData portData BaseEdgeConnectorListener listener Returns Type Description PortView | Improve this Doc View Source CreateSettingsView() Declaration protected virtual VisualElement CreateSettingsView() Returns Type Description VisualElement | Improve this Doc View Source Disable() Declaration public virtual void Disable() | Improve this Doc View Source DrawDefaultInspector(bool) Declaration protected virtual void DrawDefaultInspector(bool fromInspector = false) Parameters Type Name Description bool fromInspector | Improve this Doc View Source Enable() Declaration public virtual void Enable() | Improve this Doc View Source Enable(bool) Declaration public virtual void Enable(bool fromInspector = false) Parameters Type Name Description bool fromInspector | Improve this Doc View Source FindSerializedProperty(string) Declaration protected SerializedProperty FindSerializedProperty(string fieldName) Parameters Type Name Description string fieldName Returns Type Description SerializedProperty | Improve this Doc View Source ForceUpdatePorts() Declaration public void ForceUpdatePorts() | Improve this Doc View Source GetFirstPortViewFromFieldName(string) Declaration public PortView GetFirstPortViewFromFieldName(string fieldName) Parameters Type Name Description string fieldName Returns Type Description PortView | Improve this Doc View Source GetNodeRect(Node, float, float) Declaration public static Rect GetNodeRect(Node node, float left = 2.1474836E+09, float top = 2.1474836E+09) Parameters Type Name Description Node node float left float top Returns Type Description Rect | Improve this Doc View Source GetPortViewFromFieldName(string, string) Declaration public PortView GetPortViewFromFieldName(string fieldName, string identifier) Parameters Type Name Description string fieldName string identifier Returns Type Description PortView | Improve this Doc View Source GetPortViewsFromFieldName(string) Declaration public List<PortView> GetPortViewsFromFieldName(string fieldName) Parameters Type Name Description string fieldName Returns Type Description List<PortView> | Improve this Doc View Source Highlight() Declaration public void Highlight() | Improve this Doc View Source Initialize(BaseGraphView, BaseNode) Declaration public void Initialize(BaseGraphView owner, BaseNode node) Parameters Type Name Description BaseGraphView owner BaseNode node | Improve this Doc View Source InsertPort(PortView, int) Declaration public void InsertPort(PortView portView, int index) Parameters Type Name Description PortView portView int index | Improve this Doc View Source NotifyNodeChanged() Send an event to the graph telling that the content of this node have changed Declaration public void NotifyNodeChanged() | Improve this Doc View Source OnCreated() Declaration public virtual void OnCreated() | Improve this Doc View Source OnRemoved() Declaration public virtual void OnRemoved() | Improve this Doc View Source OpenNodeScript() Declaration public void OpenNodeScript() | Improve this Doc View Source OpenNodeViewScript() Declaration public void OpenNodeViewScript() | Improve this Doc View Source OpenSettings() Declaration public void OpenSettings() | Improve this Doc View Source RefreshPorts() Declaration public virtual bool RefreshPorts() Returns Type Description bool | Improve this Doc View Source RemoveMessageView(string) Declaration public void RemoveMessageView(string message) Parameters Type Name Description string message | Improve this Doc View Source RemoveMessageViewContains(string) Declaration public void RemoveMessageViewContains(string message) Parameters Type Name Description string message | Improve this Doc View Source RemovePort(PortView) Declaration public void RemovePort(PortView p) Parameters Type Name Description PortView p | Improve this Doc View Source SetNodeColor(Color) Declaration protected virtual void SetNodeColor(Color color) Parameters Type Name Description Color color | Improve this Doc View Source SetPosition(Rect) Set node position. Declaration public override void SetPosition(Rect newPos) Parameters Type Name Description Rect newPos New position. Overrides UnityEditor.Experimental.GraphView.Node.SetPosition(UnityEngine.Rect) | Improve this Doc View Source ToggleDebug() Declaration public void ToggleDebug() | Improve this Doc View Source UnHighlight() Declaration public void UnHighlight() | Improve this Doc View Source UpdateDebugView() Declaration public void UpdateDebugView() Events | Improve this Doc View Source onPortConnected Declaration public event Action<PortView> onPortConnected Event Type Type Description Action<PortView> | Improve this Doc View Source onPortDisconnected Declaration public event Action<PortView> onPortDisconnected Event Type Type Description Action<PortView> Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelectable UnityEditor.Experimental.GraphView.ICollectibleElement"
  },
  "api/GraphProcessor.BaseStackNode.html": {
    "href": "api/GraphProcessor.BaseStackNode.html",
    "title": "Class BaseStackNode",
    "keywords": "Class BaseStackNode Data container for the StackNode views Inheritance object BaseStackNode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class BaseStackNode Constructors | Improve this Doc View Source BaseStackNode(Vector2, string, bool, bool) Data container for the StackNode views Declaration public BaseStackNode(Vector2 position, string title = \"Stack\", bool acceptDrop = true, bool acceptNewNode = true) Parameters Type Name Description Vector2 position string title bool acceptDrop bool acceptNewNode Fields | Improve this Doc View Source acceptDrop Is the stack accept drag and dropped nodes Declaration public bool acceptDrop Field Value Type Description bool | Improve this Doc View Source acceptNewNode Is the stack accepting node created by pressing space over the stack node Declaration public bool acceptNewNode Field Value Type Description bool | Improve this Doc View Source nodeGUIDs List of node GUID that are in the stack Declaration public List<string> nodeGUIDs Field Value Type Description List<string> | Improve this Doc View Source position Data container for the StackNode views Declaration public Vector2 position Field Value Type Description Vector2 | Improve this Doc View Source title Data container for the StackNode views Declaration public string title Field Value Type Description string"
  },
  "api/GraphProcessor.BaseStackNodeView.ReorderNodeAction.html": {
    "href": "api/GraphProcessor.BaseStackNodeView.ReorderNodeAction.html",
    "title": "Delegate BaseStackNodeView.ReorderNodeAction",
    "keywords": "Delegate BaseStackNodeView.ReorderNodeAction Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public delegate void BaseStackNodeView.ReorderNodeAction(BaseNodeView nodeView, int oldIndex, int newIndex) Parameters Type Name Description BaseNodeView nodeView int oldIndex int newIndex"
  },
  "api/GraphProcessor.BaseStackNodeView.html": {
    "href": "api/GraphProcessor.BaseStackNodeView.html",
    "title": "Class BaseStackNodeView",
    "keywords": "Class BaseStackNodeView Stack node view implementation, can be used to stack multiple node inside a context like VFX graph does. Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node StackNode BaseStackNodeView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelectable ICollectibleElement IDropTarget Inherited Members StackNode.ExecuteDefaultAction(EventBase) StackNode.AddElement(GraphElement) StackNode.InsertElement(int, GraphElement) StackNode.RemoveElement(GraphElement) StackNode.OnCustomStyleResolved(ICustomStyle) StackNode.GetInsertionIndex(Vector2) StackNode.OnStartDragging(GraphElement) StackNode.CollectElements(HashSet<GraphElement>, Func<GraphElement, bool>) StackNode.CanAcceptDrop(List<ISelectable>) StackNode.DragExited() StackNode.DragPerform(DragPerformEvent, IEnumerable<ISelectable>, IDropTarget, ISelection) StackNode.DragUpdated(DragUpdatedEvent, IEnumerable<ISelectable>, IDropTarget, ISelection) StackNode.DragEnter(DragEnterEvent, IEnumerable<ISelectable>, IDropTarget, ISelection) StackNode.headerContainer StackNode.contentContainer StackNode.dragEntered StackNode.dropPreviewTemplate StackNode.hasMultipleSelectionSupport Node.m_CollapseButton Node.m_ButtonContainer Node.RefreshExpandedState() Node.GetPosition() Node.OnPortRemoved(Port) Node.InstantiatePort(Orientation, Direction, Port.Capacity, Type) Node.RefreshPorts() Node.ToggleCollapse() Node.UseDefaultStyling() Node.BuildContextualMenu(ContextualMenuPopulateEvent) Node.mainContainer Node.titleContainer Node.inputContainer Node.outputContainer Node.titleButtonContainer Node.topContainer Node.extensionContainer Node.expanded Node.title GraphElement.ResetLayer() GraphElement.IsSelectable() GraphElement.IsMovable() GraphElement.IsResizable() GraphElement.IsDroppable() GraphElement.IsAscendable() GraphElement.IsRenamable() GraphElement.IsCopiable() GraphElement.IsSnappable() GraphElement.IsGroupable() GraphElement.IsStackable() GraphElement.GetGlobalCenter() GraphElement.UpdatePresenterPosition() GraphElement.OnSelected() GraphElement.OnUnselected() GraphElement.HitTest(Vector2) GraphElement.Select(VisualElement, bool) GraphElement.Unselect(VisualElement) GraphElement.IsSelected(VisualElement) GraphElement.elementTypeColor GraphElement.layer GraphElement.showInMiniMap GraphElement.capabilities GraphElement.selected VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class BaseStackNodeView : StackNode, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelectable, ICollectibleElement, IDropTarget Constructors | Improve this Doc View Source BaseStackNodeView(BaseStackNode) Stack node view implementation, can be used to stack multiple node inside a context like VFX graph does. Declaration public BaseStackNodeView(BaseStackNode stackNode) Parameters Type Name Description BaseStackNode stackNode Fields | Improve this Doc View Source owner Stack node view implementation, can be used to stack multiple node inside a context like VFX graph does. Declaration protected BaseGraphView owner Field Value Type Description BaseGraphView | Improve this Doc View Source stackNode StackNode data from the graph Declaration protected BaseStackNode stackNode Field Value Type Description BaseStackNode Methods | Improve this Doc View Source AcceptsElement(GraphElement, ref int, int) Stack node view implementation, can be used to stack multiple node inside a context like VFX graph does. Declaration protected override bool AcceptsElement(GraphElement element, ref int proposedIndex, int maxIndex) Parameters Type Name Description GraphElement element int proposedIndex int maxIndex Returns Type Description bool Overrides StackNode.AcceptsElement(GraphElement, ref int, int) | Improve this Doc View Source DragLeave(DragLeaveEvent, IEnumerable<ISelectable>, IDropTarget, ISelection) Stack node view implementation, can be used to stack multiple node inside a context like VFX graph does. Declaration public override bool DragLeave(DragLeaveEvent evt, IEnumerable<ISelectable> selection, IDropTarget leftTarget, ISelection dragSource) Parameters Type Name Description DragLeaveEvent evt IEnumerable<ISelectable> selection IDropTarget leftTarget ISelection dragSource Returns Type Description bool Overrides StackNode.DragLeave(DragLeaveEvent, IEnumerable<ISelectable>, IDropTarget, ISelection) | Improve this Doc View Source Initialize(BaseGraphView) Called after the StackNode have been added to the graph view Declaration public virtual void Initialize(BaseGraphView graphView) Parameters Type Name Description BaseGraphView graphView | Improve this Doc View Source OnSeparatorContextualMenuEvent(ContextualMenuPopulateEvent, int) This method is automatically called when a contextual menu is about to appear on a StackNode separator. Declaration protected override void OnSeparatorContextualMenuEvent(ContextualMenuPopulateEvent evt, int separatorIndex) Parameters Type Name Description ContextualMenuPopulateEvent evt The event. int separatorIndex The index of the separator on which the menu was invoked. Overrides StackNode.OnSeparatorContextualMenuEvent(ContextualMenuPopulateEvent, int) | Improve this Doc View Source SetPosition(Rect) Set node position. Declaration public override void SetPosition(Rect newPos) Parameters Type Name Description Rect newPos New position. Overrides UnityEditor.Experimental.GraphView.Node.SetPosition(UnityEngine.Rect) Events | Improve this Doc View Source onNodeReordered Triggered when a node is re-ordered in the stack. Declaration public event BaseStackNodeView.ReorderNodeAction onNodeReordered Event Type Type Description BaseStackNodeView.ReorderNodeAction Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelectable UnityEditor.Experimental.GraphView.ICollectibleElement UnityEditor.Experimental.GraphView.IDropTarget"
  },
  "api/GraphProcessor.BoolParameter.html": {
    "href": "api/GraphProcessor.BoolParameter.html",
    "title": "Class BoolParameter",
    "keywords": "Class BoolParameter Inheritance object ExposedParameter BoolParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class BoolParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.BoundsIntParameter.html": {
    "href": "api/GraphProcessor.BoundsIntParameter.html",
    "title": "Class BoundsIntParameter",
    "keywords": "Class BoundsIntParameter Inheritance object ExposedParameter BoundsIntParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class BoundsIntParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.BoundsParameter.html": {
    "href": "api/GraphProcessor.BoundsParameter.html",
    "title": "Class BoundsParameter",
    "keywords": "Class BoundsParameter Inheritance object ExposedParameter BoundsParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class BoundsParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.ColorParameter.ColorMode.html": {
    "href": "api/GraphProcessor.ColorParameter.ColorMode.html",
    "title": "Enum ColorParameter.ColorMode",
    "keywords": "Enum ColorParameter.ColorMode Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public enum ColorParameter.ColorMode Fields Name Description Default HDR"
  },
  "api/GraphProcessor.ColorParameter.ColorSettings.html": {
    "href": "api/GraphProcessor.ColorParameter.ColorSettings.html",
    "title": "Class ColorParameter.ColorSettings",
    "keywords": "Class ColorParameter.ColorSettings Inheritance object ExposedParameter.Settings ColorParameter.ColorSettings Inherited Members ExposedParameter.Settings.isHidden ExposedParameter.Settings.expanded ExposedParameter.Settings.Equals(object) ExposedParameter.Settings.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class ColorParameter.ColorSettings : ExposedParameter.Settings Fields | Improve this Doc View Source mode Declaration public ColorParameter.ColorMode mode Field Value Type Description ColorParameter.ColorMode Methods | Improve this Doc View Source Equals(Settings) Declaration public override bool Equals(ExposedParameter.Settings param) Parameters Type Name Description ExposedParameter.Settings param Returns Type Description bool Overrides ExposedParameter.Settings.Equals(ExposedParameter.Settings)"
  },
  "api/GraphProcessor.ColorParameter.html": {
    "href": "api/GraphProcessor.ColorParameter.html",
    "title": "Class ColorParameter",
    "keywords": "Class ColorParameter Inheritance object ExposedParameter ColorParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class ColorParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Methods | Improve this Doc View Source CreateSettings() Declaration protected override ExposedParameter.Settings CreateSettings() Returns Type Description ExposedParameter.Settings Overrides ExposedParameter.CreateSettings() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.ColorParameterDrawer.html": {
    "href": "api/GraphProcessor.ColorParameterDrawer.html",
    "title": "Class ColorParameterDrawer",
    "keywords": "Class ColorParameterDrawer Inheritance object GUIDrawer PropertyDrawer ExposedParameterDrawer ColorParameterDrawer Inherited Members ExposedParameterDrawer.CreateValProperty(SerializedProperty, string) ExposedParameterDrawer.GetSettingsProperty(SerializedProperty) ExposedParameterDrawer.GetValProperty(SerializedProperty) ExposedParameterDrawer.GetNameProperty(SerializedProperty) ExposedParameterDrawer.ApplyModifiedProperties(SerializedProperty) PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(ColorParameter))] public class ColorParameterDrawer : ExposedParameterDrawer Methods | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. Returns Type Description VisualElement The element containing the custom GUI. Overrides ExposedParameterDrawer.CreatePropertyGUI(SerializedProperty)"
  },
  "api/GraphProcessor.ComputeOrderType.html": {
    "href": "api/GraphProcessor.ComputeOrderType.html",
    "title": "Enum ComputeOrderType",
    "keywords": "Enum ComputeOrderType Compute order type used to determine the compute order integer on the nodes Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public enum ComputeOrderType Fields Name Description BreadthFirst Compute order type used to determine the compute order integer on the nodes DepthFirst Compute order type used to determine the compute order integer on the nodes"
  },
  "api/GraphProcessor.CopyPasteHelper.html": {
    "href": "api/GraphProcessor.CopyPasteHelper.html",
    "title": "Class CopyPasteHelper",
    "keywords": "Class CopyPasteHelper Inheritance object CopyPasteHelper Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [Serializable] public class CopyPasteHelper Fields | Improve this Doc View Source copiedEdges Declaration public List<JsonElement> copiedEdges Field Value Type Description List<JsonElement> | Improve this Doc View Source copiedGroups Declaration public List<JsonElement> copiedGroups Field Value Type Description List<JsonElement> | Improve this Doc View Source copiedNodes Declaration public List<JsonElement> copiedNodes Field Value Type Description List<JsonElement>"
  },
  "api/GraphProcessor.CustomPortBehaviorAttribute.html": {
    "href": "api/GraphProcessor.CustomPortBehaviorAttribute.html",
    "title": "Class CustomPortBehaviorAttribute",
    "keywords": "Class CustomPortBehaviorAttribute Allow you to modify the generated port view from a field. Can be used to generate multiple ports from one field. Inheritance object Attribute CustomPortBehaviorAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class CustomPortBehaviorAttribute : Attribute Constructors | Improve this Doc View Source CustomPortBehaviorAttribute(string) Allow you to modify the generated port view from a field. Can be used to generate multiple ports from one field. You must add this attribute on a function of this signature IEnumerable<PortData> MyCustomPortFunction(List<SerializableEdge> edges); Declaration public CustomPortBehaviorAttribute(string fieldName) Parameters Type Name Description string fieldName local node field name Fields | Improve this Doc View Source fieldName Allow you to modify the generated port view from a field. Can be used to generate multiple ports from one field. Declaration public string fieldName Field Value Type Description string"
  },
  "api/GraphProcessor.CustomPortBehaviorDelegate.html": {
    "href": "api/GraphProcessor.CustomPortBehaviorDelegate.html",
    "title": "Delegate CustomPortBehaviorDelegate",
    "keywords": "Delegate CustomPortBehaviorDelegate Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public delegate IEnumerable<PortData> CustomPortBehaviorDelegate(List<SerializableEdge> edges) Parameters Type Name Description List<SerializableEdge> edges Returns Type Description IEnumerable<PortData>"
  },
  "api/GraphProcessor.CustomPortIO.html": {
    "href": "api/GraphProcessor.CustomPortIO.html",
    "title": "Class CustomPortIO",
    "keywords": "Class CustomPortIO Inheritance object CustomPortIO Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public static class CustomPortIO Methods | Improve this Doc View Source GetCustomPortMethod(Type, string) Declaration public static CustomPortIODelegate GetCustomPortMethod(Type nodeType, string fieldName) Parameters Type Name Description Type nodeType string fieldName Returns Type Description CustomPortIODelegate | Improve this Doc View Source IsAssignable(Type, Type) Declaration public static bool IsAssignable(Type input, Type output) Parameters Type Name Description Type input Type output Returns Type Description bool"
  },
  "api/GraphProcessor.CustomPortIODelegate.html": {
    "href": "api/GraphProcessor.CustomPortIODelegate.html",
    "title": "Delegate CustomPortIODelegate",
    "keywords": "Delegate CustomPortIODelegate Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public delegate void CustomPortIODelegate(BaseNode node, List<SerializableEdge> edges, NodePort outputPort = null) Parameters Type Name Description BaseNode node List<SerializableEdge> edges NodePort outputPort"
  },
  "api/GraphProcessor.CustomPortInputAttribute.html": {
    "href": "api/GraphProcessor.CustomPortInputAttribute.html",
    "title": "Class CustomPortInputAttribute",
    "keywords": "Class CustomPortInputAttribute Allow you to customize the input function of a port Inheritance object Attribute CustomPortInputAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class CustomPortInputAttribute : Attribute Constructors | Improve this Doc View Source CustomPortInputAttribute(string, Type, bool) Allow you to customize the input function of a port. See CustomPortsNode example in Samples. Declaration public CustomPortInputAttribute(string fieldName, Type inputType, bool allowCast = true) Parameters Type Name Description string fieldName local field of the node Type inputType type of input of the port bool allowCast if cast is allowed when connecting an edge Fields | Improve this Doc View Source allowCast Allow you to customize the input function of a port Declaration public bool allowCast Field Value Type Description bool | Improve this Doc View Source fieldName Allow you to customize the input function of a port Declaration public string fieldName Field Value Type Description string | Improve this Doc View Source inputType Allow you to customize the input function of a port Declaration public Type inputType Field Value Type Description Type"
  },
  "api/GraphProcessor.CustomPortOutputAttribute.html": {
    "href": "api/GraphProcessor.CustomPortOutputAttribute.html",
    "title": "Class CustomPortOutputAttribute",
    "keywords": "Class CustomPortOutputAttribute Allow you to customize the input function of a port Inheritance object Attribute CustomPortOutputAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = false)] public class CustomPortOutputAttribute : Attribute Constructors | Improve this Doc View Source CustomPortOutputAttribute(string, Type, bool) Allow you to customize the output function of a port. See CustomPortsNode example in Samples. Declaration public CustomPortOutputAttribute(string fieldName, Type outputType, bool allowCast = true) Parameters Type Name Description string fieldName local field of the node Type outputType bool allowCast if cast is allowed when connecting an edge Fields | Improve this Doc View Source allowCast Allow you to customize the input function of a port Declaration public bool allowCast Field Value Type Description bool | Improve this Doc View Source fieldName Allow you to customize the input function of a port Declaration public string fieldName Field Value Type Description string | Improve this Doc View Source outputType Allow you to customize the input function of a port Declaration public Type outputType Field Value Type Description Type"
  },
  "api/GraphProcessor.CustomPortTypeBehavior.html": {
    "href": "api/GraphProcessor.CustomPortTypeBehavior.html",
    "title": "Class CustomPortTypeBehavior",
    "keywords": "Class CustomPortTypeBehavior Allow to bind a method to generate a specific set of ports based on a field type in a node Inheritance object Attribute CustomPortTypeBehavior Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Method, AllowMultiple = true)] public class CustomPortTypeBehavior : Attribute Constructors | Improve this Doc View Source CustomPortTypeBehavior(Type) Allow to bind a method to generate a specific set of ports based on a field type in a node Declaration public CustomPortTypeBehavior(Type type) Parameters Type Name Description Type type Fields | Improve this Doc View Source type Target type Declaration public Type type Field Value Type Description Type"
  },
  "api/GraphProcessor.CustomPortTypeBehaviorDelegate.html": {
    "href": "api/GraphProcessor.CustomPortTypeBehaviorDelegate.html",
    "title": "Delegate CustomPortTypeBehaviorDelegate",
    "keywords": "Delegate CustomPortTypeBehaviorDelegate Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public delegate IEnumerable<PortData> CustomPortTypeBehaviorDelegate(string fieldName, string displayName, object value) Parameters Type Name Description string fieldName string displayName object value Returns Type Description IEnumerable<PortData>"
  },
  "api/GraphProcessor.CustomStackNodeView.html": {
    "href": "api/GraphProcessor.CustomStackNodeView.html",
    "title": "Class CustomStackNodeView",
    "keywords": "Class CustomStackNodeView Allow you to have a custom view for your stack nodes Inheritance object Attribute CustomStackNodeView Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] public class CustomStackNodeView : Attribute Constructors | Improve this Doc View Source CustomStackNodeView(Type) Allow you to have a custom view for your stack nodes Declaration public CustomStackNodeView(Type stackNodeType) Parameters Type Name Description Type stackNodeType The type of the stack node you target Fields | Improve this Doc View Source stackNodeType Allow you to have a custom view for your stack nodes Declaration public Type stackNodeType Field Value Type Description Type"
  },
  "api/GraphProcessor.DeleteCallback.html": {
    "href": "api/GraphProcessor.DeleteCallback.html",
    "title": "Class DeleteCallback",
    "keywords": "Class DeleteCallback Inheritance object AssetModificationProcessor DeleteCallback Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [ExecuteAlways] public class DeleteCallback : AssetModificationProcessor"
  },
  "api/GraphProcessor.DoubleParameter.html": {
    "href": "api/GraphProcessor.DoubleParameter.html",
    "title": "Class DoubleParameter",
    "keywords": "Class DoubleParameter Inheritance object ExposedParameter DoubleParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class DoubleParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.EdgeView.html": {
    "href": "api/GraphProcessor.EdgeView.html",
    "title": "Class EdgeView",
    "keywords": "Class EdgeView Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Edge EdgeView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelectable Inherited Members Edge.Overlaps(Rect) Edge.ContainsPoint(Vector2) Edge.UpdateEdgeControl() Edge.DrawEdge() Edge.OnSelected() Edge.OnUnselected() Edge.CreateEdgeControl() Edge.isGhostEdge Edge.output Edge.showInMiniMap Edge.input Edge.edgeControl Edge.candidatePosition Edge.edgeWidth Edge.selectedColor Edge.defaultColor Edge.ghostColor Edge.PointsAndTangents GraphElement.ResetLayer() GraphElement.IsSelectable() GraphElement.IsMovable() GraphElement.IsResizable() GraphElement.IsDroppable() GraphElement.IsAscendable() GraphElement.IsRenamable() GraphElement.IsCopiable() GraphElement.IsSnappable() GraphElement.IsGroupable() GraphElement.IsStackable() GraphElement.GetGlobalCenter() GraphElement.UpdatePresenterPosition() GraphElement.GetPosition() GraphElement.SetPosition(Rect) GraphElement.HitTest(Vector2) GraphElement.Select(VisualElement, bool) GraphElement.Unselect(VisualElement) GraphElement.IsSelected(VisualElement) GraphElement.elementTypeColor GraphElement.layer GraphElement.title GraphElement.capabilities GraphElement.selected VisualElement.disabledUssClassName VisualElement.ExecuteDefaultAction(EventBase) VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class EdgeView : Edge, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelectable Constructors | Improve this Doc View Source EdgeView() Declaration public EdgeView() Fields | Improve this Doc View Source isConnected Declaration public bool isConnected Field Value Type Description bool Properties | Improve this Doc View Source owner Declaration protected BaseGraphView owner { get; } Property Value Type Description BaseGraphView | Improve this Doc View Source serializedEdge Declaration public SerializableEdge serializedEdge { get; } Property Value Type Description SerializableEdge Methods | Improve this Doc View Source OnCustomStyleResolved(ICustomStyle) Called when the custom style properties are resolved. Declaration protected override void OnCustomStyleResolved(ICustomStyle styles) Parameters Type Name Description ICustomStyle styles Overrides UnityEditor.Experimental.GraphView.Edge.OnCustomStyleResolved(UnityEngine.UIElements.ICustomStyle) | Improve this Doc View Source OnPortChanged(bool) Called when a port on the edge is changed. Declaration public override void OnPortChanged(bool isInput) Parameters Type Name Description bool isInput True if the input port was changed. False if the output port was changed. Overrides Edge.OnPortChanged(bool) | Improve this Doc View Source UpdateEdgeSize() Declaration public void UpdateEdgeSize() Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelectable"
  },
  "api/GraphProcessor.ExceptionToLog.html": {
    "href": "api/GraphProcessor.ExceptionToLog.html",
    "title": "Class ExceptionToLog",
    "keywords": "Class ExceptionToLog Inheritance object ExceptionToLog Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public static class ExceptionToLog Methods | Improve this Doc View Source Call(Action) Declaration public static void Call(Action a) Parameters Type Name Description Action a"
  },
  "api/GraphProcessor.ExposedColorSettingsDrawer.html": {
    "href": "api/GraphProcessor.ExposedColorSettingsDrawer.html",
    "title": "Class ExposedColorSettingsDrawer",
    "keywords": "Class ExposedColorSettingsDrawer Inheritance object GUIDrawer PropertyDrawer ExposedParameterSettingsDrawer ExposedColorSettingsDrawer Inherited Members ExposedParameterSettingsDrawer.CreateHideInInspectorField(SerializedProperty) ExposedParameterSettingsDrawer.GetGraph(SerializedProperty) ExposedParameterSettingsDrawer.GetParameter(SerializedProperty) ExposedParameterSettingsDrawer.CreateSettingsField(SerializedProperty, string, string) PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(ColorParameter.ColorSettings))] public class ExposedColorSettingsDrawer : ExposedParameterSettingsDrawer Methods | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty settingsProperty) Parameters Type Name Description SerializedProperty settingsProperty Returns Type Description VisualElement The element containing the custom GUI. Overrides ExposedParameterSettingsDrawer.CreatePropertyGUI(SerializedProperty)"
  },
  "api/GraphProcessor.ExposedParameter.Settings.html": {
    "href": "api/GraphProcessor.ExposedParameter.Settings.html",
    "title": "Class ExposedParameter.Settings",
    "keywords": "Class ExposedParameter.Settings Inheritance object ExposedParameter.Settings ColorParameter.ColorSettings FloatParameter.FloatSettings GradientParameter.GradientSettings IntParameter.IntSettings Vector2Parameter.Vector2Settings Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class ExposedParameter.Settings Fields | Improve this Doc View Source expanded Declaration public bool expanded Field Value Type Description bool | Improve this Doc View Source isHidden Declaration public bool isHidden Field Value Type Description bool Methods | Improve this Doc View Source Equals(Settings) Declaration public virtual bool Equals(ExposedParameter.Settings param) Parameters Type Name Description ExposedParameter.Settings param Returns Type Description bool | Improve this Doc View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode()"
  },
  "api/GraphProcessor.ExposedParameter.html": {
    "href": "api/GraphProcessor.ExposedParameter.html",
    "title": "Class ExposedParameter",
    "keywords": "Class ExposedParameter Inheritance object ExposedParameter AnimationCurveParameter BoolParameter BoundsIntParameter BoundsParameter ColorParameter DoubleParameter FloatParameter GameObjectParameter GradientParameter IntParameter LongParameter MaterialParameter MeshParameter RectIntParameter RectParameter RenderTextureParameter StringParameter Texture2DParameter Vector2IntParameter Vector2Parameter Vector3IntParameter Vector3Parameter Vector4Parameter Implements ISerializationCallbackReceiver Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class ExposedParameter : ISerializationCallbackReceiver Fields | Improve this Doc View Source guid Declaration public string guid Field Value Type Description string | Improve this Doc View Source input Declaration public bool input Field Value Type Description bool | Improve this Doc View Source name Declaration public string name Field Value Type Description string | Improve this Doc View Source serializedValue Declaration [Obsolete(\"Use value instead\")] public SerializableObject serializedValue Field Value Type Description SerializableObject | Improve this Doc View Source settings Declaration [SerializeReference] public ExposedParameter.Settings settings Field Value Type Description ExposedParameter.Settings | Improve this Doc View Source type Declaration [Obsolete(\"Use GetValueType()\")] public string type Field Value Type Description string Properties | Improve this Doc View Source shortType Declaration public string shortType { get; } Property Value Type Description string | Improve this Doc View Source value Declaration public virtual object value { get; set; } Property Value Type Description object Methods | Improve this Doc View Source Clone() Declaration public ExposedParameter Clone() Returns Type Description ExposedParameter | Improve this Doc View Source CreateSettings() Declaration protected virtual ExposedParameter.Settings CreateSettings() Returns Type Description ExposedParameter.Settings | Improve this Doc View Source Equals(ExposedParameter) Declaration public bool Equals(ExposedParameter parameter) Parameters Type Name Description ExposedParameter parameter Returns Type Description bool | Improve this Doc View Source Equals(object) Declaration public override bool Equals(object obj) Parameters Type Name Description object obj Returns Type Description bool Overrides object.Equals(object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description int Overrides object.GetHashCode() | Improve this Doc View Source GetValueType() Declaration public virtual Type GetValueType() Returns Type Description Type | Improve this Doc View Source Initialize(string, object) Declaration public void Initialize(string name, object value) Parameters Type Name Description string name object value Operators | Improve this Doc View Source operator ==(ExposedParameter, ExposedParameter) Declaration public static bool operator ==(ExposedParameter param1, ExposedParameter param2) Parameters Type Name Description ExposedParameter param1 ExposedParameter param2 Returns Type Description bool | Improve this Doc View Source operator !=(ExposedParameter, ExposedParameter) Declaration public static bool operator !=(ExposedParameter param1, ExposedParameter param2) Parameters Type Name Description ExposedParameter param1 ExposedParameter param2 Returns Type Description bool Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.ExposedParameterDrawer.html": {
    "href": "api/GraphProcessor.ExposedParameterDrawer.html",
    "title": "Class ExposedParameterDrawer",
    "keywords": "Class ExposedParameterDrawer Inheritance object GUIDrawer PropertyDrawer ExposedParameterDrawer ColorParameterDrawer FloatParameterDrawer GradientParameterDrawer IntParameterDrawer Vector2ParameterDrawer Inherited Members PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(ExposedParameter))] public class ExposedParameterDrawer : PropertyDrawer Methods | Improve this Doc View Source ApplyModifiedProperties(SerializedProperty) Declaration protected void ApplyModifiedProperties(SerializedProperty property) Parameters Type Name Description SerializedProperty property | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. Returns Type Description VisualElement The element containing the custom GUI. Overrides UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty) | Improve this Doc View Source CreateValProperty(SerializedProperty, string) Declaration protected VisualElement CreateValProperty(SerializedProperty property, string displayName = null) Parameters Type Name Description SerializedProperty property string displayName Returns Type Description VisualElement | Improve this Doc View Source GetNameProperty(SerializedProperty) Declaration protected SerializedProperty GetNameProperty(SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description SerializedProperty | Improve this Doc View Source GetSettingsProperty(SerializedProperty) Declaration protected SerializedProperty GetSettingsProperty(SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description SerializedProperty | Improve this Doc View Source GetValProperty(SerializedProperty) Declaration protected SerializedProperty GetValProperty(SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description SerializedProperty"
  },
  "api/GraphProcessor.ExposedParameterFieldFactory.html": {
    "href": "api/GraphProcessor.ExposedParameterFieldFactory.html",
    "title": "Class ExposedParameterFieldFactory",
    "keywords": "Class ExposedParameterFieldFactory Inheritance object ExposedParameterFieldFactory Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class ExposedParameterFieldFactory : IDisposable Constructors | Improve this Doc View Source ExposedParameterFieldFactory(BaseGraph, List<ExposedParameter>) Declaration public ExposedParameterFieldFactory(BaseGraph graph, List<ExposedParameter> customParameters = null) Parameters Type Name Description BaseGraph graph List<ExposedParameter> customParameters Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source GetParameterSettingsField(ExposedParameter, Action<object>) Declaration public VisualElement GetParameterSettingsField(ExposedParameter parameter, Action<object> valueChangedCallback) Parameters Type Name Description ExposedParameter parameter Action<object> valueChangedCallback Returns Type Description VisualElement | Improve this Doc View Source GetParameterValueField(ExposedParameter, Action<object>) Declaration public VisualElement GetParameterValueField(ExposedParameter parameter, Action<object> valueChangedCallback) Parameters Type Name Description ExposedParameter parameter Action<object> valueChangedCallback Returns Type Description VisualElement | Improve this Doc View Source ResetOldParameter(ExposedParameter) Declaration public void ResetOldParameter(ExposedParameter parameter) Parameters Type Name Description ExposedParameter parameter | Improve this Doc View Source UpdateSerializedProperties(List<ExposedParameter>) Declaration public void UpdateSerializedProperties(List<ExposedParameter> parameters = null) Parameters Type Name Description List<ExposedParameter> parameters Implements IDisposable"
  },
  "api/GraphProcessor.ExposedParameterFieldView.html": {
    "href": "api/GraphProcessor.ExposedParameterFieldView.html",
    "title": "Class ExposedParameterFieldView",
    "keywords": "Class ExposedParameterFieldView Inheritance object CallbackEventHandler Focusable VisualElement GraphElement BlackboardField ExposedParameterFieldView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelectable Inherited Members BlackboardField.ExecuteDefaultAction(EventBase) BlackboardField.OpenTextEditor() BlackboardField.BuildFieldContextualMenu(ContextualMenuPopulateEvent) BlackboardField.text BlackboardField.typeText BlackboardField.icon BlackboardField.highlighted BlackboardField.blackboard GraphElement.ResetLayer() GraphElement.OnCustomStyleResolved(ICustomStyle) GraphElement.IsSelectable() GraphElement.IsMovable() GraphElement.IsResizable() GraphElement.IsDroppable() GraphElement.IsAscendable() GraphElement.IsRenamable() GraphElement.IsCopiable() GraphElement.IsSnappable() GraphElement.IsGroupable() GraphElement.IsStackable() GraphElement.GetGlobalCenter() GraphElement.UpdatePresenterPosition() GraphElement.GetPosition() GraphElement.SetPosition(Rect) GraphElement.OnSelected() GraphElement.OnUnselected() GraphElement.HitTest(Vector2) GraphElement.Select(VisualElement, bool) GraphElement.Unselect(VisualElement) GraphElement.IsSelected(VisualElement) GraphElement.elementTypeColor GraphElement.layer GraphElement.title GraphElement.showInMiniMap GraphElement.capabilities GraphElement.selected VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class ExposedParameterFieldView : BlackboardField, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelectable Constructors | Improve this Doc View Source ExposedParameterFieldView(BaseGraphView, ExposedParameter) Declaration public ExposedParameterFieldView(BaseGraphView graphView, ExposedParameter param) Parameters Type Name Description BaseGraphView graphView ExposedParameter param Fields | Improve this Doc View Source graphView Declaration protected BaseGraphView graphView Field Value Type Description BaseGraphView Properties | Improve this Doc View Source parameter Declaration public ExposedParameter parameter { get; } Property Value Type Description ExposedParameter Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelectable"
  },
  "api/GraphProcessor.ExposedParameterPropertyView.html": {
    "href": "api/GraphProcessor.ExposedParameterPropertyView.html",
    "title": "Class ExposedParameterPropertyView",
    "keywords": "Class ExposedParameterPropertyView Inheritance object CallbackEventHandler Focusable VisualElement ExposedParameterPropertyView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Inherited Members VisualElement.disabledUssClassName VisualElement.ExecuteDefaultAction(EventBase) VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class ExposedParameterPropertyView : VisualElement, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors | Improve this Doc View Source ExposedParameterPropertyView(BaseGraphView, ExposedParameter) Declaration public ExposedParameterPropertyView(BaseGraphView graphView, ExposedParameter param) Parameters Type Name Description BaseGraphView graphView ExposedParameter param Fields | Improve this Doc View Source baseGraphView Declaration protected BaseGraphView baseGraphView Field Value Type Description BaseGraphView Properties | Improve this Doc View Source hideInInspector Declaration public Toggle hideInInspector { get; } Property Value Type Description Toggle | Improve this Doc View Source parameter Declaration public ExposedParameter parameter { get; } Property Value Type Description ExposedParameter Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler"
  },
  "api/GraphProcessor.ExposedParameterSettingsDrawer.html": {
    "href": "api/GraphProcessor.ExposedParameterSettingsDrawer.html",
    "title": "Class ExposedParameterSettingsDrawer",
    "keywords": "Class ExposedParameterSettingsDrawer Inheritance object GUIDrawer PropertyDrawer ExposedParameterSettingsDrawer ExposedColorSettingsDrawer FloatSettingsDrawer GradientSettingsDrawer IntSettingsDrawer Vector2SettingsDrawer Inherited Members PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(ExposedParameter.Settings))] public class ExposedParameterSettingsDrawer : PropertyDrawer Methods | Improve this Doc View Source CreateHideInInspectorField(SerializedProperty) Declaration protected VisualElement CreateHideInInspectorField(SerializedProperty settingsProperty) Parameters Type Name Description SerializedProperty settingsProperty Returns Type Description VisualElement | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. Returns Type Description VisualElement The element containing the custom GUI. Overrides UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty) | Improve this Doc View Source CreateSettingsField(SerializedProperty, string, string) Declaration protected static PropertyField CreateSettingsField(SerializedProperty settingsProperty, string fieldName, string displayName = null) Parameters Type Name Description SerializedProperty settingsProperty string fieldName string displayName Returns Type Description PropertyField | Improve this Doc View Source GetGraph(SerializedProperty) Declaration protected static BaseGraph GetGraph(SerializedProperty property) Parameters Type Name Description SerializedProperty property Returns Type Description BaseGraph | Improve this Doc View Source GetParameter(SerializedProperty) Declaration protected static ExposedParameter GetParameter(SerializedProperty settingsProperty) Parameters Type Name Description SerializedProperty settingsProperty Returns Type Description ExposedParameter"
  },
  "api/GraphProcessor.ExposedParameterView.html": {
    "href": "api/GraphProcessor.ExposedParameterView.html",
    "title": "Class ExposedParameterView",
    "keywords": "Class ExposedParameterView Inheritance object CallbackEventHandler Focusable VisualElement GraphElement PinnedElementView ExposedParameterView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelectable Inherited Members PinnedElementView.pinnedElement PinnedElementView.root PinnedElementView.content PinnedElementView.header PinnedElementView.onResized PinnedElementView.title PinnedElementView.scrollable PinnedElementView.InitializeGraphView(PinnedElement, BaseGraphView) PinnedElementView.ResetPosition() PinnedElementView.Destroy() GraphElement.ResetLayer() GraphElement.OnCustomStyleResolved(ICustomStyle) GraphElement.IsSelectable() GraphElement.IsMovable() GraphElement.IsResizable() GraphElement.IsDroppable() GraphElement.IsAscendable() GraphElement.IsRenamable() GraphElement.IsCopiable() GraphElement.IsSnappable() GraphElement.IsGroupable() GraphElement.IsStackable() GraphElement.GetGlobalCenter() GraphElement.UpdatePresenterPosition() GraphElement.GetPosition() GraphElement.SetPosition(Rect) GraphElement.OnSelected() GraphElement.OnUnselected() GraphElement.HitTest(Vector2) GraphElement.Select(VisualElement, bool) GraphElement.Unselect(VisualElement) GraphElement.IsSelected(VisualElement) GraphElement.elementTypeColor GraphElement.layer GraphElement.showInMiniMap GraphElement.capabilities GraphElement.selected VisualElement.disabledUssClassName VisualElement.ExecuteDefaultAction(EventBase) VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class ExposedParameterView : PinnedElementView, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelectable Constructors | Improve this Doc View Source ExposedParameterView() Declaration public ExposedParameterView() Fields | Improve this Doc View Source graphView Declaration protected BaseGraphView graphView Field Value Type Description BaseGraphView Methods | Improve this Doc View Source GetExposedParameterTypes() Declaration protected virtual IEnumerable<Type> GetExposedParameterTypes() Returns Type Description IEnumerable<Type> | Improve this Doc View Source GetNiceNameFromType(Type) Declaration protected string GetNiceNameFromType(Type type) Parameters Type Name Description Type type Returns Type Description string | Improve this Doc View Source GetUniqueExposedPropertyName(string) Declaration protected string GetUniqueExposedPropertyName(string name) Parameters Type Name Description string name Returns Type Description string | Improve this Doc View Source Initialize(BaseGraphView) Declaration protected override void Initialize(BaseGraphView graphView) Parameters Type Name Description BaseGraphView graphView Overrides PinnedElementView.Initialize(BaseGraphView) | Improve this Doc View Source OnAddClicked() Declaration protected virtual void OnAddClicked() | Improve this Doc View Source UpdateParameterList() Declaration protected virtual void UpdateParameterList() Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelectable"
  },
  "api/GraphProcessor.ExposedParameterWorkaround.html": {
    "href": "api/GraphProcessor.ExposedParameterWorkaround.html",
    "title": "Class ExposedParameterWorkaround",
    "keywords": "Class ExposedParameterWorkaround Inheritance object Object ScriptableObject ExposedParameterWorkaround Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [Serializable] public class ExposedParameterWorkaround : ScriptableObject Fields | Improve this Doc View Source graph Declaration public BaseGraph graph Field Value Type Description BaseGraph | Improve this Doc View Source parameters Declaration [SerializeReference] public List<ExposedParameter> parameters Field Value Type Description List<ExposedParameter>"
  },
  "api/GraphProcessor.FieldDrawerAttribute.html": {
    "href": "api/GraphProcessor.FieldDrawerAttribute.html",
    "title": "Class FieldDrawerAttribute",
    "keywords": "Class FieldDrawerAttribute Set a custom drawer for a field. It can then be created using the FieldFactory Inheritance object Attribute FieldDrawerAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = false)] [Obsolete(\"You can use the standard Unity CustomPropertyDrawer instead.\")] public class FieldDrawerAttribute : Attribute Constructors | Improve this Doc View Source FieldDrawerAttribute(Type) Register a custom view for a type in the FieldFactory class Declaration public FieldDrawerAttribute(Type fieldType) Parameters Type Name Description Type fieldType Fields | Improve this Doc View Source fieldType Set a custom drawer for a field. It can then be created using the FieldFactory Declaration public Type fieldType Field Value Type Description Type"
  },
  "api/GraphProcessor.FieldFactory.html": {
    "href": "api/GraphProcessor.FieldFactory.html",
    "title": "Class FieldFactory",
    "keywords": "Class FieldFactory Inheritance object FieldFactory Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [Obsolete(\"Field Factory is not necessary anymore. You can use a SerializedProperty directly instead.\")] public static class FieldFactory Methods | Improve this Doc View Source CreateField(Type, object, Action<object>, string) Declaration public static VisualElement CreateField(Type fieldType, object value, Action<object> onValueChanged, string label) Parameters Type Name Description Type fieldType object value Action<object> onValueChanged string label Returns Type Description VisualElement | Improve this Doc View Source CreateField(Type, string) Declaration public static VisualElement CreateField(Type t, string label) Parameters Type Name Description Type t string label Returns Type Description VisualElement | Improve this Doc View Source CreateFieldSpecific<T>(T, Action<object>, string) Declaration public static INotifyValueChanged<T> CreateFieldSpecific<T>(T value, Action<object> onValueChanged, string label) Parameters Type Name Description T value Action<object> onValueChanged string label Returns Type Description INotifyValueChanged<T> Type Parameters Name Description T | Improve this Doc View Source CreateField<T>(T, string) Declaration public static INotifyValueChanged<T> CreateField<T>(T value, string label = null) Parameters Type Name Description T value string label Returns Type Description INotifyValueChanged<T> Type Parameters Name Description T"
  },
  "api/GraphProcessor.FloatParameter.FloatMode.html": {
    "href": "api/GraphProcessor.FloatParameter.FloatMode.html",
    "title": "Enum FloatParameter.FloatMode",
    "keywords": "Enum FloatParameter.FloatMode Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public enum FloatParameter.FloatMode Fields Name Description Default Slider"
  },
  "api/GraphProcessor.FloatParameter.FloatSettings.html": {
    "href": "api/GraphProcessor.FloatParameter.FloatSettings.html",
    "title": "Class FloatParameter.FloatSettings",
    "keywords": "Class FloatParameter.FloatSettings Inheritance object ExposedParameter.Settings FloatParameter.FloatSettings Inherited Members ExposedParameter.Settings.isHidden ExposedParameter.Settings.expanded ExposedParameter.Settings.Equals(object) ExposedParameter.Settings.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class FloatParameter.FloatSettings : ExposedParameter.Settings Fields | Improve this Doc View Source max Declaration public float max Field Value Type Description float | Improve this Doc View Source min Declaration public float min Field Value Type Description float | Improve this Doc View Source mode Declaration public FloatParameter.FloatMode mode Field Value Type Description FloatParameter.FloatMode Methods | Improve this Doc View Source Equals(Settings) Declaration public override bool Equals(ExposedParameter.Settings param) Parameters Type Name Description ExposedParameter.Settings param Returns Type Description bool Overrides ExposedParameter.Settings.Equals(ExposedParameter.Settings)"
  },
  "api/GraphProcessor.FloatParameter.html": {
    "href": "api/GraphProcessor.FloatParameter.html",
    "title": "Class FloatParameter",
    "keywords": "Class FloatParameter Inheritance object ExposedParameter FloatParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class FloatParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Methods | Improve this Doc View Source CreateSettings() Declaration protected override ExposedParameter.Settings CreateSettings() Returns Type Description ExposedParameter.Settings Overrides ExposedParameter.CreateSettings() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.FloatParameterDrawer.html": {
    "href": "api/GraphProcessor.FloatParameterDrawer.html",
    "title": "Class FloatParameterDrawer",
    "keywords": "Class FloatParameterDrawer Inheritance object GUIDrawer PropertyDrawer ExposedParameterDrawer FloatParameterDrawer Inherited Members ExposedParameterDrawer.CreateValProperty(SerializedProperty, string) ExposedParameterDrawer.GetSettingsProperty(SerializedProperty) ExposedParameterDrawer.GetValProperty(SerializedProperty) ExposedParameterDrawer.GetNameProperty(SerializedProperty) ExposedParameterDrawer.ApplyModifiedProperties(SerializedProperty) PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(FloatParameter))] public class FloatParameterDrawer : ExposedParameterDrawer Methods | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. Returns Type Description VisualElement The element containing the custom GUI. Overrides ExposedParameterDrawer.CreatePropertyGUI(SerializedProperty)"
  },
  "api/GraphProcessor.FloatSettingsDrawer.html": {
    "href": "api/GraphProcessor.FloatSettingsDrawer.html",
    "title": "Class FloatSettingsDrawer",
    "keywords": "Class FloatSettingsDrawer Inheritance object GUIDrawer PropertyDrawer ExposedParameterSettingsDrawer FloatSettingsDrawer Inherited Members ExposedParameterSettingsDrawer.CreateHideInInspectorField(SerializedProperty) ExposedParameterSettingsDrawer.GetGraph(SerializedProperty) ExposedParameterSettingsDrawer.GetParameter(SerializedProperty) ExposedParameterSettingsDrawer.CreateSettingsField(SerializedProperty, string, string) PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(FloatParameter.FloatSettings))] public class FloatSettingsDrawer : ExposedParameterSettingsDrawer Methods | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty settingsProperty) Parameters Type Name Description SerializedProperty settingsProperty Returns Type Description VisualElement The element containing the custom GUI. Overrides ExposedParameterSettingsDrawer.CreatePropertyGUI(SerializedProperty)"
  },
  "api/GraphProcessor.GameObjectParameter.html": {
    "href": "api/GraphProcessor.GameObjectParameter.html",
    "title": "Class GameObjectParameter",
    "keywords": "Class GameObjectParameter Inheritance object ExposedParameter GameObjectParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class GameObjectParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Methods | Improve this Doc View Source GetValueType() Declaration public override Type GetValueType() Returns Type Description Type Overrides ExposedParameter.GetValueType() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.GradientParameter.GradientColorMode.html": {
    "href": "api/GraphProcessor.GradientParameter.GradientColorMode.html",
    "title": "Enum GradientParameter.GradientColorMode",
    "keywords": "Enum GradientParameter.GradientColorMode Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public enum GradientParameter.GradientColorMode Fields Name Description Default HDR"
  },
  "api/GraphProcessor.GradientParameter.GradientSettings.html": {
    "href": "api/GraphProcessor.GradientParameter.GradientSettings.html",
    "title": "Class GradientParameter.GradientSettings",
    "keywords": "Class GradientParameter.GradientSettings Inheritance object ExposedParameter.Settings GradientParameter.GradientSettings Inherited Members ExposedParameter.Settings.isHidden ExposedParameter.Settings.expanded ExposedParameter.Settings.Equals(object) ExposedParameter.Settings.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class GradientParameter.GradientSettings : ExposedParameter.Settings Fields | Improve this Doc View Source mode Declaration public GradientParameter.GradientColorMode mode Field Value Type Description GradientParameter.GradientColorMode Methods | Improve this Doc View Source Equals(Settings) Declaration public override bool Equals(ExposedParameter.Settings param) Parameters Type Name Description ExposedParameter.Settings param Returns Type Description bool Overrides ExposedParameter.Settings.Equals(ExposedParameter.Settings)"
  },
  "api/GraphProcessor.GradientParameter.html": {
    "href": "api/GraphProcessor.GradientParameter.html",
    "title": "Class GradientParameter",
    "keywords": "Class GradientParameter Inheritance object ExposedParameter GradientParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class GradientParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Methods | Improve this Doc View Source CreateSettings() Declaration protected override ExposedParameter.Settings CreateSettings() Returns Type Description ExposedParameter.Settings Overrides ExposedParameter.CreateSettings() | Improve this Doc View Source GetValueType() Declaration public override Type GetValueType() Returns Type Description Type Overrides ExposedParameter.GetValueType() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.GradientParameterDrawer.html": {
    "href": "api/GraphProcessor.GradientParameterDrawer.html",
    "title": "Class GradientParameterDrawer",
    "keywords": "Class GradientParameterDrawer Inheritance object GUIDrawer PropertyDrawer ExposedParameterDrawer GradientParameterDrawer Inherited Members ExposedParameterDrawer.CreateValProperty(SerializedProperty, string) ExposedParameterDrawer.GetSettingsProperty(SerializedProperty) ExposedParameterDrawer.GetValProperty(SerializedProperty) ExposedParameterDrawer.GetNameProperty(SerializedProperty) ExposedParameterDrawer.ApplyModifiedProperties(SerializedProperty) PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(GradientParameter))] public class GradientParameterDrawer : ExposedParameterDrawer Methods | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. Returns Type Description VisualElement The element containing the custom GUI. Overrides ExposedParameterDrawer.CreatePropertyGUI(SerializedProperty)"
  },
  "api/GraphProcessor.GradientSettingsDrawer.html": {
    "href": "api/GraphProcessor.GradientSettingsDrawer.html",
    "title": "Class GradientSettingsDrawer",
    "keywords": "Class GradientSettingsDrawer Inheritance object GUIDrawer PropertyDrawer ExposedParameterSettingsDrawer GradientSettingsDrawer Inherited Members ExposedParameterSettingsDrawer.CreateHideInInspectorField(SerializedProperty) ExposedParameterSettingsDrawer.GetGraph(SerializedProperty) ExposedParameterSettingsDrawer.GetParameter(SerializedProperty) ExposedParameterSettingsDrawer.CreateSettingsField(SerializedProperty, string, string) PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(GradientParameter.GradientSettings))] public class GradientSettingsDrawer : ExposedParameterSettingsDrawer Methods | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty settingsProperty) Parameters Type Name Description SerializedProperty settingsProperty Returns Type Description VisualElement The element containing the custom GUI. Overrides ExposedParameterSettingsDrawer.CreatePropertyGUI(SerializedProperty)"
  },
  "api/GraphProcessor.GraphChanges.html": {
    "href": "api/GraphProcessor.GraphChanges.html",
    "title": "Class GraphChanges",
    "keywords": "Class GraphChanges Inheritance object GraphChanges Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public class GraphChanges Fields | Improve this Doc View Source addedEdge Declaration public SerializableEdge addedEdge Field Value Type Description SerializableEdge | Improve this Doc View Source addedGroups Declaration public Group addedGroups Field Value Type Description Group | Improve this Doc View Source addedNode Declaration public BaseNode addedNode Field Value Type Description BaseNode | Improve this Doc View Source addedStackNode Declaration public BaseStackNode addedStackNode Field Value Type Description BaseStackNode | Improve this Doc View Source addedStickyNotes Declaration public StickyNote addedStickyNotes Field Value Type Description StickyNote | Improve this Doc View Source nodeChanged Declaration public BaseNode nodeChanged Field Value Type Description BaseNode | Improve this Doc View Source removedEdge Declaration public SerializableEdge removedEdge Field Value Type Description SerializableEdge | Improve this Doc View Source removedGroups Declaration public Group removedGroups Field Value Type Description Group | Improve this Doc View Source removedNode Declaration public BaseNode removedNode Field Value Type Description BaseNode | Improve this Doc View Source removedStackNode Declaration public BaseStackNode removedStackNode Field Value Type Description BaseStackNode | Improve this Doc View Source removedStickyNotes Declaration public StickyNote removedStickyNotes Field Value Type Description StickyNote"
  },
  "api/GraphProcessor.GraphInspector.html": {
    "href": "api/GraphProcessor.GraphInspector.html",
    "title": "Class GraphInspector",
    "keywords": "Class GraphInspector Inheritance object Object ScriptableObject Editor GraphInspector Inherited Members Editor.SaveChanges() Editor.DiscardChanges() Editor.CreateEditorWithContext(Object[], Object, Type) Editor.CreateEditorWithContext(Object[], Object) Editor.CreateCachedEditorWithContext(Object, Object, Type, ref Editor) Editor.CreateCachedEditorWithContext(Object[], Object, Type, ref Editor) Editor.CreateCachedEditor(Object, Type, ref Editor) Editor.CreateCachedEditor(Object[], Type, ref Editor) Editor.CreateEditor(Object) Editor.CreateEditor(Object, Type) Editor.CreateEditor(Object[]) Editor.CreateEditor(Object[], Type) Editor.DrawPropertiesExcluding(SerializedObject, params string[]) Editor.DrawDefaultInspector() Editor.Repaint() Editor.RequiresConstantRepaint() Editor.DrawHeader() Editor.OnHeaderGUI() Editor.ShouldHideOpenButton() Editor.DrawFoldoutInspector(Object, ref Editor) Editor.HasPreviewGUI() Editor.GetPreviewTitle() Editor.RenderStaticPreview(string, Object[], int, int) Editor.OnPreviewGUI(Rect, GUIStyle) Editor.OnInteractivePreviewGUI(Rect, GUIStyle) Editor.OnPreviewSettings() Editor.GetInfoString() Editor.DrawPreview(Rect) Editor.ReloadPreviewInstances() Editor.UseDefaultMargins() Editor.MoveNextTarget() Editor.ResetTarget() Editor.hasUnsavedChanges Editor.saveChangesMessage Editor.target Editor.targets Editor.serializedObject Editor.finishedDefaultHeaderGUI ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class GraphInspector : Editor Fields | Improve this Doc View Source exposedParameterFactory Declaration protected ExposedParameterFieldFactory exposedParameterFactory Field Value Type Description ExposedParameterFieldFactory | Improve this Doc View Source graph Declaration protected BaseGraph graph Field Value Type Description BaseGraph | Improve this Doc View Source root Declaration protected VisualElement root Field Value Type Description VisualElement Methods | Improve this Doc View Source CreateInspector() Declaration protected virtual void CreateInspector() | Improve this Doc View Source CreateInspectorGUI() Implement this method to make a custom UIElements inspector. Declaration public override sealed VisualElement CreateInspectorGUI() Returns Type Description VisualElement Overrides UnityEditor.Editor.CreateInspectorGUI() | Improve this Doc View Source FillExposedParameters(VisualElement) Declaration protected void FillExposedParameters(VisualElement parameterContainer) Parameters Type Name Description VisualElement parameterContainer | Improve this Doc View Source OnDisable() Declaration protected virtual void OnDisable() | Improve this Doc View Source OnEnable() Declaration protected virtual void OnEnable() | Improve this Doc View Source OnInspectorGUI() Implement this function to make a custom inspector. Declaration public override sealed void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI()"
  },
  "api/GraphProcessor.GraphUtils.html": {
    "href": "api/GraphProcessor.GraphUtils.html",
    "title": "Class GraphUtils",
    "keywords": "Class GraphUtils Inheritance object GraphUtils Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public static class GraphUtils Methods | Improve this Doc View Source DepthFirstSort(BaseGraph) Declaration public static List<BaseNode> DepthFirstSort(BaseGraph g) Parameters Type Name Description BaseGraph g Returns Type Description List<BaseNode> | Improve this Doc View Source FindCyclesInGraph(BaseGraph, Action<BaseNode>) Declaration public static void FindCyclesInGraph(BaseGraph g, Action<BaseNode> cyclicNode) Parameters Type Name Description BaseGraph g Action<BaseNode> cyclicNode"
  },
  "api/GraphProcessor.Group.html": {
    "href": "api/GraphProcessor.Group.html",
    "title": "Class Group",
    "keywords": "Class Group Group the selected node when created Inheritance object Group Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class Group Constructors | Improve this Doc View Source Group() Group the selected node when created Declaration public Group() | Improve this Doc View Source Group(string, Vector2) Create a new group with a title and a position Declaration public Group(string title, Vector2 position) Parameters Type Name Description string title Vector2 position Fields | Improve this Doc View Source color Group the selected node when created Declaration public Color color Field Value Type Description Color | Improve this Doc View Source innerNodeGUIDs Store the GUIDs of the node in the group Declaration public List<string> innerNodeGUIDs Field Value Type Description List<string> | Improve this Doc View Source position Group the selected node when created Declaration public Rect position Field Value Type Description Rect | Improve this Doc View Source size Group the selected node when created Declaration public Vector2 size Field Value Type Description Vector2 | Improve this Doc View Source title Group the selected node when created Declaration public string title Field Value Type Description string Methods | Improve this Doc View Source OnCreated() Called when the Group is created Declaration public virtual void OnCreated()"
  },
  "api/GraphProcessor.GroupView.html": {
    "href": "api/GraphProcessor.GroupView.html",
    "title": "Class GroupView",
    "keywords": "Class GroupView Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Scope Group GroupView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelectable ICollectibleElement Inherited Members Group.AcceptsElement(GraphElement, ref string) Group.FocusTitleTextField() Group.OnGroupRenamed(string, string) Group.CollectElements(HashSet<GraphElement>, Func<GraphElement, bool>) Group.title Scope.HitTest(Vector2) Scope.Overlaps(Rect) Scope.ContainsElement(GraphElement) Scope.AddElements(IEnumerable<GraphElement>) Scope.AddElement(GraphElement) Scope.RemoveElementsWithoutNotification(IEnumerable<GraphElement>) Scope.RemoveElements(IEnumerable<GraphElement>) Scope.RemoveElement(GraphElement) Scope.ScheduleUpdateGeometryFromContent() Scope.UpdateGeometryFromContent() Scope.GetPosition() Scope.SetScopePositionOnly(Rect) Scope.UpdatePresenterPosition() Scope.autoUpdateGeometry Scope.headerContainer Scope.containedElements Scope.containedElementsRect GraphElement.ResetLayer() GraphElement.OnCustomStyleResolved(ICustomStyle) GraphElement.IsSelectable() GraphElement.IsMovable() GraphElement.IsResizable() GraphElement.IsDroppable() GraphElement.IsAscendable() GraphElement.IsRenamable() GraphElement.IsCopiable() GraphElement.IsSnappable() GraphElement.IsGroupable() GraphElement.IsStackable() GraphElement.GetGlobalCenter() GraphElement.OnSelected() GraphElement.OnUnselected() GraphElement.Select(VisualElement, bool) GraphElement.Unselect(VisualElement) GraphElement.IsSelected(VisualElement) GraphElement.elementTypeColor GraphElement.layer GraphElement.showInMiniMap GraphElement.capabilities GraphElement.selected VisualElement.disabledUssClassName VisualElement.ExecuteDefaultAction(EventBase) VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class GroupView : Group, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelectable, ICollectibleElement Constructors | Improve this Doc View Source GroupView() Declaration public GroupView() Fields | Improve this Doc View Source group Declaration public Group group Field Value Type Description Group | Improve this Doc View Source owner Declaration public BaseGraphView owner Field Value Type Description BaseGraphView Methods | Improve this Doc View Source Initialize(BaseGraphView, Group) Declaration public void Initialize(BaseGraphView graphView, Group block) Parameters Type Name Description BaseGraphView graphView Group block | Improve this Doc View Source OnElementsAdded(IEnumerable<GraphElement>) Declaration protected override void OnElementsAdded(IEnumerable<GraphElement> elements) Parameters Type Name Description IEnumerable<GraphElement> elements Overrides Group.OnElementsAdded(IEnumerable<GraphElement>) | Improve this Doc View Source OnElementsRemoved(IEnumerable<GraphElement>) Declaration protected override void OnElementsRemoved(IEnumerable<GraphElement> elements) Parameters Type Name Description IEnumerable<GraphElement> elements Overrides Group.OnElementsRemoved(IEnumerable<GraphElement>) | Improve this Doc View Source SetPosition(Rect) Sets the geometry of the Scope. Declaration public override void SetPosition(Rect newPos) Parameters Type Name Description Rect newPos The new geometry. Overrides UnityEditor.Experimental.GraphView.Scope.SetPosition(UnityEngine.Rect) | Improve this Doc View Source UpdateGroupColor(Color) Declaration public void UpdateGroupColor(Color newColor) Parameters Type Name Description Color newColor Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelectable UnityEditor.Experimental.GraphView.ICollectibleElement"
  },
  "api/GraphProcessor.ICreateNodeFrom-1.html": {
    "href": "api/GraphProcessor.ICreateNodeFrom-1.html",
    "title": "Interface ICreateNodeFrom<T>",
    "keywords": "Interface ICreateNodeFrom<T> Implement this interface on a BaseNode, it allows you to automatically spawn a node if an asset of type T is dropped in the graphview area Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public interface ICreateNodeFrom<T> where T : Object Type Parameters Name Description T The type object your node will be created from, it must be a subclass of UnityEngine.Object Methods | Improve this Doc View Source InitializeNodeFromObject(T) This function is called just after creating the node from an object and allows you to initialize the node with the object data. Declaration bool InitializeNodeFromObject(T value) Parameters Type Name Description T value Object value Returns Type Description bool True if the initialization happened correctly. False otherwise, returning false will discard your node."
  },
  "api/GraphProcessor.ITypeAdapter.html": {
    "href": "api/GraphProcessor.ITypeAdapter.html",
    "title": "Class ITypeAdapter",
    "keywords": "Class ITypeAdapter Implement this interface to use the inside your class to define type convertions to use inside the graph. Example: public class CustomConvertions : ITypeAdapter { public static Vector4 ConvertFloatToVector(float from) => new Vector4(from, from, from, from); ... } Inheritance object ITypeAdapter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public abstract class ITypeAdapter Methods | Improve this Doc View Source GetIncompatibleTypes() Implement this interface to use the inside your class to define type convertions to use inside the graph. Example: public class CustomConvertions : ITypeAdapter { public static Vector4 ConvertFloatToVector(float from) => new Vector4(from, from, from, from); ... } Declaration public virtual IEnumerable<(Type, Type)> GetIncompatibleTypes() Returns Type Description IEnumerable<(Type, Type)>"
  },
  "api/GraphProcessor.IngredientDrawerUIE.html": {
    "href": "api/GraphProcessor.IngredientDrawerUIE.html",
    "title": "Class IngredientDrawerUIE",
    "keywords": "Class IngredientDrawerUIE Inheritance object GUIDrawer PropertyDrawer IngredientDrawerUIE Inherited Members PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(Vector4))] public class IngredientDrawerUIE : PropertyDrawer Methods | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. Returns Type Description VisualElement The element containing the custom GUI. Overrides UnityEditor.PropertyDrawer.CreatePropertyGUI(UnityEditor.SerializedProperty)"
  },
  "api/GraphProcessor.InputAttribute.html": {
    "href": "api/GraphProcessor.InputAttribute.html",
    "title": "Class InputAttribute",
    "keywords": "Class InputAttribute Tell that this field is will generate an input port Inheritance object Attribute InputAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class InputAttribute : Attribute Constructors | Improve this Doc View Source InputAttribute(string, bool) Mark the field as an input port Declaration public InputAttribute(string name = null, bool allowMultiple = false) Parameters Type Name Description string name display name bool allowMultiple is connecting multiple edges allowed Fields | Improve this Doc View Source allowMultiple Tell that this field is will generate an input port Declaration public bool allowMultiple Field Value Type Description bool | Improve this Doc View Source name Tell that this field is will generate an input port Declaration public string name Field Value Type Description string"
  },
  "api/GraphProcessor.IntParameter.IntMode.html": {
    "href": "api/GraphProcessor.IntParameter.IntMode.html",
    "title": "Enum IntParameter.IntMode",
    "keywords": "Enum IntParameter.IntMode Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public enum IntParameter.IntMode Fields Name Description Default Slider"
  },
  "api/GraphProcessor.IntParameter.IntSettings.html": {
    "href": "api/GraphProcessor.IntParameter.IntSettings.html",
    "title": "Class IntParameter.IntSettings",
    "keywords": "Class IntParameter.IntSettings Inheritance object ExposedParameter.Settings IntParameter.IntSettings Inherited Members ExposedParameter.Settings.isHidden ExposedParameter.Settings.expanded ExposedParameter.Settings.Equals(object) ExposedParameter.Settings.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class IntParameter.IntSettings : ExposedParameter.Settings Fields | Improve this Doc View Source max Declaration public int max Field Value Type Description int | Improve this Doc View Source min Declaration public int min Field Value Type Description int | Improve this Doc View Source mode Declaration public IntParameter.IntMode mode Field Value Type Description IntParameter.IntMode Methods | Improve this Doc View Source Equals(Settings) Declaration public override bool Equals(ExposedParameter.Settings param) Parameters Type Name Description ExposedParameter.Settings param Returns Type Description bool Overrides ExposedParameter.Settings.Equals(ExposedParameter.Settings)"
  },
  "api/GraphProcessor.IntParameter.html": {
    "href": "api/GraphProcessor.IntParameter.html",
    "title": "Class IntParameter",
    "keywords": "Class IntParameter Inheritance object ExposedParameter IntParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class IntParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Methods | Improve this Doc View Source CreateSettings() Declaration protected override ExposedParameter.Settings CreateSettings() Returns Type Description ExposedParameter.Settings Overrides ExposedParameter.CreateSettings() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.IntParameterDrawer.html": {
    "href": "api/GraphProcessor.IntParameterDrawer.html",
    "title": "Class IntParameterDrawer",
    "keywords": "Class IntParameterDrawer Inheritance object GUIDrawer PropertyDrawer ExposedParameterDrawer IntParameterDrawer Inherited Members ExposedParameterDrawer.CreateValProperty(SerializedProperty, string) ExposedParameterDrawer.GetSettingsProperty(SerializedProperty) ExposedParameterDrawer.GetValProperty(SerializedProperty) ExposedParameterDrawer.GetNameProperty(SerializedProperty) ExposedParameterDrawer.ApplyModifiedProperties(SerializedProperty) PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(IntParameter))] public class IntParameterDrawer : ExposedParameterDrawer Methods | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. Returns Type Description VisualElement The element containing the custom GUI. Overrides ExposedParameterDrawer.CreatePropertyGUI(SerializedProperty)"
  },
  "api/GraphProcessor.IntSettingsDrawer.html": {
    "href": "api/GraphProcessor.IntSettingsDrawer.html",
    "title": "Class IntSettingsDrawer",
    "keywords": "Class IntSettingsDrawer Inheritance object GUIDrawer PropertyDrawer ExposedParameterSettingsDrawer IntSettingsDrawer Inherited Members ExposedParameterSettingsDrawer.CreateHideInInspectorField(SerializedProperty) ExposedParameterSettingsDrawer.GetGraph(SerializedProperty) ExposedParameterSettingsDrawer.GetParameter(SerializedProperty) ExposedParameterSettingsDrawer.CreateSettingsField(SerializedProperty, string, string) PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(IntParameter.IntSettings))] public class IntSettingsDrawer : ExposedParameterSettingsDrawer Methods | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty settingsProperty) Parameters Type Name Description SerializedProperty settingsProperty Returns Type Description VisualElement The element containing the custom GUI. Overrides ExposedParameterSettingsDrawer.CreatePropertyGUI(SerializedProperty)"
  },
  "api/GraphProcessor.IsCompatibleWithGraph.html": {
    "href": "api/GraphProcessor.IsCompatibleWithGraph.html",
    "title": "Class IsCompatibleWithGraph",
    "keywords": "Class IsCompatibleWithGraph Inheritance object Attribute IsCompatibleWithGraph Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Method)] public class IsCompatibleWithGraph : Attribute"
  },
  "api/GraphProcessor.JobGraphProcessor.html": {
    "href": "api/GraphProcessor.JobGraphProcessor.html",
    "title": "Class JobGraphProcessor",
    "keywords": "Class JobGraphProcessor Graph processor Inheritance object BaseGraphProcessor JobGraphProcessor Inherited Members BaseGraphProcessor.graph object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public class JobGraphProcessor : BaseGraphProcessor Constructors | Improve this Doc View Source JobGraphProcessor(BaseGraph) Manage graph scheduling and processing Declaration public JobGraphProcessor(BaseGraph graph) Parameters Type Name Description BaseGraph graph Graph to be processed Methods | Improve this Doc View Source Run() Schedule the graph into the job system Declaration public override void Run() Overrides BaseGraphProcessor.Run() | Improve this Doc View Source UpdateComputeOrder() Graph processor Declaration public override void UpdateComputeOrder() Overrides BaseGraphProcessor.UpdateComputeOrder()"
  },
  "api/GraphProcessor.JsonElement.html": {
    "href": "api/GraphProcessor.JsonElement.html",
    "title": "Struct JsonElement",
    "keywords": "Struct JsonElement Inherited Members ValueType.Equals(object) ValueType.GetHashCode() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public struct JsonElement Fields | Improve this Doc View Source jsonDatas Declaration public string jsonDatas Field Value Type Description string | Improve this Doc View Source type Declaration public string type Field Value Type Description string Methods | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description string Overrides ValueType.ToString()"
  },
  "api/GraphProcessor.JsonSerializer.html": {
    "href": "api/GraphProcessor.JsonSerializer.html",
    "title": "Class JsonSerializer",
    "keywords": "Class JsonSerializer Inheritance object JsonSerializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public static class JsonSerializer Methods | Improve this Doc View Source DeserializeNode(JsonElement) Declaration public static BaseNode DeserializeNode(JsonElement e) Parameters Type Name Description JsonElement e Returns Type Description BaseNode | Improve this Doc View Source Deserialize<T>(JsonElement) Declaration public static T Deserialize<T>(JsonElement e) Parameters Type Name Description JsonElement e Returns Type Description T Type Parameters Name Description T | Improve this Doc View Source Serialize(object) Declaration public static JsonElement Serialize(object obj) Parameters Type Name Description object obj Returns Type Description JsonElement | Improve this Doc View Source SerializeNode(BaseNode) Declaration public static JsonElement SerializeNode(BaseNode node) Parameters Type Name Description BaseNode node Returns Type Description JsonElement"
  },
  "api/GraphProcessor.LongParameter.html": {
    "href": "api/GraphProcessor.LongParameter.html",
    "title": "Class LongParameter",
    "keywords": "Class LongParameter Inheritance object ExposedParameter LongParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class LongParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.MaterialParameter.html": {
    "href": "api/GraphProcessor.MaterialParameter.html",
    "title": "Class MaterialParameter",
    "keywords": "Class MaterialParameter Inheritance object ExposedParameter MaterialParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class MaterialParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Methods | Improve this Doc View Source GetValueType() Declaration public override Type GetValueType() Returns Type Description Type Overrides ExposedParameter.GetValueType() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.MeshParameter.html": {
    "href": "api/GraphProcessor.MeshParameter.html",
    "title": "Class MeshParameter",
    "keywords": "Class MeshParameter Inheritance object ExposedParameter MeshParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class MeshParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Methods | Improve this Doc View Source GetValueType() Declaration public override Type GetValueType() Returns Type Description Type Overrides ExposedParameter.GetValueType() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.MiniMapView.html": {
    "href": "api/GraphProcessor.MiniMapView.html",
    "title": "Class MiniMapView",
    "keywords": "Class MiniMapView Inheritance object CallbackEventHandler Focusable VisualElement GraphElement MiniMap MiniMapView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelectable Inherited Members MiniMap.m_SelectedChildrenColor MiniMap.zoomFactorTextChanged MiniMap.BuildContextualMenu(ContextualMenuPopulateEvent) MiniMap.OnResized() MiniMap.maxHeight MiniMap.maxWidth MiniMap.anchored MiniMap.windowed MiniMap.graphView GraphElement.ResetLayer() GraphElement.OnCustomStyleResolved(ICustomStyle) GraphElement.IsSelectable() GraphElement.IsMovable() GraphElement.IsResizable() GraphElement.IsDroppable() GraphElement.IsAscendable() GraphElement.IsRenamable() GraphElement.IsCopiable() GraphElement.IsSnappable() GraphElement.IsGroupable() GraphElement.IsStackable() GraphElement.GetGlobalCenter() GraphElement.UpdatePresenterPosition() GraphElement.GetPosition() GraphElement.SetPosition(Rect) GraphElement.OnSelected() GraphElement.OnUnselected() GraphElement.HitTest(Vector2) GraphElement.Select(VisualElement, bool) GraphElement.Unselect(VisualElement) GraphElement.IsSelected(VisualElement) GraphElement.elementTypeColor GraphElement.layer GraphElement.title GraphElement.showInMiniMap GraphElement.capabilities GraphElement.selected VisualElement.disabledUssClassName VisualElement.ExecuteDefaultAction(EventBase) VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class MiniMapView : MiniMap, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelectable Constructors | Improve this Doc View Source MiniMapView(BaseGraphView) Declaration public MiniMapView(BaseGraphView baseGraphView) Parameters Type Name Description BaseGraphView baseGraphView Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelectable"
  },
  "api/GraphProcessor.NodeBadgeView.html": {
    "href": "api/GraphProcessor.NodeBadgeView.html",
    "title": "Class NodeBadgeView",
    "keywords": "Class NodeBadgeView Inheritance object CallbackEventHandler Focusable VisualElement IconBadge NodeBadgeView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Inherited Members IconBadge.CreateError(string) IconBadge.CreateComment(string) IconBadge.AttachTo(VisualElement, SpriteAlignment) IconBadge.Detach() IconBadge.alignment IconBadge.target IconBadge.badgeText IconBadge.visualStyle IconBadge.distance VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class NodeBadgeView : IconBadge, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors | Improve this Doc View Source NodeBadgeView(string, NodeMessageType) Declaration public NodeBadgeView(string message, NodeMessageType messageType) Parameters Type Name Description string message NodeMessageType messageType | Improve this Doc View Source NodeBadgeView(string, Texture, Color) Declaration public NodeBadgeView(string message, Texture icon, Color color) Parameters Type Name Description string message Texture icon Color color Methods | Improve this Doc View Source ExecuteDefaultAction(EventBase) Executes logic after the callbacks registered on the event target have executed, unless the event has been marked to prevent its default behaviour. EventBase{T}.PreventDefault. Declaration protected override void ExecuteDefaultAction(EventBase evt) Parameters Type Name Description EventBase evt The event instance. Overrides UnityEditor.Experimental.GraphView.IconBadge.ExecuteDefaultAction(UnityEngine.UIElements.EventBase) Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler"
  },
  "api/GraphProcessor.NodeCustomEditor.html": {
    "href": "api/GraphProcessor.NodeCustomEditor.html",
    "title": "Class NodeCustomEditor",
    "keywords": "Class NodeCustomEditor Inheritance object Attribute NodeCustomEditor Implements _Attribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class NodeCustomEditor : Attribute, _Attribute Constructors | Improve this Doc View Source NodeCustomEditor(Type) Declaration public NodeCustomEditor(Type nodeType) Parameters Type Name Description Type nodeType Fields | Improve this Doc View Source nodeType Declaration public Type nodeType Field Value Type Description Type Implements _Attribute"
  },
  "api/GraphProcessor.NodeGraphProcessorMenuItems.MenuItemPosition.html": {
    "href": "api/GraphProcessor.NodeGraphProcessorMenuItems.MenuItemPosition.html",
    "title": "Class NodeGraphProcessorMenuItems.MenuItemPosition",
    "keywords": "Class NodeGraphProcessorMenuItems.MenuItemPosition Inheritance object NodeGraphProcessorMenuItems.MenuItemPosition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax protected static class NodeGraphProcessorMenuItems.MenuItemPosition Fields | Improve this Doc View Source afterCreateScript Declaration public const int afterCreateScript = 81 Field Value Type Description int | Improve this Doc View Source beforeCreateScript Declaration public const int beforeCreateScript = 79 Field Value Type Description int"
  },
  "api/GraphProcessor.NodeGraphProcessorMenuItems.html": {
    "href": "api/GraphProcessor.NodeGraphProcessorMenuItems.html",
    "title": "Class NodeGraphProcessorMenuItems",
    "keywords": "Class NodeGraphProcessorMenuItems To add the menu items that create node C# script templates files you can inherit from this class and use it's API combined with [MenuItem] See GraphProcessorMenuItems.cs in examples for implementation details Inheritance object NodeGraphProcessorMenuItems Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class NodeGraphProcessorMenuItems Methods | Improve this Doc View Source CreateDefaultNodeCSharpScritpt() To add the menu items that create node C# script templates files you can inherit from this class and use it's API combined with [MenuItem] See GraphProcessorMenuItems.cs in examples for implementation details Declaration protected static void CreateDefaultNodeCSharpScritpt() | Improve this Doc View Source CreateDefaultNodeViewCSharpScritpt() To add the menu items that create node C# script templates files you can inherit from this class and use it's API combined with [MenuItem] See GraphProcessorMenuItems.cs in examples for implementation details Declaration protected static void CreateDefaultNodeViewCSharpScritpt() | Improve this Doc View Source GetCurrentProjectWindowPath() To add the menu items that create node C# script templates files you can inherit from this class and use it's API combined with [MenuItem] See GraphProcessorMenuItems.cs in examples for implementation details Declaration protected static string GetCurrentProjectWindowPath() Returns Type Description string"
  },
  "api/GraphProcessor.NodeInputPortContainer.html": {
    "href": "api/GraphProcessor.NodeInputPortContainer.html",
    "title": "Class NodeInputPortContainer",
    "keywords": "Class NodeInputPortContainer Container of ports and the edges connected to these ports Inheritance object List<NodePort> NodePortContainer NodeInputPortContainer Implements IList<NodePort> ICollection<NodePort> IReadOnlyList<NodePort> IReadOnlyCollection<NodePort> IEnumerable<NodePort> IList ICollection IEnumerable Inherited Members NodePortContainer.node NodePortContainer.Remove(SerializableEdge) NodePortContainer.Add(SerializableEdge) List<NodePort>.Add(NodePort) List<NodePort>.AddRange(IEnumerable<NodePort>) List<NodePort>.AsReadOnly() List<NodePort>.BinarySearch(int, int, NodePort, IComparer<NodePort>) List<NodePort>.BinarySearch(NodePort) List<NodePort>.BinarySearch(NodePort, IComparer<NodePort>) List<NodePort>.Clear() List<NodePort>.Contains(NodePort) List<NodePort>.ConvertAll<TOutput>(Converter<NodePort, TOutput>) List<NodePort>.CopyTo(int, NodePort[], int, int) List<NodePort>.CopyTo(NodePort[]) List<NodePort>.CopyTo(NodePort[], int) List<NodePort>.Exists(Predicate<NodePort>) List<NodePort>.Find(Predicate<NodePort>) List<NodePort>.FindAll(Predicate<NodePort>) List<NodePort>.FindIndex(int, int, Predicate<NodePort>) List<NodePort>.FindIndex(int, Predicate<NodePort>) List<NodePort>.FindIndex(Predicate<NodePort>) List<NodePort>.FindLast(Predicate<NodePort>) List<NodePort>.FindLastIndex(int, int, Predicate<NodePort>) List<NodePort>.FindLastIndex(int, Predicate<NodePort>) List<NodePort>.FindLastIndex(Predicate<NodePort>) List<NodePort>.ForEach(Action<NodePort>) List<NodePort>.GetEnumerator() List<NodePort>.GetRange(int, int) List<NodePort>.IndexOf(NodePort) List<NodePort>.IndexOf(NodePort, int) List<NodePort>.IndexOf(NodePort, int, int) List<NodePort>.Insert(int, NodePort) List<NodePort>.InsertRange(int, IEnumerable<NodePort>) List<NodePort>.LastIndexOf(NodePort) List<NodePort>.LastIndexOf(NodePort, int) List<NodePort>.LastIndexOf(NodePort, int, int) List<NodePort>.Remove(NodePort) List<NodePort>.RemoveAll(Predicate<NodePort>) List<NodePort>.RemoveAt(int) List<NodePort>.RemoveRange(int, int) List<NodePort>.Reverse() List<NodePort>.Reverse(int, int) List<NodePort>.Sort() List<NodePort>.Sort(IComparer<NodePort>) List<NodePort>.Sort(Comparison<NodePort>) List<NodePort>.Sort(int, int, IComparer<NodePort>) List<NodePort>.ToArray() List<NodePort>.TrimExcess() List<NodePort>.TrueForAll(Predicate<NodePort>) List<NodePort>.Capacity List<NodePort>.Count List<NodePort>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public class NodeInputPortContainer : NodePortContainer, IList<NodePort>, ICollection<NodePort>, IReadOnlyList<NodePort>, IReadOnlyCollection<NodePort>, IEnumerable<NodePort>, IList, ICollection, IEnumerable Constructors | Improve this Doc View Source NodeInputPortContainer(BaseNode) Container of ports and the edges connected to these ports Declaration public NodeInputPortContainer(BaseNode node) Parameters Type Name Description BaseNode node Methods | Improve this Doc View Source PullDatas() Container of ports and the edges connected to these ports Declaration public void PullDatas() Implements IList<T> ICollection<T> IReadOnlyList<T> IReadOnlyCollection<T> IEnumerable<T> IList ICollection IEnumerable"
  },
  "api/GraphProcessor.NodeInspectorObject.html": {
    "href": "api/GraphProcessor.NodeInspectorObject.html",
    "title": "Class NodeInspectorObject",
    "keywords": "Class NodeInspectorObject Node inspector object, you can inherit from this class to customize your node inspector. Inheritance object Object ScriptableObject NodeInspectorObject Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class NodeInspectorObject : ScriptableObject Fields | Improve this Doc View Source previouslySelectedObject Previously selected object by the inspector Declaration public Object previouslySelectedObject Field Value Type Description Object Properties | Improve this Doc View Source selectedNodes List of currently selected nodes Declaration public HashSet<BaseNodeView> selectedNodes { get; } Property Value Type Description HashSet<BaseNodeView> Methods | Improve this Doc View Source NodeViewRemoved(BaseNodeView) Node inspector object, you can inherit from this class to customize your node inspector. Declaration public virtual void NodeViewRemoved(BaseNodeView view) Parameters Type Name Description BaseNodeView view | Improve this Doc View Source RefreshNodes() Node inspector object, you can inherit from this class to customize your node inspector. Declaration public virtual void RefreshNodes() | Improve this Doc View Source UpdateSelectedNodes(HashSet<BaseNodeView>) Updates the selection from the graph Declaration public virtual void UpdateSelectedNodes(HashSet<BaseNodeView> views) Parameters Type Name Description HashSet<BaseNodeView> views Events | Improve this Doc View Source nodeSelectionUpdated Triggered when the selection is updated Declaration public event Action nodeSelectionUpdated Event Type Type Description Action"
  },
  "api/GraphProcessor.NodeInspectorObjectEditor.html": {
    "href": "api/GraphProcessor.NodeInspectorObjectEditor.html",
    "title": "Class NodeInspectorObjectEditor",
    "keywords": "Class NodeInspectorObjectEditor Custom editor of the node inspector, you can inherit from this class to customize your node inspector. Inheritance object Object ScriptableObject Editor NodeInspectorObjectEditor Inherited Members Editor.SaveChanges() Editor.DiscardChanges() Editor.CreateEditorWithContext(Object[], Object, Type) Editor.CreateEditorWithContext(Object[], Object) Editor.CreateCachedEditorWithContext(Object, Object, Type, ref Editor) Editor.CreateCachedEditorWithContext(Object[], Object, Type, ref Editor) Editor.CreateCachedEditor(Object, Type, ref Editor) Editor.CreateCachedEditor(Object[], Type, ref Editor) Editor.CreateEditor(Object) Editor.CreateEditor(Object, Type) Editor.CreateEditor(Object[]) Editor.CreateEditor(Object[], Type) Editor.DrawPropertiesExcluding(SerializedObject, params string[]) Editor.DrawDefaultInspector() Editor.Repaint() Editor.OnInspectorGUI() Editor.RequiresConstantRepaint() Editor.DrawHeader() Editor.OnHeaderGUI() Editor.ShouldHideOpenButton() Editor.DrawFoldoutInspector(Object, ref Editor) Editor.HasPreviewGUI() Editor.GetPreviewTitle() Editor.RenderStaticPreview(string, Object[], int, int) Editor.OnPreviewGUI(Rect, GUIStyle) Editor.OnInteractivePreviewGUI(Rect, GUIStyle) Editor.OnPreviewSettings() Editor.GetInfoString() Editor.DrawPreview(Rect) Editor.ReloadPreviewInstances() Editor.UseDefaultMargins() Editor.MoveNextTarget() Editor.ResetTarget() Editor.hasUnsavedChanges Editor.saveChangesMessage Editor.target Editor.targets Editor.serializedObject Editor.finishedDefaultHeaderGUI ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomEditor(typeof(NodeInspectorObject))] public class NodeInspectorObjectEditor : Editor Fields | Improve this Doc View Source placeholder Custom editor of the node inspector, you can inherit from this class to customize your node inspector. Declaration protected VisualElement placeholder Field Value Type Description VisualElement | Improve this Doc View Source root Custom editor of the node inspector, you can inherit from this class to customize your node inspector. Declaration protected VisualElement root Field Value Type Description VisualElement | Improve this Doc View Source selectedNodeList Custom editor of the node inspector, you can inherit from this class to customize your node inspector. Declaration protected VisualElement selectedNodeList Field Value Type Description VisualElement Methods | Improve this Doc View Source CreateInspectorGUI() Implement this method to make a custom UIElements inspector. Declaration public override VisualElement CreateInspectorGUI() Returns Type Description VisualElement Overrides UnityEditor.Editor.CreateInspectorGUI() | Improve this Doc View Source CreateNodeBlock(BaseNodeView) Custom editor of the node inspector, you can inherit from this class to customize your node inspector. Declaration protected VisualElement CreateNodeBlock(BaseNodeView nodeView) Parameters Type Name Description BaseNodeView nodeView Returns Type Description VisualElement | Improve this Doc View Source OnDisable() Custom editor of the node inspector, you can inherit from this class to customize your node inspector. Declaration protected virtual void OnDisable() | Improve this Doc View Source OnEnable() Custom editor of the node inspector, you can inherit from this class to customize your node inspector. Declaration protected virtual void OnEnable() | Improve this Doc View Source UpdateNodeInspectorList() Custom editor of the node inspector, you can inherit from this class to customize your node inspector. Declaration protected virtual void UpdateNodeInspectorList()"
  },
  "api/GraphProcessor.NodeMenuItemAttribute.html": {
    "href": "api/GraphProcessor.NodeMenuItemAttribute.html",
    "title": "Class NodeMenuItemAttribute",
    "keywords": "Class NodeMenuItemAttribute Register the node in the NodeProvider class. The node will also be available in the node creation window. Inheritance object Attribute NodeMenuItemAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Class, AllowMultiple = true)] public class NodeMenuItemAttribute : Attribute Constructors | Improve this Doc View Source NodeMenuItemAttribute(string, Type) Register the node in the NodeProvider class. The node will also be available in the node creation window. Declaration public NodeMenuItemAttribute(string menuTitle = null, Type onlyCompatibleWithGraph = null) Parameters Type Name Description string menuTitle Path in the menu, use / as folder separators Type onlyCompatibleWithGraph Fields | Improve this Doc View Source menuTitle Register the node in the NodeProvider class. The node will also be available in the node creation window. Declaration public string menuTitle Field Value Type Description string | Improve this Doc View Source onlyCompatibleWithGraph Register the node in the NodeProvider class. The node will also be available in the node creation window. Declaration public Type onlyCompatibleWithGraph Field Value Type Description Type"
  },
  "api/GraphProcessor.NodeMessageType.html": {
    "href": "api/GraphProcessor.NodeMessageType.html",
    "title": "Enum NodeMessageType",
    "keywords": "Enum NodeMessageType Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public enum NodeMessageType Fields Name Description Error Info None Warning"
  },
  "api/GraphProcessor.NodeOutputPortContainer.html": {
    "href": "api/GraphProcessor.NodeOutputPortContainer.html",
    "title": "Class NodeOutputPortContainer",
    "keywords": "Class NodeOutputPortContainer Container of ports and the edges connected to these ports Inheritance object List<NodePort> NodePortContainer NodeOutputPortContainer Implements IList<NodePort> ICollection<NodePort> IReadOnlyList<NodePort> IReadOnlyCollection<NodePort> IEnumerable<NodePort> IList ICollection IEnumerable Inherited Members NodePortContainer.node NodePortContainer.Remove(SerializableEdge) NodePortContainer.Add(SerializableEdge) List<NodePort>.Add(NodePort) List<NodePort>.AddRange(IEnumerable<NodePort>) List<NodePort>.AsReadOnly() List<NodePort>.BinarySearch(int, int, NodePort, IComparer<NodePort>) List<NodePort>.BinarySearch(NodePort) List<NodePort>.BinarySearch(NodePort, IComparer<NodePort>) List<NodePort>.Clear() List<NodePort>.Contains(NodePort) List<NodePort>.ConvertAll<TOutput>(Converter<NodePort, TOutput>) List<NodePort>.CopyTo(int, NodePort[], int, int) List<NodePort>.CopyTo(NodePort[]) List<NodePort>.CopyTo(NodePort[], int) List<NodePort>.Exists(Predicate<NodePort>) List<NodePort>.Find(Predicate<NodePort>) List<NodePort>.FindAll(Predicate<NodePort>) List<NodePort>.FindIndex(int, int, Predicate<NodePort>) List<NodePort>.FindIndex(int, Predicate<NodePort>) List<NodePort>.FindIndex(Predicate<NodePort>) List<NodePort>.FindLast(Predicate<NodePort>) List<NodePort>.FindLastIndex(int, int, Predicate<NodePort>) List<NodePort>.FindLastIndex(int, Predicate<NodePort>) List<NodePort>.FindLastIndex(Predicate<NodePort>) List<NodePort>.ForEach(Action<NodePort>) List<NodePort>.GetEnumerator() List<NodePort>.GetRange(int, int) List<NodePort>.IndexOf(NodePort) List<NodePort>.IndexOf(NodePort, int) List<NodePort>.IndexOf(NodePort, int, int) List<NodePort>.Insert(int, NodePort) List<NodePort>.InsertRange(int, IEnumerable<NodePort>) List<NodePort>.LastIndexOf(NodePort) List<NodePort>.LastIndexOf(NodePort, int) List<NodePort>.LastIndexOf(NodePort, int, int) List<NodePort>.Remove(NodePort) List<NodePort>.RemoveAll(Predicate<NodePort>) List<NodePort>.RemoveAt(int) List<NodePort>.RemoveRange(int, int) List<NodePort>.Reverse() List<NodePort>.Reverse(int, int) List<NodePort>.Sort() List<NodePort>.Sort(IComparer<NodePort>) List<NodePort>.Sort(Comparison<NodePort>) List<NodePort>.Sort(int, int, IComparer<NodePort>) List<NodePort>.ToArray() List<NodePort>.TrimExcess() List<NodePort>.TrueForAll(Predicate<NodePort>) List<NodePort>.Capacity List<NodePort>.Count List<NodePort>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public class NodeOutputPortContainer : NodePortContainer, IList<NodePort>, ICollection<NodePort>, IReadOnlyList<NodePort>, IReadOnlyCollection<NodePort>, IEnumerable<NodePort>, IList, ICollection, IEnumerable Constructors | Improve this Doc View Source NodeOutputPortContainer(BaseNode) Container of ports and the edges connected to these ports Declaration public NodeOutputPortContainer(BaseNode node) Parameters Type Name Description BaseNode node Methods | Improve this Doc View Source PushDatas() Container of ports and the edges connected to these ports Declaration public void PushDatas() Implements IList<T> ICollection<T> IReadOnlyList<T> IReadOnlyCollection<T> IEnumerable<T> IList ICollection IEnumerable"
  },
  "api/GraphProcessor.NodePort.PushDataDelegate.html": {
    "href": "api/GraphProcessor.NodePort.PushDataDelegate.html",
    "title": "Delegate NodePort.PushDataDelegate",
    "keywords": "Delegate NodePort.PushDataDelegate Delegate that is made to send the data from this port to another port connected through an edge This is an optimization compared to dynamically setting values using Reflection (which is really slow) More info: https://codeblog.jonskeet.uk/2008/08/09/making-reflection-fly-and-exploring-delegates/ Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public delegate void NodePort.PushDataDelegate()"
  },
  "api/GraphProcessor.NodePort.html": {
    "href": "api/GraphProcessor.NodePort.html",
    "title": "Class NodePort",
    "keywords": "Class NodePort Runtime class that stores all info about one port that is needed for the processing Inheritance object NodePort Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public class NodePort Constructors | Improve this Doc View Source NodePort(BaseNode, object, string, PortData) Constructor Declaration public NodePort(BaseNode owner, object fieldOwner, string fieldName, PortData portData) Parameters Type Name Description BaseNode owner owner node object fieldOwner string fieldName the C# property name PortData portData Data of the port | Improve this Doc View Source NodePort(BaseNode, string, PortData) Constructor Declaration public NodePort(BaseNode owner, string fieldName, PortData portData) Parameters Type Name Description BaseNode owner owner node string fieldName the C# property name PortData portData Data of the port Fields | Improve this Doc View Source fieldInfo The fieldInfo from the fieldName Declaration public FieldInfo fieldInfo Field Value Type Description FieldInfo | Improve this Doc View Source fieldName The actual name of the property behind the port (must be exact, it is used for Reflection) Declaration public string fieldName Field Value Type Description string | Improve this Doc View Source fieldOwner Owner of the FieldInfo, to be used in case of Get/SetValue Declaration public object fieldOwner Field Value Type Description object | Improve this Doc View Source owner The node on which the port is Declaration public BaseNode owner Field Value Type Description BaseNode | Improve this Doc View Source portData Data of the port Declaration public PortData portData Field Value Type Description PortData Methods | Improve this Doc View Source Add(SerializableEdge) Connect an edge to this port Declaration public void Add(SerializableEdge edge) Parameters Type Name Description SerializableEdge edge | Improve this Doc View Source GetEdges() Get all the edges connected to this port Declaration public List<SerializableEdge> GetEdges() Returns Type Description List<SerializableEdge> | Improve this Doc View Source PullData() Pull values from the edge (in case of a custom convertion method) This method can only be called on input ports Declaration public void PullData() | Improve this Doc View Source PushData() Push the value of the port through the edges This method can only be called on output ports Declaration public void PushData() | Improve this Doc View Source Remove(SerializableEdge) Disconnect an Edge from this port Declaration public void Remove(SerializableEdge edge) Parameters Type Name Description SerializableEdge edge | Improve this Doc View Source ResetToDefault() Reset the value of the field to default if possible Declaration public void ResetToDefault()"
  },
  "api/GraphProcessor.NodePortContainer.html": {
    "href": "api/GraphProcessor.NodePortContainer.html",
    "title": "Class NodePortContainer",
    "keywords": "Class NodePortContainer Container of ports and the edges connected to these ports Inheritance object List<NodePort> NodePortContainer NodeInputPortContainer NodeOutputPortContainer Implements IList<NodePort> ICollection<NodePort> IReadOnlyList<NodePort> IReadOnlyCollection<NodePort> IEnumerable<NodePort> IList ICollection IEnumerable Inherited Members List<NodePort>.Add(NodePort) List<NodePort>.AddRange(IEnumerable<NodePort>) List<NodePort>.AsReadOnly() List<NodePort>.BinarySearch(int, int, NodePort, IComparer<NodePort>) List<NodePort>.BinarySearch(NodePort) List<NodePort>.BinarySearch(NodePort, IComparer<NodePort>) List<NodePort>.Clear() List<NodePort>.Contains(NodePort) List<NodePort>.ConvertAll<TOutput>(Converter<NodePort, TOutput>) List<NodePort>.CopyTo(int, NodePort[], int, int) List<NodePort>.CopyTo(NodePort[]) List<NodePort>.CopyTo(NodePort[], int) List<NodePort>.Exists(Predicate<NodePort>) List<NodePort>.Find(Predicate<NodePort>) List<NodePort>.FindAll(Predicate<NodePort>) List<NodePort>.FindIndex(int, int, Predicate<NodePort>) List<NodePort>.FindIndex(int, Predicate<NodePort>) List<NodePort>.FindIndex(Predicate<NodePort>) List<NodePort>.FindLast(Predicate<NodePort>) List<NodePort>.FindLastIndex(int, int, Predicate<NodePort>) List<NodePort>.FindLastIndex(int, Predicate<NodePort>) List<NodePort>.FindLastIndex(Predicate<NodePort>) List<NodePort>.ForEach(Action<NodePort>) List<NodePort>.GetEnumerator() List<NodePort>.GetRange(int, int) List<NodePort>.IndexOf(NodePort) List<NodePort>.IndexOf(NodePort, int) List<NodePort>.IndexOf(NodePort, int, int) List<NodePort>.Insert(int, NodePort) List<NodePort>.InsertRange(int, IEnumerable<NodePort>) List<NodePort>.LastIndexOf(NodePort) List<NodePort>.LastIndexOf(NodePort, int) List<NodePort>.LastIndexOf(NodePort, int, int) List<NodePort>.Remove(NodePort) List<NodePort>.RemoveAll(Predicate<NodePort>) List<NodePort>.RemoveAt(int) List<NodePort>.RemoveRange(int, int) List<NodePort>.Reverse() List<NodePort>.Reverse(int, int) List<NodePort>.Sort() List<NodePort>.Sort(IComparer<NodePort>) List<NodePort>.Sort(Comparison<NodePort>) List<NodePort>.Sort(int, int, IComparer<NodePort>) List<NodePort>.ToArray() List<NodePort>.TrimExcess() List<NodePort>.TrueForAll(Predicate<NodePort>) List<NodePort>.Capacity List<NodePort>.Count List<NodePort>.this[int] object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public abstract class NodePortContainer : List<NodePort>, IList<NodePort>, ICollection<NodePort>, IReadOnlyList<NodePort>, IReadOnlyCollection<NodePort>, IEnumerable<NodePort>, IList, ICollection, IEnumerable Constructors | Improve this Doc View Source NodePortContainer(BaseNode) Container of ports and the edges connected to these ports Declaration public NodePortContainer(BaseNode node) Parameters Type Name Description BaseNode node Fields | Improve this Doc View Source node Container of ports and the edges connected to these ports Declaration protected BaseNode node Field Value Type Description BaseNode Methods | Improve this Doc View Source Add(SerializableEdge) Add an edge that is connected to one of the node in the container Declaration public void Add(SerializableEdge edge) Parameters Type Name Description SerializableEdge edge | Improve this Doc View Source Remove(SerializableEdge) Remove an edge that is connected to one of the node in the container Declaration public void Remove(SerializableEdge edge) Parameters Type Name Description SerializableEdge edge Implements IList<T> ICollection<T> IReadOnlyList<T> IReadOnlyCollection<T> IEnumerable<T> IList ICollection IEnumerable"
  },
  "api/GraphProcessor.NodeProvider.NodeDescriptions.html": {
    "href": "api/GraphProcessor.NodeProvider.NodeDescriptions.html",
    "title": "Class NodeProvider.NodeDescriptions",
    "keywords": "Class NodeProvider.NodeDescriptions Inheritance object NodeProvider.NodeDescriptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class NodeProvider.NodeDescriptions Fields | Improve this Doc View Source nodeCreatePortDescription Declaration public List<NodeProvider.PortDescription> nodeCreatePortDescription Field Value Type Description List<NodeProvider.PortDescription> | Improve this Doc View Source nodePerMenuTitle Declaration public Dictionary<string, Type> nodePerMenuTitle Field Value Type Description Dictionary<string, Type> | Improve this Doc View Source slotTypes Declaration public List<Type> slotTypes Field Value Type Description List<Type>"
  },
  "api/GraphProcessor.NodeProvider.NodeSpecificToGraph.html": {
    "href": "api/GraphProcessor.NodeProvider.NodeSpecificToGraph.html",
    "title": "Struct NodeProvider.NodeSpecificToGraph",
    "keywords": "Struct NodeProvider.NodeSpecificToGraph Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public struct NodeProvider.NodeSpecificToGraph Fields | Improve this Doc View Source compatibleWithGraphType Declaration public Type compatibleWithGraphType Field Value Type Description Type | Improve this Doc View Source isCompatibleWithGraph Declaration public List<MethodInfo> isCompatibleWithGraph Field Value Type Description List<MethodInfo> | Improve this Doc View Source nodeType Declaration public Type nodeType Field Value Type Description Type"
  },
  "api/GraphProcessor.NodeProvider.PortDescription.html": {
    "href": "api/GraphProcessor.NodeProvider.PortDescription.html",
    "title": "Struct NodeProvider.PortDescription",
    "keywords": "Struct NodeProvider.PortDescription Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public struct NodeProvider.PortDescription Fields | Improve this Doc View Source isInput Declaration public bool isInput Field Value Type Description bool | Improve this Doc View Source nodeType Declaration public Type nodeType Field Value Type Description Type | Improve this Doc View Source portDisplayName Declaration public string portDisplayName Field Value Type Description string | Improve this Doc View Source portFieldName Declaration public string portFieldName Field Value Type Description string | Improve this Doc View Source portIdentifier Declaration public string portIdentifier Field Value Type Description string | Improve this Doc View Source portType Declaration public Type portType Field Value Type Description Type"
  },
  "api/GraphProcessor.NodeProvider.html": {
    "href": "api/GraphProcessor.NodeProvider.html",
    "title": "Class NodeProvider",
    "keywords": "Class NodeProvider Inheritance object NodeProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public static class NodeProvider Methods | Improve this Doc View Source GetEdgeCreationNodeMenuEntry(PortView, BaseGraph) Declaration public static IEnumerable<NodeProvider.PortDescription> GetEdgeCreationNodeMenuEntry(PortView portView, BaseGraph graph = null) Parameters Type Name Description PortView portView BaseGraph graph Returns Type Description IEnumerable<NodeProvider.PortDescription> | Improve this Doc View Source GetNodeMenuEntries(BaseGraph) Declaration public static IEnumerable<(string path, Type type)> GetNodeMenuEntries(BaseGraph graph = null) Parameters Type Name Description BaseGraph graph Returns Type Description IEnumerable<(string path, Type type)> | Improve this Doc View Source GetNodeScript(Type) Declaration public static MonoScript GetNodeScript(Type type) Parameters Type Name Description Type type Returns Type Description MonoScript | Improve this Doc View Source GetNodeViewScript(Type) Declaration public static MonoScript GetNodeViewScript(Type type) Parameters Type Name Description Type type Returns Type Description MonoScript | Improve this Doc View Source GetNodeViewTypeFromType(Type) Declaration public static Type GetNodeViewTypeFromType(Type nodeType) Parameters Type Name Description Type nodeType Returns Type Description Type | Improve this Doc View Source GetSlotTypes(BaseGraph) Declaration public static IEnumerable<Type> GetSlotTypes(BaseGraph graph = null) Parameters Type Name Description BaseGraph graph Returns Type Description IEnumerable<Type> | Improve this Doc View Source LoadGraph(BaseGraph) Declaration public static void LoadGraph(BaseGraph graph) Parameters Type Name Description BaseGraph graph | Improve this Doc View Source UnloadGraph(BaseGraph) Declaration public static void UnloadGraph(BaseGraph graph) Parameters Type Name Description BaseGraph graph"
  },
  "api/GraphProcessor.OutputAttribute.html": {
    "href": "api/GraphProcessor.OutputAttribute.html",
    "title": "Class OutputAttribute",
    "keywords": "Class OutputAttribute Tell that this field is will generate an output port Inheritance object Attribute OutputAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class OutputAttribute : Attribute Constructors | Improve this Doc View Source OutputAttribute(string, bool) Mark the field as an output port Declaration public OutputAttribute(string name = null, bool allowMultiple = true) Parameters Type Name Description string name display name bool allowMultiple is connecting multiple edges allowed Fields | Improve this Doc View Source allowMultiple Tell that this field is will generate an output port Declaration public bool allowMultiple Field Value Type Description bool | Improve this Doc View Source name Tell that this field is will generate an output port Declaration public string name Field Value Type Description string"
  },
  "api/GraphProcessor.ParameterAccessor.html": {
    "href": "api/GraphProcessor.ParameterAccessor.html",
    "title": "Enum ParameterAccessor",
    "keywords": "Enum ParameterAccessor Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public enum ParameterAccessor Fields Name Description Get Set"
  },
  "api/GraphProcessor.ParameterNode.html": {
    "href": "api/GraphProcessor.ParameterNode.html",
    "title": "Class ParameterNode",
    "keywords": "Class ParameterNode Inheritance object BaseNode ParameterNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class ParameterNode : BaseNode Fields | Improve this Doc View Source accessor Declaration public ParameterAccessor accessor Field Value Type Description ParameterAccessor | Improve this Doc View Source input Declaration [Input(null, false)] public object input Field Value Type Description object | Improve this Doc View Source output Declaration [Output(null, true)] public object output Field Value Type Description object | Improve this Doc View Source parameterGUID Declaration [SerializeField] [HideInInspector] public string parameterGUID Field Value Type Description string Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name | Improve this Doc View Source parameter Declaration public ExposedParameter parameter { get; } Property Value Type Description ExposedParameter Methods | Improve this Doc View Source Enable() Called when the node is enabled Declaration protected override void Enable() Overrides BaseNode.Enable() | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process() Events | Improve this Doc View Source onParameterChanged Declaration public event Action onParameterChanged Event Type Type Description Action"
  },
  "api/GraphProcessor.PinnedElement.html": {
    "href": "api/GraphProcessor.PinnedElement.html",
    "title": "Class PinnedElement",
    "keywords": "Class PinnedElement Element that overlays the graph like the blackboard Inheritance object PinnedElement Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class PinnedElement Constructors | Improve this Doc View Source PinnedElement(Type) Element that overlays the graph like the blackboard Declaration public PinnedElement(Type editorType) Parameters Type Name Description Type editorType Fields | Improve this Doc View Source defaultSize Element that overlays the graph like the blackboard Declaration public static readonly Vector2 defaultSize Field Value Type Description Vector2 | Improve this Doc View Source editorType Element that overlays the graph like the blackboard Declaration public SerializableType editorType Field Value Type Description SerializableType | Improve this Doc View Source opened Element that overlays the graph like the blackboard Declaration public bool opened Field Value Type Description bool | Improve this Doc View Source position Element that overlays the graph like the blackboard Declaration public Rect position Field Value Type Description Rect"
  },
  "api/GraphProcessor.PinnedElementView.html": {
    "href": "api/GraphProcessor.PinnedElementView.html",
    "title": "Class PinnedElementView",
    "keywords": "Class PinnedElementView Inheritance object CallbackEventHandler Focusable VisualElement GraphElement PinnedElementView ExposedParameterView ProcessorView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelectable Inherited Members GraphElement.ResetLayer() GraphElement.OnCustomStyleResolved(ICustomStyle) GraphElement.IsSelectable() GraphElement.IsMovable() GraphElement.IsResizable() GraphElement.IsDroppable() GraphElement.IsAscendable() GraphElement.IsRenamable() GraphElement.IsCopiable() GraphElement.IsSnappable() GraphElement.IsGroupable() GraphElement.IsStackable() GraphElement.GetGlobalCenter() GraphElement.UpdatePresenterPosition() GraphElement.GetPosition() GraphElement.SetPosition(Rect) GraphElement.OnSelected() GraphElement.OnUnselected() GraphElement.HitTest(Vector2) GraphElement.Select(VisualElement, bool) GraphElement.Unselect(VisualElement) GraphElement.IsSelected(VisualElement) GraphElement.elementTypeColor GraphElement.layer GraphElement.showInMiniMap GraphElement.capabilities GraphElement.selected VisualElement.disabledUssClassName VisualElement.ExecuteDefaultAction(EventBase) VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public abstract class PinnedElementView : GraphElement, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelectable Constructors | Improve this Doc View Source PinnedElementView() Declaration public PinnedElementView() Fields | Improve this Doc View Source content Declaration protected VisualElement content Field Value Type Description VisualElement | Improve this Doc View Source header Declaration protected VisualElement header Field Value Type Description VisualElement | Improve this Doc View Source pinnedElement Declaration protected PinnedElement pinnedElement Field Value Type Description PinnedElement | Improve this Doc View Source root Declaration protected VisualElement root Field Value Type Description VisualElement Properties | Improve this Doc View Source scrollable Declaration protected bool scrollable { get; set; } Property Value Type Description bool | Improve this Doc View Source title The GraphElement's title. Declaration public override string title { get; set; } Property Value Type Description string Overrides UnityEditor.Experimental.GraphView.GraphElement.title Methods | Improve this Doc View Source Destroy() Declaration protected virtual void Destroy() | Improve this Doc View Source ~PinnedElementView() Declaration protected ~PinnedElementView() | Improve this Doc View Source Initialize(BaseGraphView) Declaration protected abstract void Initialize(BaseGraphView graphView) Parameters Type Name Description BaseGraphView graphView | Improve this Doc View Source InitializeGraphView(PinnedElement, BaseGraphView) Declaration public void InitializeGraphView(PinnedElement pinnedElement, BaseGraphView graphView) Parameters Type Name Description PinnedElement pinnedElement BaseGraphView graphView | Improve this Doc View Source ResetPosition() Declaration public void ResetPosition() Events | Improve this Doc View Source onResized Declaration protected event Action onResized Event Type Type Description Action Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelectable"
  },
  "api/GraphProcessor.PortData.html": {
    "href": "api/GraphProcessor.PortData.html",
    "title": "Class PortData",
    "keywords": "Class PortData Class that describe port attributes for it's creation Inheritance object PortData Implements IEquatable<PortData> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public class PortData : IEquatable<PortData> Fields | Improve this Doc View Source acceptMultipleEdges If the port accept multiple connection Declaration public bool acceptMultipleEdges Field Value Type Description bool | Improve this Doc View Source displayName Display name on the node Declaration public string displayName Field Value Type Description string | Improve this Doc View Source displayType The type that will be used for coloring with the type stylesheet Declaration public Type displayType Field Value Type Description Type | Improve this Doc View Source identifier Unique identifier for the port Declaration public string identifier Field Value Type Description string | Improve this Doc View Source sizeInPixel Port size, will also affect the size of the connected edge Declaration public int sizeInPixel Field Value Type Description int | Improve this Doc View Source tooltip Tooltip of the port Declaration public string tooltip Field Value Type Description string | Improve this Doc View Source vertical Is the port vertical Declaration public bool vertical Field Value Type Description bool Methods | Improve this Doc View Source CopyFrom(PortData) Class that describe port attributes for it's creation Declaration public void CopyFrom(PortData other) Parameters Type Name Description PortData other | Improve this Doc View Source Equals(PortData) Class that describe port attributes for it's creation Declaration public bool Equals(PortData other) Parameters Type Name Description PortData other Returns Type Description bool Implements IEquatable<T>"
  },
  "api/GraphProcessor.PortView.html": {
    "href": "api/GraphProcessor.PortView.html",
    "title": "Class PortView",
    "keywords": "Class PortView Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Port PortView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelectable Inherited Members Port.m_EdgeConnector Port.m_ConnectorBox Port.m_ConnectorText Port.m_ConnectorBoxCap Port.m_GraphView Port.OnStartEdgeDragging() Port.OnStopEdgeDragging() Port.ConnectTo(Port) Port.ConnectTo<T>(Port) Port.DisconnectAll() Port.Create<TEdge>(Orientation, Direction, Port.Capacity, Type) Port.GetGlobalCenter() Port.ContainsPoint(Vector2) Port.ExecuteDefaultAction(EventBase) Port.OnCustomStyleResolved(ICustomStyle) Port.showInMiniMap Port.allowMultiDrag Port.portName Port.portCapLit Port.direction Port.orientation Port.capacity Port.visualClass Port.edgeConnector Port.source Port.highlight Port.connections Port.connected Port.collapsed Port.portColor Port.disabledPortColor Port.node GraphElement.ResetLayer() GraphElement.IsSelectable() GraphElement.IsMovable() GraphElement.IsResizable() GraphElement.IsDroppable() GraphElement.IsAscendable() GraphElement.IsRenamable() GraphElement.IsCopiable() GraphElement.IsSnappable() GraphElement.IsGroupable() GraphElement.IsStackable() GraphElement.UpdatePresenterPosition() GraphElement.GetPosition() GraphElement.SetPosition(Rect) GraphElement.OnSelected() GraphElement.OnUnselected() GraphElement.HitTest(Vector2) GraphElement.Select(VisualElement, bool) GraphElement.Unselect(VisualElement) GraphElement.IsSelected(VisualElement) GraphElement.elementTypeColor GraphElement.layer GraphElement.title GraphElement.capabilities GraphElement.selected VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class PortView : Port, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelectable Constructors | Improve this Doc View Source PortView(Direction, FieldInfo, PortData, BaseEdgeConnectorListener) Declaration protected PortView(Direction direction, FieldInfo fieldInfo, PortData portData, BaseEdgeConnectorListener edgeConnectorListener) Parameters Type Name Description Direction direction FieldInfo fieldInfo PortData portData BaseEdgeConnectorListener edgeConnectorListener Fields | Improve this Doc View Source fieldInfo Declaration protected FieldInfo fieldInfo Field Value Type Description FieldInfo | Improve this Doc View Source listener Declaration protected BaseEdgeConnectorListener listener Field Value Type Description BaseEdgeConnectorListener | Improve this Doc View Source portData Declaration public PortData portData Field Value Type Description PortData | Improve this Doc View Source portType Declaration public Type portType Field Value Type Description Type Properties | Improve this Doc View Source connectionCount Declaration public int connectionCount { get; } Property Value Type Description int | Improve this Doc View Source fieldName Declaration public string fieldName { get; } Property Value Type Description string | Improve this Doc View Source fieldType Declaration public Type fieldType { get; } Property Value Type Description Type | Improve this Doc View Source owner Declaration public BaseNodeView owner { get; } Property Value Type Description BaseNodeView Methods | Improve this Doc View Source Connect(Edge) Connect and edge to the port. Declaration public override void Connect(Edge edge) Parameters Type Name Description Edge edge The edge. Overrides UnityEditor.Experimental.GraphView.Port.Connect(UnityEditor.Experimental.GraphView.Edge) | Improve this Doc View Source CreatePortView(Direction, FieldInfo, PortData, BaseEdgeConnectorListener) Declaration public static PortView CreatePortView(Direction direction, FieldInfo fieldInfo, PortData portData, BaseEdgeConnectorListener edgeConnectorListener) Parameters Type Name Description Direction direction FieldInfo fieldInfo PortData portData BaseEdgeConnectorListener edgeConnectorListener Returns Type Description PortView | Improve this Doc View Source Disconnect(Edge) Disconnect edge from port. Declaration public override void Disconnect(Edge edge) Parameters Type Name Description Edge edge The edge to disconnect. Overrides UnityEditor.Experimental.GraphView.Port.Disconnect(UnityEditor.Experimental.GraphView.Edge) | Improve this Doc View Source GetEdges() Declaration public List<EdgeView> GetEdges() Returns Type Description List<EdgeView> | Improve this Doc View Source Initialize(BaseNodeView, string) Declaration public virtual void Initialize(BaseNodeView nodeView, string name) Parameters Type Name Description BaseNodeView nodeView string name | Improve this Doc View Source UpdatePortSize() Update the size of the port view (using the portData.sizeInPixel property) Declaration public void UpdatePortSize() | Improve this Doc View Source UpdatePortView(PortData) Declaration public void UpdatePortView(PortData data) Parameters Type Name Description PortData data Events | Improve this Doc View Source OnConnected Declaration public event Action<PortView, Edge> OnConnected Event Type Type Description Action<PortView, Edge> | Improve this Doc View Source OnDisconnected Declaration public event Action<PortView, Edge> OnDisconnected Event Type Type Description Action<PortView, Edge> Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelectable"
  },
  "api/GraphProcessor.ProcessGraphProcessor.html": {
    "href": "api/GraphProcessor.ProcessGraphProcessor.html",
    "title": "Class ProcessGraphProcessor",
    "keywords": "Class ProcessGraphProcessor Graph processor Inheritance object BaseGraphProcessor ProcessGraphProcessor Inherited Members BaseGraphProcessor.graph object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public class ProcessGraphProcessor : BaseGraphProcessor Constructors | Improve this Doc View Source ProcessGraphProcessor(BaseGraph) Manage graph scheduling and processing Declaration public ProcessGraphProcessor(BaseGraph graph) Parameters Type Name Description BaseGraph graph Graph to be processed Methods | Improve this Doc View Source Run() Process all the nodes following the compute order. Declaration public override void Run() Overrides BaseGraphProcessor.Run() | Improve this Doc View Source UpdateComputeOrder() Graph processor Declaration public override void UpdateComputeOrder() Overrides BaseGraphProcessor.UpdateComputeOrder()"
  },
  "api/GraphProcessor.ProcessorView.html": {
    "href": "api/GraphProcessor.ProcessorView.html",
    "title": "Class ProcessorView",
    "keywords": "Class ProcessorView Inheritance object CallbackEventHandler Focusable VisualElement GraphElement PinnedElementView ProcessorView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelectable Inherited Members PinnedElementView.pinnedElement PinnedElementView.root PinnedElementView.content PinnedElementView.header PinnedElementView.onResized PinnedElementView.title PinnedElementView.scrollable PinnedElementView.InitializeGraphView(PinnedElement, BaseGraphView) PinnedElementView.ResetPosition() PinnedElementView.Destroy() GraphElement.ResetLayer() GraphElement.OnCustomStyleResolved(ICustomStyle) GraphElement.IsSelectable() GraphElement.IsMovable() GraphElement.IsResizable() GraphElement.IsDroppable() GraphElement.IsAscendable() GraphElement.IsRenamable() GraphElement.IsCopiable() GraphElement.IsSnappable() GraphElement.IsGroupable() GraphElement.IsStackable() GraphElement.GetGlobalCenter() GraphElement.UpdatePresenterPosition() GraphElement.GetPosition() GraphElement.SetPosition(Rect) GraphElement.OnSelected() GraphElement.OnUnselected() GraphElement.HitTest(Vector2) GraphElement.Select(VisualElement, bool) GraphElement.Unselect(VisualElement) GraphElement.IsSelected(VisualElement) GraphElement.elementTypeColor GraphElement.layer GraphElement.showInMiniMap GraphElement.capabilities GraphElement.selected VisualElement.disabledUssClassName VisualElement.ExecuteDefaultAction(EventBase) VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class ProcessorView : PinnedElementView, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelectable Constructors | Improve this Doc View Source ProcessorView() Declaration public ProcessorView() Methods | Improve this Doc View Source Initialize(BaseGraphView) Declaration protected override void Initialize(BaseGraphView graphView) Parameters Type Name Description BaseGraphView graphView Overrides PinnedElementView.Initialize(BaseGraphView) Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelectable"
  },
  "api/GraphProcessor.RectIntParameter.html": {
    "href": "api/GraphProcessor.RectIntParameter.html",
    "title": "Class RectIntParameter",
    "keywords": "Class RectIntParameter Inheritance object ExposedParameter RectIntParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class RectIntParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.RectParameter.html": {
    "href": "api/GraphProcessor.RectParameter.html",
    "title": "Class RectParameter",
    "keywords": "Class RectParameter Inheritance object ExposedParameter RectParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class RectParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.RenderTextureParameter.html": {
    "href": "api/GraphProcessor.RenderTextureParameter.html",
    "title": "Class RenderTextureParameter",
    "keywords": "Class RenderTextureParameter Inheritance object ExposedParameter RenderTextureParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class RenderTextureParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Methods | Improve this Doc View Source GetValueType() Declaration public override Type GetValueType() Returns Type Description Type Overrides ExposedParameter.GetValueType() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.SerializableEdge.html": {
    "href": "api/GraphProcessor.SerializableEdge.html",
    "title": "Class SerializableEdge",
    "keywords": "Class SerializableEdge Inheritance object SerializableEdge Implements ISerializationCallbackReceiver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class SerializableEdge : ISerializationCallbackReceiver Constructors | Improve this Doc View Source SerializableEdge() Declaration public SerializableEdge() Fields | Improve this Doc View Source GUID Declaration public string GUID Field Value Type Description string | Improve this Doc View Source inputFieldName Declaration public string inputFieldName Field Value Type Description string | Improve this Doc View Source inputNode Declaration [NonSerialized] public BaseNode inputNode Field Value Type Description BaseNode | Improve this Doc View Source inputPort Declaration [NonSerialized] public NodePort inputPort Field Value Type Description NodePort | Improve this Doc View Source inputPortIdentifier Declaration public string inputPortIdentifier Field Value Type Description string | Improve this Doc View Source outputFieldName Declaration public string outputFieldName Field Value Type Description string | Improve this Doc View Source outputNode Declaration [NonSerialized] public BaseNode outputNode Field Value Type Description BaseNode | Improve this Doc View Source outputPort Declaration [NonSerialized] public NodePort outputPort Field Value Type Description NodePort | Improve this Doc View Source outputPortIdentifier Declaration public string outputPortIdentifier Field Value Type Description string | Improve this Doc View Source passThroughBuffer Declaration [NonSerialized] public object passThroughBuffer Field Value Type Description object Methods | Improve this Doc View Source CreateNewEdge(BaseGraph, NodePort, NodePort) Declaration public static SerializableEdge CreateNewEdge(BaseGraph graph, NodePort inputPort, NodePort outputPort) Parameters Type Name Description BaseGraph graph NodePort inputPort NodePort outputPort Returns Type Description SerializableEdge | Improve this Doc View Source Deserialize() Declaration public void Deserialize() | Improve this Doc View Source OnAfterDeserialize() Implement this method to receive a callback after Unity deserializes your object. Declaration public void OnAfterDeserialize() | Improve this Doc View Source OnBeforeSerialize() Implement this method to receive a callback before Unity serializes your object. Declaration public void OnBeforeSerialize() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description string Overrides object.ToString() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.SerializableObject.html": {
    "href": "api/GraphProcessor.SerializableObject.html",
    "title": "Class SerializableObject",
    "keywords": "Class SerializableObject Inheritance object SerializableObject Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class SerializableObject Constructors | Improve this Doc View Source SerializableObject(object, Type, string) Declaration public SerializableObject(object value, Type type, string name = null) Parameters Type Name Description object value Type type string name Fields | Improve this Doc View Source serializedName Declaration public string serializedName Field Value Type Description string | Improve this Doc View Source serializedType Declaration public string serializedType Field Value Type Description string | Improve this Doc View Source serializedValue Declaration public string serializedValue Field Value Type Description string | Improve this Doc View Source value Declaration public object value Field Value Type Description object Methods | Improve this Doc View Source Deserialize() Declaration public void Deserialize() | Improve this Doc View Source Serialize() Declaration public void Serialize()"
  },
  "api/GraphProcessor.SerializableType.html": {
    "href": "api/GraphProcessor.SerializableType.html",
    "title": "Class SerializableType",
    "keywords": "Class SerializableType Inheritance object SerializableType Implements ISerializationCallbackReceiver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class SerializableType : ISerializationCallbackReceiver Constructors | Improve this Doc View Source SerializableType(Type) Declaration public SerializableType(Type t) Parameters Type Name Description Type t Fields | Improve this Doc View Source serializedType Declaration [SerializeField] public string serializedType Field Value Type Description string | Improve this Doc View Source type Declaration [NonSerialized] public Type type Field Value Type Description Type Methods | Improve this Doc View Source OnAfterDeserialize() Implement this method to receive a callback after Unity deserializes your object. Declaration public void OnAfterDeserialize() | Improve this Doc View Source OnBeforeSerialize() Implement this method to receive a callback before Unity serializes your object. Declaration public void OnBeforeSerialize() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.SettingAttribute.html": {
    "href": "api/GraphProcessor.SettingAttribute.html",
    "title": "Class SettingAttribute",
    "keywords": "Class SettingAttribute Inheritance object Attribute SettingAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Field)] public class SettingAttribute : Attribute Constructors | Improve this Doc View Source SettingAttribute(string) Declaration public SettingAttribute(string name = null) Parameters Type Name Description string name Fields | Improve this Doc View Source name Declaration public string name Field Value Type Description string"
  },
  "api/GraphProcessor.ShowAsDrawer.html": {
    "href": "api/GraphProcessor.ShowAsDrawer.html",
    "title": "Class ShowAsDrawer",
    "keywords": "Class ShowAsDrawer Inheritance object Attribute ShowAsDrawer Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class ShowAsDrawer : Attribute"
  },
  "api/GraphProcessor.ShowInInspector.html": {
    "href": "api/GraphProcessor.ShowInInspector.html",
    "title": "Class ShowInInspector",
    "keywords": "Class ShowInInspector Inheritance object Attribute ShowInInspector Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class ShowInInspector : Attribute Constructors | Improve this Doc View Source ShowInInspector(bool) Declaration public ShowInInspector(bool showInNode = false) Parameters Type Name Description bool showInNode Fields | Improve this Doc View Source showInNode Declaration public bool showInNode Field Value Type Description bool"
  },
  "api/GraphProcessor.StackNodeViewProvider.html": {
    "href": "api/GraphProcessor.StackNodeViewProvider.html",
    "title": "Class StackNodeViewProvider",
    "keywords": "Class StackNodeViewProvider Inheritance object StackNodeViewProvider Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public static class StackNodeViewProvider Methods | Improve this Doc View Source GetStackNodeCustomViewType(Type) Declaration public static Type GetStackNodeCustomViewType(Type stackNodeType) Parameters Type Name Description Type stackNodeType Returns Type Description Type"
  },
  "api/GraphProcessor.StickyNote.html": {
    "href": "api/GraphProcessor.StickyNote.html",
    "title": "Class StickyNote",
    "keywords": "Class StickyNote Serializable Sticky node class Inheritance object StickyNote Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class StickyNote Constructors | Improve this Doc View Source StickyNote(string, Vector2) Serializable Sticky node class Declaration public StickyNote(string title, Vector2 position) Parameters Type Name Description string title Vector2 position Fields | Improve this Doc View Source content Serializable Sticky node class Declaration public string content Field Value Type Description string | Improve this Doc View Source position Serializable Sticky node class Declaration public Rect position Field Value Type Description Rect | Improve this Doc View Source title Serializable Sticky node class Declaration public string title Field Value Type Description string"
  },
  "api/GraphProcessor.StringParameter.html": {
    "href": "api/GraphProcessor.StringParameter.html",
    "title": "Class StringParameter",
    "keywords": "Class StringParameter Inheritance object ExposedParameter StringParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class StringParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Methods | Improve this Doc View Source GetValueType() Declaration public override Type GetValueType() Returns Type Description Type Overrides ExposedParameter.GetValueType() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.Texture2DParameter.html": {
    "href": "api/GraphProcessor.Texture2DParameter.html",
    "title": "Class Texture2DParameter",
    "keywords": "Class Texture2DParameter Inheritance object ExposedParameter Texture2DParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class Texture2DParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Methods | Improve this Doc View Source GetValueType() Declaration public override Type GetValueType() Returns Type Description Type Overrides ExposedParameter.GetValueType() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.ToolbarView.ElementType.html": {
    "href": "api/GraphProcessor.ToolbarView.ElementType.html",
    "title": "Enum ToolbarView.ElementType",
    "keywords": "Enum ToolbarView.ElementType Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax protected enum ToolbarView.ElementType Fields Name Description Button Custom DropDownButton FlexibleSpace Separator Toggle"
  },
  "api/GraphProcessor.ToolbarView.ToolbarButtonData.html": {
    "href": "api/GraphProcessor.ToolbarView.ToolbarButtonData.html",
    "title": "Class ToolbarView.ToolbarButtonData",
    "keywords": "Class ToolbarView.ToolbarButtonData Inheritance object ToolbarView.ToolbarButtonData Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax protected class ToolbarView.ToolbarButtonData Fields | Improve this Doc View Source buttonCallback Declaration public Action buttonCallback Field Value Type Description Action | Improve this Doc View Source content Declaration public GUIContent content Field Value Type Description GUIContent | Improve this Doc View Source customDrawFunction Declaration public Action customDrawFunction Field Value Type Description Action | Improve this Doc View Source size Declaration public int size Field Value Type Description int | Improve this Doc View Source toggleCallback Declaration public Action<bool> toggleCallback Field Value Type Description Action<bool> | Improve this Doc View Source type Declaration public ToolbarView.ElementType type Field Value Type Description ToolbarView.ElementType | Improve this Doc View Source value Declaration public bool value Field Value Type Description bool | Improve this Doc View Source visible Declaration public bool visible Field Value Type Description bool"
  },
  "api/GraphProcessor.ToolbarView.html": {
    "href": "api/GraphProcessor.ToolbarView.html",
    "title": "Class ToolbarView",
    "keywords": "Class ToolbarView Inheritance object CallbackEventHandler Focusable VisualElement ToolbarView ImpostorToolbarView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Inherited Members VisualElement.disabledUssClassName VisualElement.ExecuteDefaultAction(EventBase) VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax public class ToolbarView : VisualElement, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors | Improve this Doc View Source ToolbarView(BaseGraphView) Declaration public ToolbarView(BaseGraphView graphView) Parameters Type Name Description BaseGraphView graphView Fields | Improve this Doc View Source graphView Declaration protected BaseGraphView graphView Field Value Type Description BaseGraphView Methods | Improve this Doc View Source AddButton(string, Action, bool) Declaration protected ToolbarView.ToolbarButtonData AddButton(string name, Action callback, bool left = true) Parameters Type Name Description string name Action callback bool left Returns Type Description ToolbarView.ToolbarButtonData | Improve this Doc View Source AddButton(GUIContent, Action, bool) Declaration protected ToolbarView.ToolbarButtonData AddButton(GUIContent content, Action callback, bool left = true) Parameters Type Name Description GUIContent content Action callback bool left Returns Type Description ToolbarView.ToolbarButtonData | Improve this Doc View Source AddButtons() Declaration protected virtual void AddButtons() | Improve this Doc View Source AddCustom(Action, bool) Declaration protected void AddCustom(Action imguiDrawFunction, bool left = true) Parameters Type Name Description Action imguiDrawFunction bool left | Improve this Doc View Source AddDropDownButton(string, Action, bool) Declaration protected ToolbarView.ToolbarButtonData AddDropDownButton(string name, Action callback, bool left = true) Parameters Type Name Description string name Action callback bool left Returns Type Description ToolbarView.ToolbarButtonData | Improve this Doc View Source AddDropDownButton(GUIContent, Action, bool) Declaration protected ToolbarView.ToolbarButtonData AddDropDownButton(GUIContent content, Action callback, bool left = true) Parameters Type Name Description GUIContent content Action callback bool left Returns Type Description ToolbarView.ToolbarButtonData | Improve this Doc View Source AddFlexibleSpace(bool) Declaration protected void AddFlexibleSpace(bool left = true) Parameters Type Name Description bool left | Improve this Doc View Source AddSeparator(int, bool) Declaration protected void AddSeparator(int sizeInPixels = 10, bool left = true) Parameters Type Name Description int sizeInPixels bool left | Improve this Doc View Source AddToggle(string, bool, Action<bool>, bool) Declaration protected ToolbarView.ToolbarButtonData AddToggle(string name, bool defaultValue, Action<bool> callback, bool left = true) Parameters Type Name Description string name bool defaultValue Action<bool> callback bool left Returns Type Description ToolbarView.ToolbarButtonData | Improve this Doc View Source AddToggle(GUIContent, bool, Action<bool>, bool) Declaration protected ToolbarView.ToolbarButtonData AddToggle(GUIContent content, bool defaultValue, Action<bool> callback, bool left = true) Parameters Type Name Description GUIContent content bool defaultValue Action<bool> callback bool left Returns Type Description ToolbarView.ToolbarButtonData | Improve this Doc View Source DrawImGUIToolbar() Declaration protected virtual void DrawImGUIToolbar() | Improve this Doc View Source HideButton(string) Hide the button Declaration protected void HideButton(string name) Parameters Type Name Description string name Display name of the button | Improve this Doc View Source RemoveButton(string, bool) Also works for toggles Declaration protected void RemoveButton(string name, bool left) Parameters Type Name Description string name bool left | Improve this Doc View Source ShowButton(string) Show the button Declaration protected void ShowButton(string name) Parameters Type Name Description string name Display name of the button | Improve this Doc View Source UpdateButtonStatus() Declaration public virtual void UpdateButtonStatus() Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler"
  },
  "api/GraphProcessor.TypeAdapter.html": {
    "href": "api/GraphProcessor.TypeAdapter.html",
    "title": "Class TypeAdapter",
    "keywords": "Class TypeAdapter Inheritance object TypeAdapter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public static class TypeAdapter Methods | Improve this Doc View Source AreAssignable(Type, Type) Declaration public static bool AreAssignable(Type from, Type to) Parameters Type Name Description Type from Type to Returns Type Description bool | Improve this Doc View Source AreIncompatible(Type, Type) Declaration public static bool AreIncompatible(Type from, Type to) Parameters Type Name Description Type from Type to Returns Type Description bool | Improve this Doc View Source Convert(object, Type) Declaration public static object Convert(object from, Type targetType) Parameters Type Name Description object from Type targetType Returns Type Description object | Improve this Doc View Source GetConvertionMethod(Type, Type) Declaration public static MethodInfo GetConvertionMethod(Type from, Type to) Parameters Type Name Description Type from Type to Returns Type Description MethodInfo"
  },
  "api/GraphProcessor.TypeExtension.html": {
    "href": "api/GraphProcessor.TypeExtension.html",
    "title": "Class TypeExtension",
    "keywords": "Class TypeExtension Inheritance object TypeExtension Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public static class TypeExtension Methods | Improve this Doc View Source IsReallyAssignableFrom(Type, Type) Declaration public static bool IsReallyAssignableFrom(this Type type, Type otherType) Parameters Type Name Description Type type Type otherType Returns Type Description bool"
  },
  "api/GraphProcessor.Vector2IntParameter.html": {
    "href": "api/GraphProcessor.Vector2IntParameter.html",
    "title": "Class Vector2IntParameter",
    "keywords": "Class Vector2IntParameter Inheritance object ExposedParameter Vector2IntParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class Vector2IntParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.Vector2Parameter.Vector2Mode.html": {
    "href": "api/GraphProcessor.Vector2Parameter.Vector2Mode.html",
    "title": "Enum Vector2Parameter.Vector2Mode",
    "keywords": "Enum Vector2Parameter.Vector2Mode Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax public enum Vector2Parameter.Vector2Mode Fields Name Description Default MinMaxSlider"
  },
  "api/GraphProcessor.Vector2Parameter.Vector2Settings.html": {
    "href": "api/GraphProcessor.Vector2Parameter.Vector2Settings.html",
    "title": "Class Vector2Parameter.Vector2Settings",
    "keywords": "Class Vector2Parameter.Vector2Settings Inheritance object ExposedParameter.Settings Vector2Parameter.Vector2Settings Inherited Members ExposedParameter.Settings.isHidden ExposedParameter.Settings.expanded ExposedParameter.Settings.Equals(object) ExposedParameter.Settings.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class Vector2Parameter.Vector2Settings : ExposedParameter.Settings Fields | Improve this Doc View Source max Declaration public float max Field Value Type Description float | Improve this Doc View Source min Declaration public float min Field Value Type Description float | Improve this Doc View Source mode Declaration public Vector2Parameter.Vector2Mode mode Field Value Type Description Vector2Parameter.Vector2Mode Methods | Improve this Doc View Source Equals(Settings) Declaration public override bool Equals(ExposedParameter.Settings param) Parameters Type Name Description ExposedParameter.Settings param Returns Type Description bool Overrides ExposedParameter.Settings.Equals(ExposedParameter.Settings)"
  },
  "api/GraphProcessor.Vector2Parameter.html": {
    "href": "api/GraphProcessor.Vector2Parameter.html",
    "title": "Class Vector2Parameter",
    "keywords": "Class Vector2Parameter Inheritance object ExposedParameter Vector2Parameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class Vector2Parameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Methods | Improve this Doc View Source CreateSettings() Declaration protected override ExposedParameter.Settings CreateSettings() Returns Type Description ExposedParameter.Settings Overrides ExposedParameter.CreateSettings() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.Vector2ParameterDrawer.html": {
    "href": "api/GraphProcessor.Vector2ParameterDrawer.html",
    "title": "Class Vector2ParameterDrawer",
    "keywords": "Class Vector2ParameterDrawer Inheritance object GUIDrawer PropertyDrawer ExposedParameterDrawer Vector2ParameterDrawer Inherited Members ExposedParameterDrawer.CreateValProperty(SerializedProperty, string) ExposedParameterDrawer.GetSettingsProperty(SerializedProperty) ExposedParameterDrawer.GetValProperty(SerializedProperty) ExposedParameterDrawer.GetNameProperty(SerializedProperty) ExposedParameterDrawer.ApplyModifiedProperties(SerializedProperty) PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(Vector2Parameter))] public class Vector2ParameterDrawer : ExposedParameterDrawer Methods | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty property) Parameters Type Name Description SerializedProperty property The SerializedProperty to make the custom GUI for. Returns Type Description VisualElement The element containing the custom GUI. Overrides ExposedParameterDrawer.CreatePropertyGUI(SerializedProperty)"
  },
  "api/GraphProcessor.Vector2SettingsDrawer.html": {
    "href": "api/GraphProcessor.Vector2SettingsDrawer.html",
    "title": "Class Vector2SettingsDrawer",
    "keywords": "Class Vector2SettingsDrawer Inheritance object GUIDrawer PropertyDrawer ExposedParameterSettingsDrawer Vector2SettingsDrawer Inherited Members ExposedParameterSettingsDrawer.CreateHideInInspectorField(SerializedProperty) ExposedParameterSettingsDrawer.GetGraph(SerializedProperty) ExposedParameterSettingsDrawer.GetParameter(SerializedProperty) ExposedParameterSettingsDrawer.CreateSettingsField(SerializedProperty, string, string) PropertyDrawer.OnGUI(Rect, SerializedProperty, GUIContent) PropertyDrawer.GetPropertyHeight(SerializedProperty, GUIContent) PropertyDrawer.CanCacheInspectorGUI(SerializedProperty) PropertyDrawer.attribute PropertyDrawer.fieldInfo PropertyDrawer.preferredLabel object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Editor.dll Syntax [CustomPropertyDrawer(typeof(Vector2Parameter.Vector2Settings))] public class Vector2SettingsDrawer : ExposedParameterSettingsDrawer Methods | Improve this Doc View Source CreatePropertyGUI(SerializedProperty) Override this method to make your own UI Toolkit based GUI for the property. Declaration public override VisualElement CreatePropertyGUI(SerializedProperty settingsProperty) Parameters Type Name Description SerializedProperty settingsProperty Returns Type Description VisualElement The element containing the custom GUI. Overrides ExposedParameterSettingsDrawer.CreatePropertyGUI(SerializedProperty)"
  },
  "api/GraphProcessor.Vector3IntParameter.html": {
    "href": "api/GraphProcessor.Vector3IntParameter.html",
    "title": "Class Vector3IntParameter",
    "keywords": "Class Vector3IntParameter Inheritance object ExposedParameter Vector3IntParameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class Vector3IntParameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.Vector3Parameter.html": {
    "href": "api/GraphProcessor.Vector3Parameter.html",
    "title": "Class Vector3Parameter",
    "keywords": "Class Vector3Parameter Inheritance object ExposedParameter Vector3Parameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class Vector3Parameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.Vector4Parameter.html": {
    "href": "api/GraphProcessor.Vector4Parameter.html",
    "title": "Class Vector4Parameter",
    "keywords": "Class Vector4Parameter Inheritance object ExposedParameter Vector4Parameter Implements ISerializationCallbackReceiver Inherited Members ExposedParameter.guid ExposedParameter.name ExposedParameter.type ExposedParameter.serializedValue ExposedParameter.input ExposedParameter.settings ExposedParameter.shortType ExposedParameter.Initialize(string, object) ExposedParameter.CreateSettings() ExposedParameter.GetValueType() ExposedParameter.Equals(ExposedParameter) ExposedParameter.Equals(object) ExposedParameter.GetHashCode() ExposedParameter.Clone() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [Serializable] public class Vector4Parameter : ExposedParameter, ISerializationCallbackReceiver Properties | Improve this Doc View Source value Declaration public override object value { get; set; } Property Value Type Description object Overrides ExposedParameter.value Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/GraphProcessor.VerticalAttribute.html": {
    "href": "api/GraphProcessor.VerticalAttribute.html",
    "title": "Class VerticalAttribute",
    "keywords": "Class VerticalAttribute Creates a vertical port instead of the default horizontal one Inheritance object Attribute VerticalAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class VerticalAttribute : Attribute"
  },
  "api/GraphProcessor.VisibleIf.html": {
    "href": "api/GraphProcessor.VisibleIf.html",
    "title": "Class VisibleIf",
    "keywords": "Class VisibleIf Inheritance object Attribute VisibleIf Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: GraphProcessor Assembly: com.alelievr.NodeGraphProcessor.Runtime.dll Syntax [AttributeUsage(AttributeTargets.Field, AllowMultiple = false)] public class VisibleIf : Attribute Constructors | Improve this Doc View Source VisibleIf(string, object) Declaration public VisibleIf(string fieldName, object value) Parameters Type Name Description string fieldName object value Fields | Improve this Doc View Source fieldName Declaration public string fieldName Field Value Type Description string | Improve this Doc View Source value Declaration public object value Field Value Type Description object"
  },
  "api/GraphProcessor.html": {
    "href": "api/GraphProcessor.html",
    "title": "Namespace GraphProcessor",
    "keywords": "Namespace GraphProcessor Classes AnimationCurveParameter AppDomainExtension BaseEdgeConnector BaseEdgeConnectorListener Base class to write your own edge handling connection system BaseEdgeDragHelper BaseGraph BaseGraphProcessor Graph processor BaseGraphView Base class to write a custom view for a node BaseGraphWindow BaseNode BaseNodeView BaseStackNode Data container for the StackNode views BaseStackNodeView Stack node view implementation, can be used to stack multiple node inside a context like VFX graph does. BoolParameter BoundsIntParameter BoundsParameter ColorParameter ColorParameter.ColorSettings ColorParameterDrawer CopyPasteHelper CustomPortBehaviorAttribute Allow you to modify the generated port view from a field. Can be used to generate multiple ports from one field. CustomPortIO CustomPortInputAttribute Allow you to customize the input function of a port CustomPortOutputAttribute Allow you to customize the input function of a port CustomPortTypeBehavior Allow to bind a method to generate a specific set of ports based on a field type in a node CustomStackNodeView Allow you to have a custom view for your stack nodes DeleteCallback DoubleParameter EdgeView ExceptionToLog ExposedColorSettingsDrawer ExposedParameter ExposedParameter.Settings ExposedParameterDrawer ExposedParameterFieldFactory ExposedParameterFieldView ExposedParameterPropertyView ExposedParameterSettingsDrawer ExposedParameterView ExposedParameterWorkaround FieldDrawerAttribute Set a custom drawer for a field. It can then be created using the FieldFactory FieldFactory FloatParameter FloatParameter.FloatSettings FloatParameterDrawer FloatSettingsDrawer GameObjectParameter GradientParameter GradientParameter.GradientSettings GradientParameterDrawer GradientSettingsDrawer GraphChanges GraphInspector GraphUtils Group Group the selected node when created GroupView ITypeAdapter Implement this interface to use the inside your class to define type convertions to use inside the graph. Example: public class CustomConvertions : ITypeAdapter { public static Vector4 ConvertFloatToVector(float from) => new Vector4(from, from, from, from); ... } IngredientDrawerUIE InputAttribute Tell that this field is will generate an input port IntParameter IntParameter.IntSettings IntParameterDrawer IntSettingsDrawer IsCompatibleWithGraph JobGraphProcessor Graph processor JsonSerializer LongParameter MaterialParameter MeshParameter MiniMapView NodeBadgeView NodeCustomEditor NodeGraphProcessorMenuItems To add the menu items that create node C# script templates files you can inherit from this class and use it's API combined with [MenuItem] See GraphProcessorMenuItems.cs in examples for implementation details NodeGraphProcessorMenuItems.MenuItemPosition NodeInputPortContainer Container of ports and the edges connected to these ports NodeInspectorObject Node inspector object, you can inherit from this class to customize your node inspector. NodeInspectorObjectEditor Custom editor of the node inspector, you can inherit from this class to customize your node inspector. NodeMenuItemAttribute Register the node in the NodeProvider class. The node will also be available in the node creation window. NodeOutputPortContainer Container of ports and the edges connected to these ports NodePort Runtime class that stores all info about one port that is needed for the processing NodePortContainer Container of ports and the edges connected to these ports NodeProvider NodeProvider.NodeDescriptions OutputAttribute Tell that this field is will generate an output port ParameterNode PinnedElement Element that overlays the graph like the blackboard PinnedElementView PortData Class that describe port attributes for it's creation PortView ProcessGraphProcessor Graph processor ProcessorView RectIntParameter RectParameter RenderTextureParameter SerializableEdge SerializableObject SerializableType SettingAttribute ShowAsDrawer ShowInInspector StackNodeViewProvider StickyNote Serializable Sticky node class StringParameter Texture2DParameter ToolbarView ToolbarView.ToolbarButtonData TypeAdapter TypeExtension Vector2IntParameter Vector2Parameter Vector2Parameter.Vector2Settings Vector2ParameterDrawer Vector2SettingsDrawer Vector3IntParameter Vector3Parameter Vector4Parameter VerticalAttribute Creates a vertical port instead of the default horizontal one VisibleIf Structs JsonElement NodeProvider.NodeSpecificToGraph NodeProvider.PortDescription Interfaces ICreateNodeFrom<T> Implement this interface on a BaseNode, it allows you to automatically spawn a node if an asset of type T is dropped in the graphview area Enums ColorParameter.ColorMode ComputeOrderType Compute order type used to determine the compute order integer on the nodes FloatParameter.FloatMode GradientParameter.GradientColorMode IntParameter.IntMode NodeMessageType ParameterAccessor ToolbarView.ElementType Vector2Parameter.Vector2Mode Delegates BaseGraphView.ComputeOrderUpdatedDelegate BaseGraphView.NodeDuplicatedDelegate BaseNode.ProcessDelegate BaseStackNodeView.ReorderNodeAction CustomPortBehaviorDelegate CustomPortIODelegate CustomPortTypeBehaviorDelegate NodePort.PushDataDelegate Delegate that is made to send the data from this port to another port connected through an edge This is an optimization compared to dynamically setting values using Reflection (which is really slow) More info: https://codeblog.jonskeet.uk/2008/08/09/making-reflection-fly-and-exploring-delegates/"
  },
  "api/ProjectDawn.Impostor.AllowAsyncCompilationScope.html": {
    "href": "api/ProjectDawn.Impostor.AllowAsyncCompilationScope.html",
    "title": "Struct AllowAsyncCompilationScope",
    "keywords": "Struct AllowAsyncCompilationScope Implements IDisposable Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public struct AllowAsyncCompilationScope : IDisposable Constructors | Improve this Doc View Source AllowAsyncCompilationScope(bool) Declaration public AllowAsyncCompilationScope(bool allowAsyncCompilation) Parameters Type Name Description bool allowAsyncCompilation Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements IDisposable"
  },
  "api/ProjectDawn.Impostor.BaseOctahedralImpostor.html": {
    "href": "api/ProjectDawn.Impostor.BaseOctahedralImpostor.html",
    "title": "Class BaseOctahedralImpostor",
    "keywords": "Class BaseOctahedralImpostor Inheritance object BaseNode ImpostorNode BaseOctahedralImpostor LitHemiOctahedralImpostor LitOctahedralImpostor Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.Process() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public abstract class BaseOctahedralImpostor : ImpostorNode Fields | Improve this Doc View Source BaseAlpha Declaration [Input(null, false)] public Texture2D BaseAlpha Field Value Type Description Texture2D | Improve this Doc View Source CapturePoints Declaration [Input(null, false)] public CapturePoints CapturePoints Field Value Type Description CapturePoints | Improve this Doc View Source Impostor Declaration [Output(null, true)] public Impostor Impostor Field Value Type Description Impostor | Improve this Doc View Source Mesh Declaration [Input(null, false)] public Mesh Mesh Field Value Type Description Mesh | Improve this Doc View Source NormalDepth Declaration [Input(null, false)] public Texture2D NormalDepth Field Value Type Description Texture2D Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process(Material) Declaration protected virtual void Process(Material material) Parameters Type Name Description Material material"
  },
  "api/ProjectDawn.Impostor.BlitMask.html": {
    "href": "api/ProjectDawn.Impostor.BlitMask.html",
    "title": "Class BlitMask",
    "keywords": "Class BlitMask Inheritance object BlitMask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public static class BlitMask Methods | Improve this Doc View Source Execute(CommandBuffer, RenderTargetIdentifier, RenderTargetIdentifier, Packing, Material) Declaration public static void Execute(CommandBuffer cmd, RenderTargetIdentifier source, RenderTargetIdentifier destination, Packing packing, Material material) Parameters Type Name Description CommandBuffer cmd RenderTargetIdentifier source RenderTargetIdentifier destination Packing packing Material material"
  },
  "api/ProjectDawn.Impostor.BlitMaskNode.html": {
    "href": "api/ProjectDawn.Impostor.BlitMaskNode.html",
    "title": "Class BlitMaskNode",
    "keywords": "Class BlitMaskNode Inheritance object BaseNode ImpostorNode BlitMaskNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Texture/Blit\", null)] public class BlitMaskNode : ImpostorNode Fields | Improve this Doc View Source BlitMaskMaterial Declaration [Reload(\"Packages/com.projectdawn.impostor/Shaders/Blit.mat\")] public Material BlitMaskMaterial Field Value Type Description Material | Improve this Doc View Source Combined Declaration [Output(null, true)] public RenderTexture Combined Field Value Type Description RenderTexture | Improve this Doc View Source Destination Declaration [Input(null, false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source Packing Declaration public Packing Packing Field Value Type Description Packing | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.CapturePoint.html": {
    "href": "api/ProjectDawn.Impostor.CapturePoint.html",
    "title": "Struct CapturePoint",
    "keywords": "Struct CapturePoint Single capture angle. Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public struct CapturePoint Fields | Improve this Doc View Source From Start position of ray. Declaration public float3 From Field Value Type Description float3 | Improve this Doc View Source To End position of ray. Declaration public float3 To Field Value Type Description float3 | Improve this Doc View Source Uv Viewport coordinates in texture atlas. Declaration public Rect Uv Field Value Type Description Rect"
  },
  "api/ProjectDawn.Impostor.CapturePoints.html": {
    "href": "api/ProjectDawn.Impostor.CapturePoints.html",
    "title": "Class CapturePoints",
    "keywords": "Class CapturePoints Inheritance object CapturePoints Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public class CapturePoints Fields | Improve this Doc View Source Bounds Declaration public BoundingSphere Bounds Field Value Type Description BoundingSphere | Improve this Doc View Source Frames Square root of capture angles. Declaration public int Frames Field Value Type Description int | Improve this Doc View Source Points Capture angles. Declaration public CapturePoint[] Points Field Value Type Description CapturePoint[] Properties | Improve this Doc View Source Radius Declaration public float Radius { get; } Property Value Type Description float Methods | Improve this Doc View Source HemiOctahedral(float3, float, int) Declaration public static CapturePoints HemiOctahedral(float3 center, float radius, int frames) Parameters Type Name Description float3 center float radius int frames Returns Type Description CapturePoints | Improve this Doc View Source Octahedral(float3, float, int) Declaration public static CapturePoints Octahedral(float3 center, float radius, int frames) Parameters Type Name Description float3 center float radius int frames Returns Type Description CapturePoints"
  },
  "api/ProjectDawn.Impostor.CustomRenderMode.html": {
    "href": "api/ProjectDawn.Impostor.CustomRenderMode.html",
    "title": "Class CustomRenderMode",
    "keywords": "Class CustomRenderMode Inheritance object CustomRenderMode Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public static class CustomRenderMode Methods | Improve this Doc View Source Render(RenderTexture, Surface, CapturePoints, Material) Declaration public static void Render(RenderTexture target, Surface surface, CapturePoints capturePoints, Material overrideMaterial) Parameters Type Name Description RenderTexture target Surface surface CapturePoints capturePoints Material overrideMaterial"
  },
  "api/ProjectDawn.Impostor.Dilate.html": {
    "href": "api/ProjectDawn.Impostor.Dilate.html",
    "title": "Class Dilate",
    "keywords": "Class Dilate Inheritance object Dilate Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public static class Dilate Methods | Improve this Doc View Source Execute(CommandBuffer, RenderTexture, RenderTexture, Material, Material, int, int) Declaration public static void Execute(CommandBuffer cmd, RenderTexture target, RenderTexture mask, Material blitMaskMaterial, Material dilateMaterial, int frames, int iterations = 10) Parameters Type Name Description CommandBuffer cmd RenderTexture target RenderTexture mask Material blitMaskMaterial Material dilateMaterial int frames int iterations"
  },
  "api/ProjectDawn.Impostor.DilateNode.html": {
    "href": "api/ProjectDawn.Impostor.DilateNode.html",
    "title": "Class DilateNode",
    "keywords": "Class DilateNode Inheritance object BaseNode ImpostorNode DilateNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [HelpURL(\"https://lukaschod.github.io/impostor-graph-docs/manual/nodes/dilate-node.html\")] [NodeMenuItem(\"Texture/Dilate\", null)] public class DilateNode : ImpostorNode Fields | Improve this Doc View Source BlitMaskMaterial Declaration [Reload(\"Packages/com.projectdawn.impostor/Shaders/Blit.mat\")] public Material BlitMaskMaterial Field Value Type Description Material | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source DilateMaterial Declaration [Reload(\"Packages/com.projectdawn.impostor/Shaders/Dilate.mat\")] public Material DilateMaterial Field Value Type Description Material | Improve this Doc View Source Frames Declaration [Input(null, false)] [SerializeField] public int Frames Field Value Type Description int | Improve this Doc View Source Iterations Declaration public int Iterations Field Value Type Description int | Improve this Doc View Source Mask Declaration [Input(null, false)] public RenderTexture Mask Field Value Type Description RenderTexture | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.DuplicateRenderTexture.html": {
    "href": "api/ProjectDawn.Impostor.DuplicateRenderTexture.html",
    "title": "Class DuplicateRenderTexture",
    "keywords": "Class DuplicateRenderTexture Inheritance object BaseNode ImpostorNode DuplicateRenderTexture Implements IDisposable Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Texture/Duplicate RenderTexture\", null)] public class DuplicateRenderTexture : ImpostorNode, IDisposable Fields | Improve this Doc View Source Copy Declaration [Output(null, true)] public RenderTexture Copy Field Value Type Description RenderTexture | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source Resolution Declaration [SerializeField] [Input(null, false)] public int Resolution Field Value Type Description int | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process() Implements IDisposable"
  },
  "api/ProjectDawn.Impostor.Editor.ImpostorBuilderEditor.html": {
    "href": "api/ProjectDawn.Impostor.Editor.ImpostorBuilderEditor.html",
    "title": "Class ImpostorBuilderEditor",
    "keywords": "Class ImpostorBuilderEditor Inheritance object Object ScriptableObject Editor ImpostorBuilderEditor Inherited Members Editor.SaveChanges() Editor.DiscardChanges() Editor.CreateEditorWithContext(Object[], Object, Type) Editor.CreateEditorWithContext(Object[], Object) Editor.CreateCachedEditorWithContext(Object, Object, Type, ref Editor) Editor.CreateCachedEditorWithContext(Object[], Object, Type, ref Editor) Editor.CreateCachedEditor(Object, Type, ref Editor) Editor.CreateCachedEditor(Object[], Type, ref Editor) Editor.CreateEditor(Object) Editor.CreateEditor(Object, Type) Editor.CreateEditor(Object[]) Editor.CreateEditor(Object[], Type) Editor.DrawPropertiesExcluding(SerializedObject, params string[]) Editor.DrawDefaultInspector() Editor.Repaint() Editor.CreateInspectorGUI() Editor.RequiresConstantRepaint() Editor.DrawHeader() Editor.OnHeaderGUI() Editor.ShouldHideOpenButton() Editor.DrawFoldoutInspector(Object, ref Editor) Editor.GetPreviewTitle() Editor.RenderStaticPreview(string, Object[], int, int) Editor.OnPreviewSettings() Editor.GetInfoString() Editor.DrawPreview(Rect) Editor.ReloadPreviewInstances() Editor.UseDefaultMargins() Editor.MoveNextTarget() Editor.ResetTarget() Editor.hasUnsavedChanges Editor.saveChangesMessage Editor.target Editor.targets Editor.serializedObject Editor.finishedDefaultHeaderGUI ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor.Editor Assembly: ProjectDawn.Impostor.Editor.dll Syntax [CustomEditor(typeof(ImpostorBuilder))] public class ImpostorBuilderEditor : Editor Properties | Improve this Doc View Source Builder Declaration public ImpostorBuilder Builder { get; } Property Value Type Description ImpostorBuilder | Improve this Doc View Source DefaultImpostorBuilder Declaration public static ImpostorBuilder DefaultImpostorBuilder { get; } Property Value Type Description ImpostorBuilder | Improve this Doc View Source Suzzanne Declaration public static GameObject Suzzanne { get; } Property Value Type Description GameObject Methods | Improve this Doc View Source CreateDefaultImpostorBuilder(string) Declaration public static ImpostorBuilder CreateDefaultImpostorBuilder(string path) Parameters Type Name Description string path Returns Type Description ImpostorBuilder | Improve this Doc View Source CreateImpostorBuilder(string, ImpostorGraph) Declaration public static ImpostorBuilder CreateImpostorBuilder(string path, ImpostorGraph graph) Parameters Type Name Description string path ImpostorGraph graph Returns Type Description ImpostorBuilder | Improve this Doc View Source HasPreviewGUI() Override this method in subclasses if you implement OnPreviewGUI. Declaration public override bool HasPreviewGUI() Returns Type Description bool True if this component can be Previewed in its current state. Overrides UnityEditor.Editor.HasPreviewGUI() | Improve this Doc View Source OnInspectorGUI() Implement this function to make a custom inspector. Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI() | Improve this Doc View Source OnInteractivePreviewGUI(Rect, GUIStyle) Implement to create your own interactive custom preview. Interactive custom previews are used in the preview area of the inspector and the object selector. Declaration public override void OnInteractivePreviewGUI(Rect r, GUIStyle background) Parameters Type Name Description Rect r Rectangle in which to draw the preview. GUIStyle background Background image. Overrides UnityEditor.Editor.OnInteractivePreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle) | Improve this Doc View Source OnPreviewGUI(Rect, GUIStyle) <p>Creates a custom preview for the preview area of the Inspector, the headers of the primary Editor, and the object selector. You must implement Editor.HasPreviewGUI for this method to be called. Declaration public override void OnPreviewGUI(Rect r, GUIStyle background) Parameters Type Name Description Rect r The rectangle in which to draw the preview. GUIStyle background Background image. Overrides UnityEditor.Editor.OnPreviewGUI(UnityEngine.Rect, UnityEngine.GUIStyle)"
  },
  "api/ProjectDawn.Impostor.Editor.ImpostorGraphEditor.html": {
    "href": "api/ProjectDawn.Impostor.Editor.ImpostorGraphEditor.html",
    "title": "Class ImpostorGraphEditor",
    "keywords": "Class ImpostorGraphEditor Inheritance object Object ScriptableObject Editor ImpostorGraphEditor Inherited Members Editor.SaveChanges() Editor.DiscardChanges() Editor.CreateEditorWithContext(Object[], Object, Type) Editor.CreateEditorWithContext(Object[], Object) Editor.CreateCachedEditorWithContext(Object, Object, Type, ref Editor) Editor.CreateCachedEditorWithContext(Object[], Object, Type, ref Editor) Editor.CreateCachedEditor(Object, Type, ref Editor) Editor.CreateCachedEditor(Object[], Type, ref Editor) Editor.CreateEditor(Object) Editor.CreateEditor(Object, Type) Editor.CreateEditor(Object[]) Editor.CreateEditor(Object[], Type) Editor.DrawPropertiesExcluding(SerializedObject, params string[]) Editor.DrawDefaultInspector() Editor.Repaint() Editor.CreateInspectorGUI() Editor.RequiresConstantRepaint() Editor.DrawHeader() Editor.OnHeaderGUI() Editor.ShouldHideOpenButton() Editor.DrawFoldoutInspector(Object, ref Editor) Editor.HasPreviewGUI() Editor.GetPreviewTitle() Editor.RenderStaticPreview(string, Object[], int, int) Editor.OnPreviewGUI(Rect, GUIStyle) Editor.OnInteractivePreviewGUI(Rect, GUIStyle) Editor.OnPreviewSettings() Editor.GetInfoString() Editor.DrawPreview(Rect) Editor.ReloadPreviewInstances() Editor.UseDefaultMargins() Editor.MoveNextTarget() Editor.ResetTarget() Editor.hasUnsavedChanges Editor.saveChangesMessage Editor.target Editor.targets Editor.serializedObject Editor.finishedDefaultHeaderGUI ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor.Editor Assembly: ProjectDawn.Impostor.Editor.dll Syntax [CustomEditor(typeof(ImpostorGraph))] public class ImpostorGraphEditor : Editor Properties | Improve this Doc View Source DefaultImpostorGraph Declaration public static ImpostorGraph DefaultImpostorGraph { get; } Property Value Type Description ImpostorGraph | Improve this Doc View Source DefaultLitHemiOctahedralImpostorGraph Declaration public static ImpostorGraph DefaultLitHemiOctahedralImpostorGraph { get; } Property Value Type Description ImpostorGraph | Improve this Doc View Source DefaultLitOctahedralImpostorGraph Declaration public static ImpostorGraph DefaultLitOctahedralImpostorGraph { get; } Property Value Type Description ImpostorGraph | Improve this Doc View Source DefaultUnlitHemiOctahedralImpostorGraph Declaration public static ImpostorGraph DefaultUnlitHemiOctahedralImpostorGraph { get; } Property Value Type Description ImpostorGraph Methods | Improve this Doc View Source OnInspectorGUI() Implement this function to make a custom inspector. Declaration public override void OnInspectorGUI() Overrides UnityEditor.Editor.OnInspectorGUI() | Improve this Doc View Source OnOpenAsset(int, int) Declaration [OnOpenAsset] public static bool OnOpenAsset(int instanceID, int line) Parameters Type Name Description int instanceID int line Returns Type Description bool"
  },
  "api/ProjectDawn.Impostor.Editor.ImpostorGraphView.html": {
    "href": "api/ProjectDawn.Impostor.Editor.ImpostorGraphView.html",
    "title": "Class ImpostorGraphView",
    "keywords": "Class ImpostorGraphView Inheritance object CallbackEventHandler Focusable VisualElement GraphView BaseGraphView ImpostorGraphView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelection IDisposable Inherited Members BaseGraphView.graph BaseGraphView.connectorListener BaseGraphView.nodeViews BaseGraphView.nodeViewsPerNode BaseGraphView.edgeViews BaseGraphView.groupViews BaseGraphView.stackNodeViews BaseGraphView.initialized BaseGraphView.computeOrderUpdated BaseGraphView.onExposedParameterListChanged BaseGraphView.onExposedParameterModified BaseGraphView.nodeDuplicated BaseGraphView.nodeInspector BaseGraphView.exposedParameterFactory BaseGraphView.serializedGraph BaseGraphView.CreateNodeInspectorObject() BaseGraphView.CreateEdgeView() BaseGraphView.GetCompatiblePorts(Port, NodeAdapter) BaseGraphView.BuildContextualMenu(ContextualMenuPopulateEvent) BaseGraphView.BuildGroupContextualMenu(ContextualMenuPopulateEvent, int) BaseGraphView.BuildStickyNoteContextualMenu(ContextualMenuPopulateEvent, int) BaseGraphView.BuildViewContextualMenu(ContextualMenuPopulateEvent) BaseGraphView.BuildSelectAssetContextualMenu(ContextualMenuPopulateEvent) BaseGraphView.BuildSaveAssetContextualMenu(ContextualMenuPopulateEvent) BaseGraphView.BuildHelpContextualMenu(ContextualMenuPopulateEvent) BaseGraphView.KeyDownCallback(KeyDownEvent) BaseGraphView.Initialize(BaseGraph) BaseGraphView.ClearGraphElements() BaseGraphView.CreateEdgeConnectorListener() BaseGraphView.InitializeManipulators() BaseGraphView.Reload() BaseGraphView.UpdateNodeInspectorSelection() BaseGraphView.AddNode(BaseNode) BaseGraphView.AddNodeView(BaseNode) BaseGraphView.RemoveNode(BaseNode) BaseGraphView.RemoveNodeView(BaseNodeView) BaseGraphView.AddGroup(Group) BaseGraphView.AddGroupView(Group) BaseGraphView.AddStackNode(BaseStackNode) BaseGraphView.AddStackNodeView(BaseStackNode) BaseGraphView.RemoveStackNodeView(BaseStackNodeView) BaseGraphView.AddSelectionsToGroup(GroupView) BaseGraphView.RemoveGroups() BaseGraphView.CanConnectEdge(EdgeView, bool) BaseGraphView.ConnectView(EdgeView, bool) BaseGraphView.Connect(PortView, PortView, bool) BaseGraphView.Connect(EdgeView, bool) BaseGraphView.DisconnectView(EdgeView, bool) BaseGraphView.Disconnect(EdgeView, bool) BaseGraphView.RemoveEdges() BaseGraphView.UpdateComputeOrder() BaseGraphView.RegisterCompleteObjectUndo(string) BaseGraphView.SaveGraphToDisk() BaseGraphView.ToggleView<T>() BaseGraphView.ToggleView(Type) BaseGraphView.OpenPinned<T>() BaseGraphView.OpenPinned(Type) BaseGraphView.ClosePinned<T>(PinnedElementView) BaseGraphView.ClosePinned(Type, PinnedElementView) BaseGraphView.GetPinnedElementStatus<T>() BaseGraphView.GetPinnedElementStatus(Type) BaseGraphView.ResetPositionAndZoom() BaseGraphView.DelayedDeleteSelection() BaseGraphView.InitializeView() BaseGraphView.AddRelayNode(PortView, PortView, Vector2) BaseGraphView.SyncSerializedPropertyPathes() BaseGraphView.Dispose() GraphView.ports GraphView.UpdateViewTransform(Vector3, Vector3) GraphView.GetPortCenterOverride(Port, out Vector2) GraphView.AddLayer(int) GraphView.GetElementByGuid(string) GraphView.GetNodeByGuid(string) GraphView.GetPortByGuid(string) GraphView.GetEdgeByGuid(string) GraphView.SetupZoom(float, float) GraphView.SetupZoom(float, float, float, float) GraphView.ValidateTransform() GraphView.AddToSelection(ISelectable) GraphView.RemoveFromSelection(ISelectable) GraphView.ClearSelection() GraphView.ExecuteDefaultActionAtTarget(EventBase) GraphView.ExecuteDefaultAction(EventBase) GraphView.CollectElements(IEnumerable<GraphElement>, HashSet<GraphElement>, Func<GraphElement, bool>) GraphView.CollectCopyableGraphElements(IEnumerable<GraphElement>, HashSet<GraphElement>) GraphView.CopySelectionCallback() GraphView.CutSelectionCallback() GraphView.PasteCallback() GraphView.DuplicateSelectionCallback() GraphView.DeleteSelectionCallback(GraphView.AskUser) GraphView.SerializeGraphElements(IEnumerable<GraphElement>) GraphView.CanPasteSerializedData(string) GraphView.UnserializeAndPasteOperation(string, string) GraphView.DeleteSelectionOperation(string, GraphView.AskUser) GraphView.AddElement(GraphElement) GraphView.RemoveElement(GraphElement) GraphView.DeleteSelection() GraphView.DeleteElements(IEnumerable<GraphElement>) GraphView.FrameAll() GraphView.FrameSelection() GraphView.FrameOrigin() GraphView.FramePrev() GraphView.FrameNext() GraphView.FramePrev(Func<GraphElement, bool>) GraphView.FrameNext(Func<GraphElement, bool>) GraphView.CalculateRectToFitAll(VisualElement) GraphView.CalculateFrameTransform(Rect, Rect, int, out Vector3, out Vector3) GraphView.GetBlackboard() GraphView.ReleaseBlackboard(Blackboard) GraphView.CreatePlacematContainer() GraphView.nodeCreationRequest GraphView.graphViewChanged GraphView.groupTitleChanged GraphView.elementsAddedToGroup GraphView.elementsRemovedFromGroup GraphView.elementsInsertedToStackNode GraphView.elementsRemovedFromStackNode GraphView.elementResized GraphView.viewTransformChanged GraphView.supportsWindowedBlackboard GraphView.contentViewContainer GraphView.viewport GraphView.viewTransform GraphView.isReframable GraphView.contentContainer GraphView.placematContainer GraphView.graphElements GraphView.nodes GraphView.edges GraphView.minScale GraphView.maxScale GraphView.scaleStep GraphView.referenceScale GraphView.scale GraphView.zoomerMaxElementCountWithPixelCacheRegen GraphView.selection GraphView.canPaste GraphView.canDuplicateSelection GraphView.canDeleteSelection GraphView.serializeGraphElements GraphView.canPasteSerializedData GraphView.unserializeAndPaste GraphView.deleteSelection VisualElement.disabledUssClassName VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor.Editor Assembly: ProjectDawn.Impostor.Editor.dll Syntax public class ImpostorGraphView : BaseGraphView, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelection, IDisposable Constructors | Improve this Doc View Source ImpostorGraphView(EditorWindow) Declaration public ImpostorGraphView(EditorWindow window) Parameters Type Name Description EditorWindow window Properties | Improve this Doc View Source canCopySelection Declaration protected override bool canCopySelection { get; } Property Value Type Description bool Overrides BaseGraphView.canCopySelection | Improve this Doc View Source canCutSelection Declaration protected override bool canCutSelection { get; } Property Value Type Description bool Overrides BaseGraphView.canCutSelection Methods | Improve this Doc View Source FilterCreateNodeMenuEntries() Declaration public override IEnumerable<(string path, Type type)> FilterCreateNodeMenuEntries() Returns Type Description IEnumerable<(string path, Type type)> Overrides BaseGraphView.FilterCreateNodeMenuEntries() Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelection IDisposable"
  },
  "api/ProjectDawn.Impostor.Editor.ImpostorGraphWindow.html": {
    "href": "api/ProjectDawn.Impostor.Editor.ImpostorGraphWindow.html",
    "title": "Class ImpostorGraphWindow",
    "keywords": "Class ImpostorGraphWindow Inheritance object Object ScriptableObject EditorWindow BaseGraphWindow ImpostorGraphWindow Inherited Members BaseGraphWindow.rootView BaseGraphWindow.graphView BaseGraphWindow.graph BaseGraphWindow.isGraphLoaded BaseGraphWindow.graphLoaded BaseGraphWindow.graphUnloaded BaseGraphWindow.OnEnable() BaseGraphWindow.Update() BaseGraphWindow.OnDisable() BaseGraphWindow.InitializeGraph(BaseGraph) BaseGraphWindow.OnGraphDeleted() EditorWindow.BeginWindows() EditorWindow.EndWindows() EditorWindow.ShowNotification(GUIContent) EditorWindow.ShowNotification(GUIContent, double) EditorWindow.RemoveNotification() EditorWindow.ShowTab() EditorWindow.Focus() EditorWindow.ShowUtility() EditorWindow.ShowPopup() EditorWindow.ShowModalUtility() EditorWindow.ShowAsDropDown(Rect, Vector2) EditorWindow.Show() EditorWindow.Show(bool) EditorWindow.ShowAuxWindow() EditorWindow.ShowModal() EditorWindow.GetWindow(Type, bool, string, bool) EditorWindow.GetWindow(Type, bool, string) EditorWindow.GetWindow(Type, bool) EditorWindow.GetWindow(Type) EditorWindow.GetWindowWithRect(Type, Rect, bool, string) EditorWindow.GetWindowWithRect(Type, Rect, bool) EditorWindow.GetWindowWithRect(Type, Rect) EditorWindow.GetWindow<T>() EditorWindow.GetWindow<T>(bool) EditorWindow.GetWindow<T>(bool, string) EditorWindow.GetWindow<T>(string) EditorWindow.GetWindow<T>(string, bool) EditorWindow.GetWindow<T>(bool, string, bool) EditorWindow.GetWindow<T>(params Type[]) EditorWindow.GetWindow<T>(string, params Type[]) EditorWindow.GetWindow<T>(string, bool, params Type[]) EditorWindow.CreateWindow<T>(params Type[]) EditorWindow.CreateWindow<T>(string, params Type[]) EditorWindow.HasOpenInstances<T>() EditorWindow.FocusWindowIfItsOpen(Type) EditorWindow.FocusWindowIfItsOpen<T>() EditorWindow.GetWindowWithRect<T>(Rect) EditorWindow.GetWindowWithRect<T>(Rect, bool) EditorWindow.GetWindowWithRect<T>(Rect, bool, string) EditorWindow.GetWindowWithRect<T>(Rect, bool, string, bool) EditorWindow.SaveChanges() EditorWindow.DiscardChanges() EditorWindow.Close() EditorWindow.Repaint() EditorWindow.SendEvent(Event) EditorWindow.GetExtraPaneTypes() EditorWindow.TryGetOverlay(string, out Overlay) EditorWindow.OnBackingScaleFactorChanged() EditorWindow.dataModeController EditorWindow.rootVisualElement EditorWindow.overlayCanvas EditorWindow.wantsMouseMove EditorWindow.wantsMouseEnterLeaveWindow EditorWindow.wantsLessLayoutEvents EditorWindow.autoRepaintOnSceneChange EditorWindow.maximized EditorWindow.hasFocus EditorWindow.docked EditorWindow.focusedWindow EditorWindow.mouseOverWindow EditorWindow.hasUnsavedChanges EditorWindow.saveChangesMessage EditorWindow.minSize EditorWindow.maxSize EditorWindow.title EditorWindow.titleContent EditorWindow.depthBufferBits EditorWindow.antiAlias EditorWindow.position ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor.Editor Assembly: ProjectDawn.Impostor.Editor.dll Syntax public class ImpostorGraphWindow : BaseGraphWindow Methods | Improve this Doc View Source InitializeGraphView(BaseGraphView) Declaration protected override void InitializeGraphView(BaseGraphView view) Parameters Type Name Description BaseGraphView view Overrides BaseGraphWindow.InitializeGraphView(BaseGraphView) | Improve this Doc View Source InitializeWindow(BaseGraph) Declaration protected override void InitializeWindow(BaseGraph graph) Parameters Type Name Description BaseGraph graph Overrides BaseGraphWindow.InitializeWindow(BaseGraph) | Improve this Doc View Source OnDestroy() Called by Unity when the window is closed Declaration protected override void OnDestroy() Overrides BaseGraphWindow.OnDestroy() | Improve this Doc View Source Open(BaseGraph) Declaration public static BaseGraphWindow Open(BaseGraph graph) Parameters Type Name Description BaseGraph graph Returns Type Description BaseGraphWindow"
  },
  "api/ProjectDawn.Impostor.Editor.ImpostorNodeView.html": {
    "href": "api/ProjectDawn.Impostor.Editor.ImpostorNodeView.html",
    "title": "Class ImpostorNodeView",
    "keywords": "Class ImpostorNodeView Inheritance object CallbackEventHandler Focusable VisualElement GraphElement Node BaseNodeView ImpostorNodeView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler ISelectable ICollectibleElement Inherited Members BaseNodeView.nodeTarget BaseNodeView.inputPortViews BaseNodeView.outputPortViews BaseNodeView.owner BaseNodeView.portsPerFieldName BaseNodeView.controlsContainer BaseNodeView.debugContainer BaseNodeView.rightTitleContainer BaseNodeView.topPortContainer BaseNodeView.bottomPortContainer BaseNodeView.onPortConnected BaseNodeView.onPortDisconnected BaseNodeView.hasSettings BaseNodeView.initializing BaseNodeView.Initialize(BaseGraphView, BaseNode) BaseNodeView.OpenSettings() BaseNodeView.CloseSettings() BaseNodeView.GetPortViewsFromFieldName(string) BaseNodeView.GetFirstPortViewFromFieldName(string) BaseNodeView.GetPortViewFromFieldName(string, string) BaseNodeView.AddPort(FieldInfo, Direction, BaseEdgeConnectorListener, PortData) BaseNodeView.CreatePortView(Direction, FieldInfo, PortData, BaseEdgeConnectorListener) BaseNodeView.InsertPort(PortView, int) BaseNodeView.RemovePort(PortView) BaseNodeView.GetNodeRect(Node, float, float) BaseNodeView.AlignToLeft() BaseNodeView.AlignToCenter() BaseNodeView.AlignToRight() BaseNodeView.AlignToTop() BaseNodeView.AlignToMiddle() BaseNodeView.AlignToBottom() BaseNodeView.OpenNodeViewScript() BaseNodeView.OpenNodeScript() BaseNodeView.ToggleDebug() BaseNodeView.UpdateDebugView() BaseNodeView.AddMessageView(string, Texture, Color) BaseNodeView.AddMessageView(string, NodeMessageType) BaseNodeView.RemoveMessageViewContains(string) BaseNodeView.RemoveMessageView(string) BaseNodeView.Highlight() BaseNodeView.UnHighlight() BaseNodeView.Enable(bool) BaseNodeView.Disable() BaseNodeView.AddInputContainer() BaseNodeView.DrawDefaultInspector(bool) BaseNodeView.SetNodeColor(Color) BaseNodeView.AddControlField(string, string, bool, Action) BaseNodeView.FindSerializedProperty(string) BaseNodeView.AddControlField(FieldInfo, string, bool, Action) BaseNodeView.AddSettingField(FieldInfo) BaseNodeView.OnRemoved() BaseNodeView.SetPosition(Rect) BaseNodeView.expanded BaseNodeView.ChangeLockStatus() BaseNodeView.BuildContextualMenu(ContextualMenuPopulateEvent) BaseNodeView.BuildAlignMenu(ContextualMenuPopulateEvent) BaseNodeView.RefreshPorts() BaseNodeView.ForceUpdatePorts() BaseNodeView.CreateSettingsView() BaseNodeView.NotifyNodeChanged() Node.m_CollapseButton Node.m_ButtonContainer Node.RefreshExpandedState() Node.GetPosition() Node.OnPortRemoved(Port) Node.InstantiatePort(Orientation, Direction, Port.Capacity, Type) Node.ToggleCollapse() Node.UseDefaultStyling() Node.CollectElements(HashSet<GraphElement>, Func<GraphElement, bool>) Node.mainContainer Node.titleContainer Node.inputContainer Node.outputContainer Node.titleButtonContainer Node.topContainer Node.extensionContainer Node.title GraphElement.ResetLayer() GraphElement.OnCustomStyleResolved(ICustomStyle) GraphElement.IsSelectable() GraphElement.IsMovable() GraphElement.IsResizable() GraphElement.IsDroppable() GraphElement.IsAscendable() GraphElement.IsRenamable() GraphElement.IsCopiable() GraphElement.IsSnappable() GraphElement.IsGroupable() GraphElement.IsStackable() GraphElement.GetGlobalCenter() GraphElement.UpdatePresenterPosition() GraphElement.OnSelected() GraphElement.OnUnselected() GraphElement.HitTest(Vector2) GraphElement.Select(VisualElement, bool) GraphElement.Unselect(VisualElement) GraphElement.IsSelected(VisualElement) GraphElement.elementTypeColor GraphElement.layer GraphElement.showInMiniMap GraphElement.capabilities GraphElement.selected VisualElement.disabledUssClassName VisualElement.ExecuteDefaultAction(EventBase) VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor.Editor Assembly: ProjectDawn.Impostor.Editor.dll Syntax [NodeCustomEditor(typeof(ImpostorNode))] public class ImpostorNodeView : BaseNodeView, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler, ISelectable, ICollectibleElement Methods | Improve this Doc View Source Enable() Declaration public override void Enable() Overrides BaseNodeView.Enable() | Improve this Doc View Source OnCreated() Declaration public override void OnCreated() Overrides BaseNodeView.OnCreated() Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler UnityEditor.Experimental.GraphView.ISelectable UnityEditor.Experimental.GraphView.ICollectibleElement"
  },
  "api/ProjectDawn.Impostor.Editor.ImpostorToolbarView.html": {
    "href": "api/ProjectDawn.Impostor.Editor.ImpostorToolbarView.html",
    "title": "Class ImpostorToolbarView",
    "keywords": "Class ImpostorToolbarView Inheritance object CallbackEventHandler Focusable VisualElement ToolbarView ImpostorToolbarView Implements IEventHandler IResolvedStyle ITransform ITransitionAnimations IExperimentalFeatures IVisualElementScheduler Inherited Members ToolbarView.graphView ToolbarView.AddButton(string, Action, bool) ToolbarView.AddButton(GUIContent, Action, bool) ToolbarView.AddSeparator(int, bool) ToolbarView.AddCustom(Action, bool) ToolbarView.AddFlexibleSpace(bool) ToolbarView.AddToggle(string, bool, Action<bool>, bool) ToolbarView.AddToggle(GUIContent, bool, Action<bool>, bool) ToolbarView.AddDropDownButton(string, Action, bool) ToolbarView.AddDropDownButton(GUIContent, Action, bool) ToolbarView.RemoveButton(string, bool) ToolbarView.HideButton(string) ToolbarView.ShowButton(string) ToolbarView.UpdateButtonStatus() ToolbarView.DrawImGUIToolbar() VisualElement.disabledUssClassName VisualElement.ExecuteDefaultAction(EventBase) VisualElement.Focus() VisualElement.SendEvent(EventBase) VisualElement.SetEnabledFromHierarchy(bool) VisualElement.SetEnabled(bool) VisualElement.MarkDirtyRepaint() VisualElement.ContainsPoint(Vector2) VisualElement.Overlaps(Rect) VisualElement.DoMeasure(float, VisualElement.MeasureMode, float, VisualElement.MeasureMode) VisualElement.ToString() VisualElement.GetClasses() VisualElement.ClearClassList() VisualElement.AddToClassList(string) VisualElement.RemoveFromClassList(string) VisualElement.ToggleInClassList(string) VisualElement.EnableInClassList(string, bool) VisualElement.ClassListContains(string) VisualElement.FindAncestorUserData() VisualElement.Add(VisualElement) VisualElement.Insert(int, VisualElement) VisualElement.Remove(VisualElement) VisualElement.RemoveAt(int) VisualElement.Clear() VisualElement.ElementAt(int) VisualElement.IndexOf(VisualElement) VisualElement.Children() VisualElement.Sort(Comparison<VisualElement>) VisualElement.BringToFront() VisualElement.SendToBack() VisualElement.PlaceBehind(VisualElement) VisualElement.PlaceInFront(VisualElement) VisualElement.RemoveFromHierarchy() VisualElement.GetFirstOfType<T>() VisualElement.GetFirstAncestorOfType<T>() VisualElement.Contains(VisualElement) VisualElement.FindCommonAncestor(VisualElement) VisualElement.resolvedStyle VisualElement.viewDataKey VisualElement.userData VisualElement.canGrabFocus VisualElement.focusController VisualElement.usageHints VisualElement.transform VisualElement.layout VisualElement.contentRect VisualElement.paddingRect VisualElement.worldBound VisualElement.localBound VisualElement.worldTransform VisualElement.pickingMode VisualElement.name VisualElement.enabledInHierarchy VisualElement.enabledSelf VisualElement.languageDirection VisualElement.visible VisualElement.generateVisualContent VisualElement.experimental VisualElement.hierarchy VisualElement.cacheAsBitmap VisualElement.parent VisualElement.panel VisualElement.contentContainer VisualElement.visualTreeAssetSource VisualElement.this[int] VisualElement.childCount VisualElement.schedule VisualElement.style VisualElement.customStyle VisualElement.styleSheets VisualElement.tooltip Focusable.Blur() Focusable.focusable Focusable.tabIndex Focusable.delegatesFocus CallbackEventHandler.RegisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.RegisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TUserArgsType, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType>(EventCallback<TEventType>, TrickleDown) CallbackEventHandler.UnregisterCallback<TEventType, TUserArgsType>(EventCallback<TEventType, TUserArgsType>, TrickleDown) CallbackEventHandler.HandleEvent(EventBase) CallbackEventHandler.HasTrickleDownHandlers() CallbackEventHandler.HasBubbleUpHandlers() CallbackEventHandler.ExecuteDefaultActionAtTarget(EventBase) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor.Editor Assembly: ProjectDawn.Impostor.Editor.dll Syntax public class ImpostorToolbarView : ToolbarView, IEventHandler, IResolvedStyle, ITransform, ITransitionAnimations, IExperimentalFeatures, IVisualElementScheduler Constructors | Improve this Doc View Source ImpostorToolbarView(BaseGraphView) Declaration public ImpostorToolbarView(BaseGraphView graphView) Parameters Type Name Description BaseGraphView graphView Methods | Improve this Doc View Source AddButtons() Declaration protected override void AddButtons() Overrides ToolbarView.AddButtons() Implements UnityEngine.UIElements.IEventHandler UnityEngine.UIElements.IResolvedStyle UnityEngine.UIElements.ITransform UnityEngine.UIElements.Experimental.ITransitionAnimations UnityEngine.UIElements.IExperimentalFeatures UnityEngine.UIElements.IVisualElementScheduler"
  },
  "api/ProjectDawn.Impostor.Editor.html": {
    "href": "api/ProjectDawn.Impostor.Editor.html",
    "title": "Namespace ProjectDawn.Impostor.Editor",
    "keywords": "Namespace ProjectDawn.Impostor.Editor Classes ImpostorBuilderEditor ImpostorGraphEditor ImpostorGraphView ImpostorGraphWindow ImpostorNodeView ImpostorToolbarView"
  },
  "api/ProjectDawn.Impostor.HDRenderNormalNode.html": {
    "href": "api/ProjectDawn.Impostor.HDRenderNormalNode.html",
    "title": "Class HDRenderNormalNode",
    "keywords": "Class HDRenderNormalNode Inheritance object BaseNode ImpostorNode HDRenderNormalNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Scene/Render Normal\", null)] public class HDRenderNormalNode : ImpostorNode Fields | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source Scene Declaration [Input(null, false)] public Scene Scene Field Value Type Description Scene | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.HemiOctahedronCapturePointsNode.html": {
    "href": "api/ProjectDawn.Impostor.HemiOctahedronCapturePointsNode.html",
    "title": "Class HemiOctahedronCapturePointsNode",
    "keywords": "Class HemiOctahedronCapturePointsNode Inheritance object BaseNode ImpostorNode HemiOctahedronCapturePointsNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Capture Points/Hemi-Octahedral Capture Points\", null)] public class HemiOctahedronCapturePointsNode : ImpostorNode Fields | Improve this Doc View Source CapturePoints Declaration [Output(null, true)] public CapturePoints CapturePoints Field Value Type Description CapturePoints | Improve this Doc View Source Frames Declaration [SerializeField] [Input(null, false)] public int Frames Field Value Type Description int | Improve this Doc View Source Surface Declaration [Input(null, false)] public Surface Surface Field Value Type Description Surface | Improve this Doc View Source TightBounds Declaration public bool TightBounds Field Value Type Description bool Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.Impostor.html": {
    "href": "api/ProjectDawn.Impostor.Impostor.html",
    "title": "Class Impostor",
    "keywords": "Class Impostor Inheritance object Impostor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [Serializable] public class Impostor Fields | Improve this Doc View Source Material Declaration public Material Material Field Value Type Description Material | Improve this Doc View Source Mesh Declaration public Mesh Mesh Field Value Type Description Mesh | Improve this Doc View Source Textures Declaration public Texture[] Textures Field Value Type Description Texture[]"
  },
  "api/ProjectDawn.Impostor.ImpostorBuilder.html": {
    "href": "api/ProjectDawn.Impostor.ImpostorBuilder.html",
    "title": "Class ImpostorBuilder",
    "keywords": "Class ImpostorBuilder Inheritance object Object ScriptableObject ImpostorBuilder Inherited Members ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [HelpURL(\"https://lukaschod.github.io/impostor-graph-docs/manual/builder.html\")] public class ImpostorBuilder : ScriptableObject Properties | Improve this Doc View Source Graph Declaration public ImpostorGraph Graph { get; set; } Property Value Type Description ImpostorGraph | Improve this Doc View Source Impostor Declaration public Impostor Impostor { get; set; } Property Value Type Description Impostor Methods | Improve this Doc View Source Build() Build the impostor. Declaration public Impostor Build() Returns Type Description Impostor | Improve this Doc View Source Contains(string) Declaration public bool Contains(string name) Parameters Type Name Description string name Returns Type Description bool | Improve this Doc View Source GetFloat(string) Retrieves the value of the integer parameter with the specified name. Declaration public float GetFloat(string name) Parameters Type Name Description string name The name of the parameter to retrieve. Returns Type Description float The value of the parameter. | Improve this Doc View Source GetGameObject(string) Retrieves the value of the game object parameter with the specified name. Declaration public GameObject GetGameObject(string name) Parameters Type Name Description string name The name of the parameter to retrieve. Returns Type Description GameObject The value of the parameter. | Improve this Doc View Source GetInteger(string) Retrieves the value of the integer parameter with the specified name. Declaration public int GetInteger(string name) Parameters Type Name Description string name The name of the parameter to retrieve. Returns Type Description int The value of the parameter. | Improve this Doc View Source SetFloat(string, float) Sets the value of an integer parameter with the specified name. Declaration public void SetFloat(string name, float value) Parameters Type Name Description string name The name of the parameter to set. float value The new value of the parameter. | Improve this Doc View Source SetGameObject(string, GameObject) Sets the value of a game object parameter with the specified name. Declaration public void SetGameObject(string name, GameObject value) Parameters Type Name Description string name The name of the parameter to set. GameObject value The new value of the parameter. | Improve this Doc View Source SetInteger(string, int) Sets the value of an integer parameter with the specified name. Declaration public void SetInteger(string name, int value) Parameters Type Name Description string name The name of the parameter to set. int value The new value of the parameter."
  },
  "api/ProjectDawn.Impostor.ImpostorGraph.html": {
    "href": "api/ProjectDawn.Impostor.ImpostorGraph.html",
    "title": "Class ImpostorGraph",
    "keywords": "Class ImpostorGraph Inheritance object Object ScriptableObject BaseGraph ImpostorGraph Implements ISerializationCallbackReceiver Inherited Members BaseGraph.loopComputeOrder BaseGraph.invalidComputeOrder BaseGraph.serializedNodes BaseGraph.nodes BaseGraph.nodesPerGUID BaseGraph.edges BaseGraph.edgesPerGUID BaseGraph.groups BaseGraph.stackNodes BaseGraph.pinnedElements BaseGraph.exposedParameters BaseGraph.stickyNotes BaseGraph.position BaseGraph.scale BaseGraph.onExposedParameterListChanged BaseGraph.onExposedParameterModified BaseGraph.onExposedParameterValueChanged BaseGraph.onSceneLinked BaseGraph.onEnabled BaseGraph.onGraphChanges BaseGraph.isEnabled BaseGraph.graphOutputs BaseGraph.OnDisable() BaseGraph.OnAssetDeleted() BaseGraph.AddNode(BaseNode) BaseGraph.RemoveNode(BaseNode) BaseGraph.Connect(NodePort, NodePort, bool) BaseGraph.Disconnect(BaseNode, string, BaseNode, string) BaseGraph.Disconnect(SerializableEdge) BaseGraph.Disconnect(string) BaseGraph.AddGroup(Group) BaseGraph.RemoveGroup(Group) BaseGraph.AddStackNode(BaseStackNode) BaseGraph.RemoveStackNode(BaseStackNode) BaseGraph.AddStickyNote(StickyNote) BaseGraph.RemoveStickyNote(StickyNote) BaseGraph.NotifyNodeChanged(BaseNode) BaseGraph.OpenPinned(Type) BaseGraph.ClosePinned(Type) BaseGraph.OnBeforeSerialize() BaseGraph.Deserialize() BaseGraph.MigrateGraphIfNeeded() BaseGraph.OnAfterDeserialize() BaseGraph.UpdateComputeOrder(ComputeOrderType) BaseGraph.AddExposedParameter(string, Type, object) BaseGraph.AddExposedParameter(ExposedParameter) BaseGraph.RemoveExposedParameter(ExposedParameter) BaseGraph.RemoveExposedParameter(string) BaseGraph.UpdateExposedParameter(string, object) BaseGraph.UpdateExposedParameterName(ExposedParameter, string) BaseGraph.NotifyExposedParameterChanged(ExposedParameter) BaseGraph.NotifyExposedParameterValueChanged(ExposedParameter) BaseGraph.GetExposedParameter(string) BaseGraph.GetExposedParameterFromGUID(string) BaseGraph.SetParameterValue(string, object) BaseGraph.GetParameterValue(string) BaseGraph.GetParameterValue<T>(string) BaseGraph.LinkToScene(Scene) BaseGraph.IsLinkedToScene() BaseGraph.GetLinkedScene() BaseGraph.TypesAreConnectable(Type, Type) ScriptableObject.SetDirty() ScriptableObject.CreateInstance(string) ScriptableObject.CreateInstance(Type) ScriptableObject.CreateInstance<T>() Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [HelpURL(\"https://lukaschod.github.io/impostor-graph-docs/manual/graph.html\")] [CreateAssetMenu(fileName = \"New Impostor Graph\", menuName = \"Impostor Graph\", order = 150)] public class ImpostorGraph : BaseGraph, ISerializationCallbackReceiver Methods | Improve this Doc View Source OnEnable() Declaration protected override void OnEnable() Overrides BaseGraph.OnEnable() Implements UnityEngine.ISerializationCallbackReceiver"
  },
  "api/ProjectDawn.Impostor.ImpostorNode.html": {
    "href": "api/ProjectDawn.Impostor.ImpostorNode.html",
    "title": "Class ImpostorNode",
    "keywords": "Class ImpostorNode Inheritance object BaseNode ImpostorNode BaseOctahedralImpostor BlitMaskNode DilateNode DuplicateRenderTexture HDRenderNormalNode HemiOctahedronCapturePointsNode LitMaskHemiOctahedralImpostor NameFilterSurfaceNode OctahedronCapturePointsNode QuadMeshNode RenderAlphaNode RenderBaseNode RenderCustomNode RenderDepthNode RenderDiffuseNode RenderEmissionNode RenderMetallicNode RenderOcclusionNode RenderSmoothnessNode RenderTextureNode SceneNode SetMaterialPropertyFloat SurfaceNode Texture2DNode TightMeshNode Inherited Members BaseNode.name BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.Process() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public abstract class ImpostorNode : BaseNode"
  },
  "api/ProjectDawn.Impostor.LitHemiOctahedralImpostor.html": {
    "href": "api/ProjectDawn.Impostor.LitHemiOctahedralImpostor.html",
    "title": "Class LitHemiOctahedralImpostor",
    "keywords": "Class LitHemiOctahedralImpostor Inheritance object BaseNode ImpostorNode BaseOctahedralImpostor LitHemiOctahedralImpostor Inherited Members BaseOctahedralImpostor.BaseAlpha BaseOctahedralImpostor.NormalDepth BaseOctahedralImpostor.Mesh BaseOctahedralImpostor.CapturePoints BaseOctahedralImpostor.Impostor BaseOctahedralImpostor.Process(Material) BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Material/Lit Hemi-Octahedral Impostor\", null)] public class LitHemiOctahedralImpostor : BaseOctahedralImpostor Fields | Improve this Doc View Source BaseMaterial Declaration [Reload(\"Packages/com.projectdawn.impostor/Shaders/Lit Hemi Octahedral Impostor.mat\")] public Material BaseMaterial Field Value Type Description Material Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseOctahedralImpostor.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.LitMaskHemiOctahedralImpostor.html": {
    "href": "api/ProjectDawn.Impostor.LitMaskHemiOctahedralImpostor.html",
    "title": "Class LitMaskHemiOctahedralImpostor",
    "keywords": "Class LitMaskHemiOctahedralImpostor Inheritance object BaseNode ImpostorNode LitMaskHemiOctahedralImpostor Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.Samples.GameKit.dll Syntax [NodeMenuItem(\"Material/Lit Mask Hemi-Octahedral Impostor\", null)] public class LitMaskHemiOctahedralImpostor : ImpostorNode Fields | Improve this Doc View Source BaseAlpha Declaration [Input(null, false)] public Texture2D BaseAlpha Field Value Type Description Texture2D | Improve this Doc View Source BaseMaterial Declaration [Reload(\"Packages/com.projectdawn.impostor/Shaders/Lit Hemi Octahedral Impostor.mat\")] public Material BaseMaterial Field Value Type Description Material | Improve this Doc View Source CapturePoints Declaration [Input(null, false)] public CapturePoints CapturePoints Field Value Type Description CapturePoints | Improve this Doc View Source Impostor Declaration [Output(null, true)] public Impostor Impostor Field Value Type Description Impostor | Improve this Doc View Source Mask Declaration [Input(null, false)] public Texture2D Mask Field Value Type Description Texture2D | Improve this Doc View Source Mesh Declaration [Input(null, false)] public Mesh Mesh Field Value Type Description Mesh | Improve this Doc View Source NormalDepth Declaration [Input(null, false)] public Texture2D NormalDepth Field Value Type Description Texture2D Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.LitOctahedralImpostor.html": {
    "href": "api/ProjectDawn.Impostor.LitOctahedralImpostor.html",
    "title": "Class LitOctahedralImpostor",
    "keywords": "Class LitOctahedralImpostor Inheritance object BaseNode ImpostorNode BaseOctahedralImpostor LitOctahedralImpostor Inherited Members BaseOctahedralImpostor.BaseAlpha BaseOctahedralImpostor.NormalDepth BaseOctahedralImpostor.Mesh BaseOctahedralImpostor.CapturePoints BaseOctahedralImpostor.Impostor BaseOctahedralImpostor.Process(Material) BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Material/Lit Octahedral Impostor\", null)] public class LitOctahedralImpostor : BaseOctahedralImpostor Fields | Improve this Doc View Source BaseMaterial Declaration [Reload(\"Packages/com.projectdawn.impostor/Shaders/Lit Octahedral Impostor.mat\")] public Material BaseMaterial Field Value Type Description Material Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseOctahedralImpostor.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.NameFilterSurfaceNode.html": {
    "href": "api/ProjectDawn.Impostor.NameFilterSurfaceNode.html",
    "title": "Class NameFilterSurfaceNode",
    "keywords": "Class NameFilterSurfaceNode Inheritance object BaseNode ImpostorNode NameFilterSurfaceNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Name Filter Surface\", null)] public class NameFilterSurfaceNode : ImpostorNode Fields | Improve this Doc View Source Input Declaration [Input(null, false)] public Surface Input Field Value Type Description Surface | Improve this Doc View Source MatchCase Declaration public bool MatchCase Field Value Type Description bool | Improve this Doc View Source MatchWholeWord Declaration public bool MatchWholeWord Field Value Type Description bool | Improve this Doc View Source Names Declaration public List<string> Names Field Value Type Description List<string> | Improve this Doc View Source Output Declaration [Output(null, true)] public Surface Output Field Value Type Description Surface Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.OctahedronCapturePointsNode.html": {
    "href": "api/ProjectDawn.Impostor.OctahedronCapturePointsNode.html",
    "title": "Class OctahedronCapturePointsNode",
    "keywords": "Class OctahedronCapturePointsNode Inheritance object BaseNode ImpostorNode OctahedronCapturePointsNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Capture Points/Octahedral Capture Points\", null)] public class OctahedronCapturePointsNode : ImpostorNode Fields | Improve this Doc View Source CapturePoints Declaration [Output(null, true)] public CapturePoints CapturePoints Field Value Type Description CapturePoints | Improve this Doc View Source Frames Declaration [SerializeField] [Input(null, false)] public int Frames Field Value Type Description int | Improve this Doc View Source Surface Declaration [Input(null, false)] public Surface Surface Field Value Type Description Surface | Improve this Doc View Source TightBounds Declaration public bool TightBounds Field Value Type Description bool Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.OutputNode.html": {
    "href": "api/ProjectDawn.Impostor.OutputNode.html",
    "title": "Class OutputNode",
    "keywords": "Class OutputNode Inheritance object BaseNode OutputNode Inherited Members BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Output\", null)] public class OutputNode : BaseNode Fields | Improve this Doc View Source Impostor Declaration [Input(null, false)] public Impostor Impostor Field Value Type Description Impostor Properties | Improve this Doc View Source color The accent color of the node Declaration public override Color color { get; } Property Value Type Description Color Overrides BaseNode.color | Improve this Doc View Source deletable True if the node can be deleted, false otherwise Declaration public override bool deletable { get; } Property Value Type Description bool Overrides BaseNode.deletable | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.Packing.html": {
    "href": "api/ProjectDawn.Impostor.Packing.html",
    "title": "Enum Packing",
    "keywords": "Enum Packing Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public enum Packing Fields Name Description RGB RGBA RToA RToB RToG RToR"
  },
  "api/ProjectDawn.Impostor.QuadMeshNode.html": {
    "href": "api/ProjectDawn.Impostor.QuadMeshNode.html",
    "title": "Class QuadMeshNode",
    "keywords": "Class QuadMeshNode Inheritance object BaseNode ImpostorNode QuadMeshNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Mesh/Quad Mesh\", null)] public class QuadMeshNode : ImpostorNode Fields | Improve this Doc View Source CapturePoints Declaration [Input(null, false)] public CapturePoints CapturePoints Field Value Type Description CapturePoints | Improve this Doc View Source Mesh Declaration [Output(null, true)] public Mesh Mesh Field Value Type Description Mesh Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.ReloadAttribute.html": {
    "href": "api/ProjectDawn.Impostor.ReloadAttribute.html",
    "title": "Class ReloadAttribute",
    "keywords": "Class ReloadAttribute Inheritance object Attribute ReloadAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public class ReloadAttribute : Attribute Constructors | Improve this Doc View Source ReloadAttribute(string) Declaration public ReloadAttribute(string path) Parameters Type Name Description string path Fields | Improve this Doc View Source Path Declaration public string Path Field Value Type Description string"
  },
  "api/ProjectDawn.Impostor.RenderAlphaNode.html": {
    "href": "api/ProjectDawn.Impostor.RenderAlphaNode.html",
    "title": "Class RenderAlphaNode",
    "keywords": "Class RenderAlphaNode Inheritance object BaseNode ImpostorNode RenderAlphaNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Scene/Render Alpha\", null)] public class RenderAlphaNode : ImpostorNode Fields | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source Scene Declaration [Input(null, false)] public Scene Scene Field Value Type Description Scene | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.RenderBaseNode.html": {
    "href": "api/ProjectDawn.Impostor.RenderBaseNode.html",
    "title": "Class RenderBaseNode",
    "keywords": "Class RenderBaseNode Inheritance object BaseNode ImpostorNode RenderBaseNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Scene/Render Base Color\", null)] public class RenderBaseNode : ImpostorNode Fields | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source Scene Declaration [Input(null, false)] public Scene Scene Field Value Type Description Scene | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.RenderCustomNode.html": {
    "href": "api/ProjectDawn.Impostor.RenderCustomNode.html",
    "title": "Class RenderCustomNode",
    "keywords": "Class RenderCustomNode Inheritance object BaseNode ImpostorNode RenderCustomNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [HelpURL(\"https://lukaschod.github.io/impostor-graph-docs/manual/nodes/render-custom-node.html\")] [NodeMenuItem(\"Scene/Render Custom\", null)] public class RenderCustomNode : ImpostorNode Fields | Improve this Doc View Source CapturePoints Declaration [Input(null, false)] public CapturePoints CapturePoints Field Value Type Description CapturePoints | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source OverrideMaterial Declaration public Material OverrideMaterial Field Value Type Description Material | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture | Improve this Doc View Source Surface Declaration [Input(null, false)] public Surface Surface Field Value Type Description Surface Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.RenderDepthNode.html": {
    "href": "api/ProjectDawn.Impostor.RenderDepthNode.html",
    "title": "Class RenderDepthNode",
    "keywords": "Class RenderDepthNode Inheritance object BaseNode ImpostorNode RenderDepthNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Scene/Render Depth\", null)] public class RenderDepthNode : ImpostorNode Fields | Improve this Doc View Source ConvertDepthMaterial Declaration [Reload(\"Packages/com.projectdawn.impostor/Shaders/ConvertDepth.mat\")] public Material ConvertDepthMaterial Field Value Type Description Material | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source Scene Declaration [Input(null, false)] public Scene Scene Field Value Type Description Scene | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.RenderDiffuseNode.html": {
    "href": "api/ProjectDawn.Impostor.RenderDiffuseNode.html",
    "title": "Class RenderDiffuseNode",
    "keywords": "Class RenderDiffuseNode Inheritance object BaseNode ImpostorNode RenderDiffuseNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Scene/Render Diffuse Color\", null)] public class RenderDiffuseNode : ImpostorNode Fields | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source Scene Declaration [Input(null, false)] public Scene Scene Field Value Type Description Scene | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.RenderEmissionNode.html": {
    "href": "api/ProjectDawn.Impostor.RenderEmissionNode.html",
    "title": "Class RenderEmissionNode",
    "keywords": "Class RenderEmissionNode Inheritance object BaseNode ImpostorNode RenderEmissionNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Scene/Render Emission\", null)] public class RenderEmissionNode : ImpostorNode Fields | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source Scene Declaration [Input(null, false)] public Scene Scene Field Value Type Description Scene | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.RenderMetallicNode.html": {
    "href": "api/ProjectDawn.Impostor.RenderMetallicNode.html",
    "title": "Class RenderMetallicNode",
    "keywords": "Class RenderMetallicNode Inheritance object BaseNode ImpostorNode RenderMetallicNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Scene/Render Metallic\", null)] public class RenderMetallicNode : ImpostorNode Fields | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source Scene Declaration [Input(null, false)] public Scene Scene Field Value Type Description Scene | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.RenderMode.html": {
    "href": "api/ProjectDawn.Impostor.RenderMode.html",
    "title": "Enum RenderMode",
    "keywords": "Enum RenderMode Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public enum RenderMode Fields Name Description Alpha BaseColor Depth DiffuseColor Emission Metallic None Normal Occlusion Smoothness"
  },
  "api/ProjectDawn.Impostor.RenderOcclusionNode.html": {
    "href": "api/ProjectDawn.Impostor.RenderOcclusionNode.html",
    "title": "Class RenderOcclusionNode",
    "keywords": "Class RenderOcclusionNode Inheritance object BaseNode ImpostorNode RenderOcclusionNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Scene/Render Occlusion\", null)] public class RenderOcclusionNode : ImpostorNode Fields | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source Scene Declaration [Input(null, false)] public Scene Scene Field Value Type Description Scene | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.RenderPipelineAttribute.html": {
    "href": "api/ProjectDawn.Impostor.RenderPipelineAttribute.html",
    "title": "Class RenderPipelineAttribute",
    "keywords": "Class RenderPipelineAttribute Inheritance object Attribute RenderPipelineAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [AttributeUsage(AttributeTargets.Class)] public class RenderPipelineAttribute : Attribute Constructors | Improve this Doc View Source RenderPipelineAttribute(Type) Declaration public RenderPipelineAttribute(Type pipelineType) Parameters Type Name Description Type pipelineType Properties | Improve this Doc View Source PipelineType Declaration public Type PipelineType { get; } Property Value Type Description Type"
  },
  "api/ProjectDawn.Impostor.RenderSmoothnessNode.html": {
    "href": "api/ProjectDawn.Impostor.RenderSmoothnessNode.html",
    "title": "Class RenderSmoothnessNode",
    "keywords": "Class RenderSmoothnessNode Inheritance object BaseNode ImpostorNode RenderSmoothnessNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Scene/Render Smoothness\", null)] public class RenderSmoothnessNode : ImpostorNode Fields | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public RenderTexture Destination Field Value Type Description RenderTexture | Improve this Doc View Source Scene Declaration [Input(null, false)] public Scene Scene Field Value Type Description Scene | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.RenderTextureExt.html": {
    "href": "api/ProjectDawn.Impostor.RenderTextureExt.html",
    "title": "Class RenderTextureExt",
    "keywords": "Class RenderTextureExt Inheritance object RenderTextureExt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public static class RenderTextureExt Methods | Improve this Doc View Source ToTexture2D(RenderTexture, GraphicsFormat, FilterMode, bool) Declaration public static Texture2D ToTexture2D(this RenderTexture renderTexture, GraphicsFormat format = GraphicsFormat.B8G8R8A8_SRGB, FilterMode filter = FilterMode.Bilinear, bool mipmaps = false) Parameters Type Name Description RenderTexture renderTexture GraphicsFormat format FilterMode filter bool mipmaps Returns Type Description Texture2D"
  },
  "api/ProjectDawn.Impostor.RenderTextureNode.html": {
    "href": "api/ProjectDawn.Impostor.RenderTextureNode.html",
    "title": "Class RenderTextureNode",
    "keywords": "Class RenderTextureNode Inheritance object BaseNode ImpostorNode RenderTextureNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Texture/Temp RenderTexture\", null)] public class RenderTextureNode : ImpostorNode Fields | Improve this Doc View Source Depth Declaration public int Depth Field Value Type Description int | Improve this Doc View Source Format Declaration public GraphicsFormat Format Field Value Type Description GraphicsFormat | Improve this Doc View Source RenderTexture Declaration [Output(null, true, allowMultiple = false)] public RenderTexture RenderTexture Field Value Type Description RenderTexture | Improve this Doc View Source Resolution Declaration [SerializeField] [Input(null, false)] public int Resolution Field Value Type Description int Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.RendererExt.html": {
    "href": "api/ProjectDawn.Impostor.RendererExt.html",
    "title": "Class RendererExt",
    "keywords": "Class RendererExt Inheritance object RendererExt Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public static class RendererExt Methods | Improve this Doc View Source GetSharedMesh(Renderer) Declaration public static Mesh GetSharedMesh(this Renderer renderer) Parameters Type Name Description Renderer renderer Returns Type Description Mesh"
  },
  "api/ProjectDawn.Impostor.Samples.GameKit.CameraController.html": {
    "href": "api/ProjectDawn.Impostor.Samples.GameKit.CameraController.html",
    "title": "Class CameraController",
    "keywords": "Class CameraController Inheritance object Object Component Behaviour MonoBehaviour CameraController Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor.Samples.GameKit Assembly: ProjectDawn.Impostor.Samples.GameKit.dll Syntax [ExecuteInEditMode] public class CameraController : MonoBehaviour Fields | Improve this Doc View Source distance Declaration public float distance Field Value Type Description float | Improve this Doc View Source maxDistance Declaration public float maxDistance Field Value Type Description float | Improve this Doc View Source minDistance Declaration public float minDistance Field Value Type Description float | Improve this Doc View Source target Declaration public Transform target Field Value Type Description Transform | Improve this Doc View Source xSpeed Declaration public float xSpeed Field Value Type Description float | Improve this Doc View Source yMaxLimit Declaration public float yMaxLimit Field Value Type Description float | Improve this Doc View Source yMinLimit Declaration public float yMinLimit Field Value Type Description float | Improve this Doc View Source ySpeed Declaration public float ySpeed Field Value Type Description float | Improve this Doc View Source zoomSpeed Declaration public float zoomSpeed Field Value Type Description float"
  },
  "api/ProjectDawn.Impostor.Samples.GameKit.ImpostorRuntime.html": {
    "href": "api/ProjectDawn.Impostor.Samples.GameKit.ImpostorRuntime.html",
    "title": "Class ImpostorRuntime",
    "keywords": "Class ImpostorRuntime Inheritance object Object Component Behaviour MonoBehaviour ImpostorRuntime Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor.Samples.GameKit Assembly: ProjectDawn.Impostor.Samples.GameKit.dll Syntax public class ImpostorRuntime : MonoBehaviour Fields | Improve this Doc View Source Graph Declaration public ImpostorGraph Graph Field Value Type Description ImpostorGraph | Improve this Doc View Source Target Declaration public GameObject Target Field Value Type Description GameObject"
  },
  "api/ProjectDawn.Impostor.Samples.GameKit.TextTriangles.html": {
    "href": "api/ProjectDawn.Impostor.Samples.GameKit.TextTriangles.html",
    "title": "Class TextTriangles",
    "keywords": "Class TextTriangles Inheritance object Object Component Behaviour MonoBehaviour TextTriangles Inherited Members MonoBehaviour.IsInvoking() MonoBehaviour.CancelInvoke() MonoBehaviour.Invoke(string, float) MonoBehaviour.InvokeRepeating(string, float, float) MonoBehaviour.CancelInvoke(string) MonoBehaviour.IsInvoking(string) MonoBehaviour.StartCoroutine(string) MonoBehaviour.StartCoroutine(string, object) MonoBehaviour.StartCoroutine(IEnumerator) MonoBehaviour.StartCoroutine_Auto(IEnumerator) MonoBehaviour.StopCoroutine(IEnumerator) MonoBehaviour.StopCoroutine(Coroutine) MonoBehaviour.StopCoroutine(string) MonoBehaviour.StopAllCoroutines() MonoBehaviour.print(object) MonoBehaviour.destroyCancellationToken MonoBehaviour.useGUILayout MonoBehaviour.runInEditMode Behaviour.enabled Behaviour.isActiveAndEnabled Component.GetComponent(Type) Component.GetComponent<T>() Component.TryGetComponent(Type, out Component) Component.TryGetComponent<T>(out T) Component.GetComponent(string) Component.GetComponentInChildren(Type, bool) Component.GetComponentInChildren(Type) Component.GetComponentInChildren<T>(bool) Component.GetComponentInChildren<T>() Component.GetComponentsInChildren(Type, bool) Component.GetComponentsInChildren(Type) Component.GetComponentsInChildren<T>(bool) Component.GetComponentsInChildren<T>(bool, List<T>) Component.GetComponentsInChildren<T>() Component.GetComponentsInChildren<T>(List<T>) Component.GetComponentInParent(Type, bool) Component.GetComponentInParent(Type) Component.GetComponentInParent<T>(bool) Component.GetComponentInParent<T>() Component.GetComponentsInParent(Type, bool) Component.GetComponentsInParent(Type) Component.GetComponentsInParent<T>(bool) Component.GetComponentsInParent<T>(bool, List<T>) Component.GetComponentsInParent<T>() Component.GetComponents(Type) Component.GetComponents(Type, List<Component>) Component.GetComponents<T>(List<T>) Component.GetComponents<T>() Component.GetComponentIndex() Component.CompareTag(string) Component.SendMessageUpwards(string, object, SendMessageOptions) Component.SendMessageUpwards(string, object) Component.SendMessageUpwards(string) Component.SendMessageUpwards(string, SendMessageOptions) Component.SendMessage(string, object) Component.SendMessage(string) Component.SendMessage(string, object, SendMessageOptions) Component.SendMessage(string, SendMessageOptions) Component.BroadcastMessage(string, object, SendMessageOptions) Component.BroadcastMessage(string, object) Component.BroadcastMessage(string) Component.BroadcastMessage(string, SendMessageOptions) Component.transform Component.gameObject Component.tag Object.GetInstanceID() Object.GetHashCode() Object.Equals(object) Object.InstantiateAsync<T>(T) Object.InstantiateAsync<T>(T, Transform) Object.InstantiateAsync<T>(T, Vector3, Quaternion) Object.InstantiateAsync<T>(T, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int) Object.InstantiateAsync<T>(T, int, Transform) Object.InstantiateAsync<T>(T, int, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.InstantiateAsync<T>(T, int, Transform, Vector3, Quaternion) Object.InstantiateAsync<T>(T, int, Transform, ReadOnlySpan<Vector3>, ReadOnlySpan<Quaternion>) Object.Instantiate(Object, Vector3, Quaternion) Object.Instantiate(Object, Vector3, Quaternion, Transform) Object.Instantiate(Object) Object.Instantiate(Object, Scene) Object.Instantiate(Object, Transform) Object.Instantiate(Object, Transform, bool) Object.Instantiate<T>(T) Object.Instantiate<T>(T, Vector3, Quaternion) Object.Instantiate<T>(T, Vector3, Quaternion, Transform) Object.Instantiate<T>(T, Transform) Object.Instantiate<T>(T, Transform, bool) Object.Destroy(Object, float) Object.Destroy(Object) Object.DestroyImmediate(Object, bool) Object.DestroyImmediate(Object) Object.FindObjectsOfType(Type) Object.FindObjectsOfType(Type, bool) Object.FindObjectsByType(Type, FindObjectsSortMode) Object.FindObjectsByType(Type, FindObjectsInactive, FindObjectsSortMode) Object.DontDestroyOnLoad(Object) Object.DestroyObject(Object, float) Object.DestroyObject(Object) Object.FindSceneObjectsOfType(Type) Object.FindObjectsOfTypeIncludingAssets(Type) Object.FindObjectsOfType<T>() Object.FindObjectsByType<T>(FindObjectsSortMode) Object.FindObjectsOfType<T>(bool) Object.FindObjectsByType<T>(FindObjectsInactive, FindObjectsSortMode) Object.FindObjectOfType<T>() Object.FindObjectOfType<T>(bool) Object.FindFirstObjectByType<T>() Object.FindAnyObjectByType<T>() Object.FindFirstObjectByType<T>(FindObjectsInactive) Object.FindAnyObjectByType<T>(FindObjectsInactive) Object.FindObjectsOfTypeAll(Type) Object.FindObjectOfType(Type) Object.FindFirstObjectByType(Type) Object.FindAnyObjectByType(Type) Object.FindObjectOfType(Type, bool) Object.FindFirstObjectByType(Type, FindObjectsInactive) Object.FindAnyObjectByType(Type, FindObjectsInactive) Object.ToString() Object.name Object.hideFlags object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor.Samples.GameKit Assembly: ProjectDawn.Impostor.Samples.GameKit.dll Syntax [ExecuteInEditMode] public class TextTriangles : MonoBehaviour Fields | Improve this Doc View Source FontSize Declaration public int FontSize Field Value Type Description int | Improve this Doc View Source IncludeSkyBoxAndGroundTriangles Declaration public bool IncludeSkyBoxAndGroundTriangles Field Value Type Description bool"
  },
  "api/ProjectDawn.Impostor.Samples.GameKit.html": {
    "href": "api/ProjectDawn.Impostor.Samples.GameKit.html",
    "title": "Namespace ProjectDawn.Impostor.Samples.GameKit",
    "keywords": "Namespace ProjectDawn.Impostor.Samples.GameKit Classes CameraController ImpostorRuntime TextTriangles"
  },
  "api/ProjectDawn.Impostor.Scene.html": {
    "href": "api/ProjectDawn.Impostor.Scene.html",
    "title": "Class Scene",
    "keywords": "Class Scene Inheritance object Scene Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public abstract class Scene : IDisposable Properties | Improve this Doc View Source CapturePoints Declaration public abstract CapturePoints CapturePoints { get; } Property Value Type Description CapturePoints Methods | Improve this Doc View Source Cleanup() Declaration protected virtual void Cleanup() | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Render(RenderTexture, RenderMode) Declaration public abstract void Render(RenderTexture target, RenderMode mode) Parameters Type Name Description RenderTexture target RenderMode mode | Improve this Doc View Source RenderCombinedMask(RenderTexture, Material) Declaration public abstract void RenderCombinedMask(RenderTexture target, Material blitMaterial) Parameters Type Name Description RenderTexture target Material blitMaterial Implements IDisposable"
  },
  "api/ProjectDawn.Impostor.SceneNode.html": {
    "href": "api/ProjectDawn.Impostor.SceneNode.html",
    "title": "Class SceneNode",
    "keywords": "Class SceneNode Inheritance object BaseNode ImpostorNode SceneNode Implements IDisposable Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [HelpURL(\"https://lukaschod.github.io/impostor-graph-docs/manual/nodes/scene-node.html\")] [NodeMenuItem(\"Scene/Scene\", null)] public class SceneNode : ImpostorNode, IDisposable Fields | Improve this Doc View Source CapturePoints Declaration [Input(null, false)] public CapturePoints CapturePoints Field Value Type Description CapturePoints | Improve this Doc View Source Scene Declaration [Output(null, true)] public Scene Scene Field Value Type Description Scene | Improve this Doc View Source Surface Declaration [Input(null, false)] public Surface Surface Field Value Type Description Surface Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process() Implements IDisposable"
  },
  "api/ProjectDawn.Impostor.SerializableDictionary-2.SerializableKeyValuePair.html": {
    "href": "api/ProjectDawn.Impostor.SerializableDictionary-2.SerializableKeyValuePair.html",
    "title": "Struct SerializableDictionary<TKey, TValue>.SerializableKeyValuePair",
    "keywords": "Struct SerializableDictionary<TKey, TValue>.SerializableKeyValuePair Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [Serializable] public struct SerializableDictionary<TKey, TValue>.SerializableKeyValuePair Constructors | Improve this Doc View Source SerializableKeyValuePair(TKey, TValue) Declaration public SerializableKeyValuePair(TKey key, TValue value) Parameters Type Name Description TKey key TValue value Fields | Improve this Doc View Source Key Declaration public TKey Key Field Value Type Description TKey | Improve this Doc View Source Value Declaration public TValue Value Field Value Type Description TValue Methods | Improve this Doc View Source SetValue(TValue) Declaration public void SetValue(TValue value) Parameters Type Name Description TValue value"
  },
  "api/ProjectDawn.Impostor.SerializableDictionary-2.html": {
    "href": "api/ProjectDawn.Impostor.SerializableDictionary-2.html",
    "title": "Class SerializableDictionary<TKey, TValue>",
    "keywords": "Class SerializableDictionary<TKey, TValue> Inheritance object SerializableDictionary SerializableDictionary<TKey, TValue> Implements IDictionary<TKey, TValue> ICollection<KeyValuePair<TKey, TValue>> IEnumerable<KeyValuePair<TKey, TValue>> IEnumerable ISerializationCallbackReceiver Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [Serializable] public class SerializableDictionary<TKey, TValue> : SerializableDictionary, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, ISerializationCallbackReceiver Type Parameters Name Description TKey TValue Constructors | Improve this Doc View Source SerializableDictionary() Declaration public SerializableDictionary() | Improve this Doc View Source SerializableDictionary(IDictionary<TKey, TValue>) Declaration public SerializableDictionary(IDictionary<TKey, TValue> dictionary) Parameters Type Name Description IDictionary<TKey, TValue> dictionary Properties | Improve this Doc View Source Count Declaration public int Count { get; } Property Value Type Description int | Improve this Doc View Source IsReadOnly Declaration public bool IsReadOnly { get; } Property Value Type Description bool | Improve this Doc View Source this[TKey] Declaration public TValue this[TKey key] { get; set; } Parameters Type Name Description TKey key Property Value Type Description TValue | Improve this Doc View Source Keys Declaration public ICollection<TKey> Keys { get; } Property Value Type Description ICollection<TKey> | Improve this Doc View Source Values Declaration public ICollection<TValue> Values { get; } Property Value Type Description ICollection<TValue> Methods | Improve this Doc View Source Add(KeyValuePair<TKey, TValue>) Declaration public void Add(KeyValuePair<TKey, TValue> kvp) Parameters Type Name Description KeyValuePair<TKey, TValue> kvp | Improve this Doc View Source Add(TKey, TValue) Declaration public void Add(TKey key, TValue value) Parameters Type Name Description TKey key TValue value | Improve this Doc View Source Clear() Declaration public void Clear() | Improve this Doc View Source Contains(KeyValuePair<TKey, TValue>) Declaration public bool Contains(KeyValuePair<TKey, TValue> kvp) Parameters Type Name Description KeyValuePair<TKey, TValue> kvp Returns Type Description bool | Improve this Doc View Source ContainsKey(TKey) Declaration public bool ContainsKey(TKey key) Parameters Type Name Description TKey key Returns Type Description bool | Improve this Doc View Source CopyTo(KeyValuePair<TKey, TValue>[], int) Declaration public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex) Parameters Type Name Description KeyValuePair<TKey, TValue>[] array int arrayIndex | Improve this Doc View Source GetEnumerator() Declaration public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator() Returns Type Description IEnumerator<KeyValuePair<TKey, TValue>> | Improve this Doc View Source OnAfterDeserialize() Implement this method to receive a callback after Unity deserializes your object. Declaration public void OnAfterDeserialize() | Improve this Doc View Source OnBeforeSerialize() Implement this method to receive a callback before Unity serializes your object. Declaration public void OnBeforeSerialize() | Improve this Doc View Source Remove(KeyValuePair<TKey, TValue>) Declaration public bool Remove(KeyValuePair<TKey, TValue> kvp) Parameters Type Name Description KeyValuePair<TKey, TValue> kvp Returns Type Description bool | Improve this Doc View Source Remove(TKey) Declaration public bool Remove(TKey key) Parameters Type Name Description TKey key Returns Type Description bool | Improve this Doc View Source TryGetValue(TKey, out TValue) Declaration public bool TryGetValue(TKey key, out TValue value) Parameters Type Name Description TKey key TValue value Returns Type Description bool Implements IDictionary<TKey, TValue> ICollection<T> IEnumerable<T> IEnumerable UnityEngine.ISerializationCallbackReceiver"
  },
  "api/ProjectDawn.Impostor.SerializableDictionary.html": {
    "href": "api/ProjectDawn.Impostor.SerializableDictionary.html",
    "title": "Class SerializableDictionary",
    "keywords": "Class SerializableDictionary Inheritance object SerializableDictionary SerializableDictionary<TKey, TValue> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public class SerializableDictionary"
  },
  "api/ProjectDawn.Impostor.SetMaterialPropertyFloat.html": {
    "href": "api/ProjectDawn.Impostor.SetMaterialPropertyFloat.html",
    "title": "Class SetMaterialPropertyFloat",
    "keywords": "Class SetMaterialPropertyFloat Inheritance object BaseNode ImpostorNode SetMaterialPropertyFloat Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Material/Set Material Property Float\", null)] public class SetMaterialPropertyFloat : ImpostorNode Fields | Improve this Doc View Source In Declaration [Input(null, false)] public Impostor In Field Value Type Description Impostor | Improve this Doc View Source Name Declaration [SerializeField] [Input(null, false)] public string Name Field Value Type Description string | Improve this Doc View Source Out Declaration [Output(null, true)] public Impostor Out Field Value Type Description Impostor | Improve this Doc View Source Value Declaration [Input(null, false)] public float Value Field Value Type Description float Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.Surface.html": {
    "href": "api/ProjectDawn.Impostor.Surface.html",
    "title": "Class Surface",
    "keywords": "Class Surface Inheritance object Surface Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax public class Surface Constructors | Improve this Doc View Source Surface(GameObject) Declaration public Surface(GameObject gameObject) Parameters Type Name Description GameObject gameObject Fields | Improve this Doc View Source GameObject Declaration public GameObject GameObject Field Value Type Description GameObject | Improve this Doc View Source Matrix Declaration public Matrix4x4 Matrix Field Value Type Description Matrix4x4 | Improve this Doc View Source Renderers Declaration public Renderer[] Renderers Field Value Type Description Renderer[] Methods | Improve this Doc View Source Clone(Func<Renderer, bool>) Declaration public Surface Clone(Func<Renderer, bool> filterRenderer) Parameters Type Name Description Func<Renderer, bool> filterRenderer Returns Type Description Surface | Improve this Doc View Source GetBounds() Declaration public BoundingSphere GetBounds() Returns Type Description BoundingSphere | Improve this Doc View Source GetTightBounds() Declaration public BoundingSphere GetTightBounds() Returns Type Description BoundingSphere"
  },
  "api/ProjectDawn.Impostor.SurfaceNode.html": {
    "href": "api/ProjectDawn.Impostor.SurfaceNode.html",
    "title": "Class SurfaceNode",
    "keywords": "Class SurfaceNode Inheritance object BaseNode ImpostorNode SurfaceNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Surface\", null)] public class SurfaceNode : ImpostorNode Fields | Improve this Doc View Source Source Declaration [Input(null, false)] public GameObject Source Field Value Type Description GameObject | Improve this Doc View Source Surface Declaration [Output(null, true)] public Surface Surface Field Value Type Description Surface Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.Texture2DNode.html": {
    "href": "api/ProjectDawn.Impostor.Texture2DNode.html",
    "title": "Class Texture2DNode",
    "keywords": "Class Texture2DNode Inheritance object BaseNode ImpostorNode Texture2DNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [NodeMenuItem(\"Texture/Texture 2D\", null)] public class Texture2DNode : ImpostorNode Fields | Improve this Doc View Source Destination Declaration [Output(null, true, allowMultiple = false)] public Texture2D Destination Field Value Type Description Texture2D | Improve this Doc View Source Filter Declaration public FilterMode Filter Field Value Type Description FilterMode | Improve this Doc View Source Format Declaration public GraphicsFormat Format Field Value Type Description GraphicsFormat | Improve this Doc View Source Mipmaps Declaration public bool Mipmaps Field Value Type Description bool | Improve this Doc View Source Source Declaration [Input(null, false)] public RenderTexture Source Field Value Type Description RenderTexture Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.TightMeshNode.html": {
    "href": "api/ProjectDawn.Impostor.TightMeshNode.html",
    "title": "Class TightMeshNode",
    "keywords": "Class TightMeshNode Inheritance object BaseNode ImpostorNode TightMeshNode Inherited Members BaseNode.color BaseNode.layoutStyle BaseNode.unlockable BaseNode.isLocked BaseNode.GUID BaseNode.computeOrder BaseNode.canProcess BaseNode.showControlsOnHover BaseNode.deletable BaseNode.inputPorts BaseNode.outputPorts BaseNode.position BaseNode.expanded BaseNode.debug BaseNode.nodeLock BaseNode.onProcessed BaseNode.onMessageAdded BaseNode.onMessageRemoved BaseNode.onAfterEdgeConnected BaseNode.onAfterEdgeDisconnected BaseNode.onPortsUpdated BaseNode.needsInspector BaseNode.isRenamable BaseNode.createdFromDuplication BaseNode.createdWithinGroup BaseNode.graph BaseNode.CreateFromType<T>(Vector2) BaseNode.CreateFromType(Type, Vector2) BaseNode.Initialize(BaseGraph) BaseNode.InitializePorts() BaseNode.OverrideFieldOrder(IEnumerable<FieldInfo>) BaseNode.UpdateAllPorts() BaseNode.UpdateAllPortsLocal() BaseNode.UpdatePortsForFieldLocal(string, bool) BaseNode.UpdatePortsForField(string, bool) BaseNode.OnNodeCreated() BaseNode.GetNodeFields() BaseNode.OnEdgeConnected(SerializableEdge) BaseNode.CanResetPort(NodePort) BaseNode.OnEdgeDisconnected(SerializableEdge) BaseNode.OnProcess() BaseNode.InvokeOnProcessed() BaseNode.Enable() BaseNode.Disable() BaseNode.Destroy() BaseNode.AddPort(bool, string, PortData) BaseNode.RemovePort(bool, NodePort) BaseNode.RemovePort(bool, string) BaseNode.GetInputNodes() BaseNode.GetOutputNodes() BaseNode.FindInDependencies(Func<BaseNode, bool>) BaseNode.GetPort(string, string) BaseNode.GetAllPorts() BaseNode.GetAllEdges() BaseNode.IsFieldInput(string) BaseNode.AddMessage(string, NodeMessageType) BaseNode.RemoveMessage(string) BaseNode.RemoveMessageContains(string) BaseNode.ClearMessages() BaseNode.SetCustomName(string) BaseNode.GetCustomName() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: ProjectDawn.Impostor Assembly: ProjectDawn.Impostor.dll Syntax [HelpURL(\"https://lukaschod.github.io/impostor-graph-docs/manual/nodes/tight-mesh-node.html\")] [NodeMenuItem(\"Mesh/Tight Mesh\", null)] public class TightMeshNode : ImpostorNode Fields | Improve this Doc View Source BlitMaterial Declaration [Reload(\"Packages/com.projectdawn.impostor/Shaders/TightMesh.mat\")] public Material BlitMaterial Field Value Type Description Material | Improve this Doc View Source Mesh Declaration [Output(null, true)] public Mesh Mesh Field Value Type Description Mesh | Improve this Doc View Source Resolution Declaration [Input(null, false)] [SerializeField] public int Resolution Field Value Type Description int | Improve this Doc View Source Scene Declaration [Input(null, false)] public Scene Scene Field Value Type Description Scene Properties | Improve this Doc View Source name Name of the node, it will be displayed in the title section Declaration public override string name { get; } Property Value Type Description string Overrides BaseNode.name Methods | Improve this Doc View Source CreateTightMesh(Scene, Material, int, uint) Declaration public static Mesh CreateTightMesh(Scene scene, Material blitMaterial, int resolution, uint extrude) Parameters Type Name Description Scene scene Material blitMaterial int resolution uint extrude Returns Type Description Mesh | Improve this Doc View Source Process() Override this method to implement custom processing Declaration protected override void Process() Overrides BaseNode.Process()"
  },
  "api/ProjectDawn.Impostor.html": {
    "href": "api/ProjectDawn.Impostor.html",
    "title": "Namespace ProjectDawn.Impostor",
    "keywords": "Namespace ProjectDawn.Impostor Classes BaseOctahedralImpostor BlitMask BlitMaskNode CapturePoints CustomRenderMode Dilate DilateNode DuplicateRenderTexture HDRenderNormalNode HemiOctahedronCapturePointsNode Impostor ImpostorBuilder ImpostorGraph ImpostorNode LitHemiOctahedralImpostor LitMaskHemiOctahedralImpostor LitOctahedralImpostor NameFilterSurfaceNode OctahedronCapturePointsNode OutputNode QuadMeshNode ReloadAttribute RenderAlphaNode RenderBaseNode RenderCustomNode RenderDepthNode RenderDiffuseNode RenderEmissionNode RenderMetallicNode RenderOcclusionNode RenderPipelineAttribute RenderSmoothnessNode RenderTextureExt RenderTextureNode RendererExt Scene SceneNode SerializableDictionary SerializableDictionary<TKey, TValue> SetMaterialPropertyFloat Surface SurfaceNode Texture2DNode TightMeshNode Structs AllowAsyncCompilationScope CapturePoint Single capture angle. SerializableDictionary<TKey, TValue>.SerializableKeyValuePair Enums Packing RenderMode"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome to the Scripting Reference!",
    "keywords": "Welcome to the Scripting Reference! Select the API to view the detail."
  },
  "changelog.html": {
    "href": "changelog.html",
    "title": "Changelog",
    "keywords": "Changelog All notable changes to this package will be documented in this file. The format is based on Keep a Changelog [1.2.1] - 2025-03-12 Fixed in URP to force time scale to zero [1.2.0] - 2024-08-13 Added 360 degree Octahedral support Fixed URP shadows [1.1.7] - 2024-03-15 Fixed URP runtime non development build impostors for 2022 [1.1.6] - 2023-10-25 Changed icons and other resources to be in editor folder [1.1.5] - 2023-09-04 Added float serialization to impostor builder Added new node SetMaterialPropertyFloat Fixed hdrp emission/skinned sample [1.1.4] - 2023-09-02 Added skinned mesh support Added preview to impostor builder Added hdrp skinned sample [1.1.3] - 2023-08-30 Added URP sample with emission [1.1.2] - 2023-07-01 Fixed bounds correctly updated in mesh [1.1.1] - 2023-06-05 Fixed failing compilation of class AllowAsyncCompilationScope [1.1.0] - 2023-05-28 Added Render Smoothness, Metallic, Occlusion nodes Added Name Filter Surface Node to allows filtering renderers by name Changed Custom Render Node to copy texture properties from original material [1.0.0] - 2023-04-09 Package released"
  },
  "index.html": {
    "href": "index.html",
    "title": "Impostor Graph",
    "keywords": "Impostor Graph The Impostor Graph is a tool that allows users to create custom impostors for real-time rendering of distant objects. It enables users to build a graph of nodes that output texture atlases, materials, meshes, or other custom data, providing complete control over the impostor building process."
  },
  "manual/builder.html": {
    "href": "manual/builder.html",
    "title": "Builder",
    "keywords": "Builder Builds impostor assets by executing an ImpostorGraph with the specified parameters. Property Description Graph The graph to execute. Source The source object to use for the impostor. Frames The number of frames to capture. Resolution The resolution of the base and alpha textures. Resolution2 The resolution of the normal and depth textures. Create Game Object To do this, you need to select the impostor asset in the project view and drag-and-drop it into the scene view."
  },
  "manual/graph.html": {
    "href": "manual/graph.html",
    "title": "Graph",
    "keywords": "Graph Represents a serialized graph consisting of nodes, with functionality for executing the graph and producing impostor assets as output. Node. For more information check git repository NodeGraphProcessor as this package uses its API."
  },
  "manual/index.html": {
    "href": "manual/index.html",
    "title": "Impostor Graph",
    "keywords": "Impostor Graph The Impostor Graph is a tool that allows users to create custom impostors for real-time rendering of distant objects. It enables users to build a graph of nodes that output texture atlases, materials, meshes, or other custom data, providing complete control over the impostor building process. About Octahedral impostors are a popular technique used in real-time computer graphics to render complex 3D objects quickly and efficiently. This technique involves capturing a snapshot of the object from a specific viewpoint and projecting it onto the six faces of an octahedron to create a simplified version of the object. By doing so, the simplified version can be loaded quickly at runtime and used to create flat 2D images of the object. Octahedral impostors are particularly useful for rendering large and complex environments, and can be combined with other rendering techniques, such as LOD systems, to improve performance further. Requirements Unity 2021.3 com.unity.render-pipelines.universal@12.1.10 or com.unity.render-pipelines.high-definition@12.1.10 com.unity.render-pipelines.core@12.1.10 com.unity.mathematics@1.2.1"
  },
  "manual/known-issues.html": {
    "href": "manual/known-issues.html",
    "title": "Known Issues",
    "keywords": "Known Issues In Unity 6 DX12, there is a bug where baking takes a very long time (https://issuetracker.unity3d.com/issues/the-camera-dot-render-hangs-the-process-of-geometry-baking-in-the-textures-when-using-hdrp)."
  },
  "manual/limitations.html": {
    "href": "manual/limitations.html",
    "title": "Limitations",
    "keywords": "Limitations Impostors currently uses hemi-octahedral mapping. It means looking at impostor from below would look wrong. Does not support builtin render pipeline. In Graph grouping sometimes loses serialized data."
  },
  "manual/nodes/custom-node.html": {
    "href": "manual/nodes/custom-node.html",
    "title": "Custom Node",
    "keywords": "Custom Node To create new node you simply need to create class that derives from ImpostorNode. Here is small example of custom node that adds two numbers. using GraphProcessor; using UnityEngine; [NodeMenuItem(\"Math/Basic/Add\")] // The path in menu item public class AddNode : ImpostorNode { // The name of the node public override string name => \"Add\"; [Input] public float A; [Input] public float B; [Output] public float C; protected override void Process() { C = A + B; } } Node. For more information check git repository NodeGraphProcessor as this package uses its API."
  },
  "manual/nodes/dilate-node.html": {
    "href": "manual/nodes/dilate-node.html",
    "title": "Dilate Node",
    "keywords": "Dilate Node Dilates the texture by the specified amount. This is useful for adding a border around the texture. For impostors, this is useful for adding a border around the texture to prevent the impostors blending with the background. Parameter Description Source The source texture. Mask The mask texture indicates pixels that will not be overwritten by dilate. Iterations The number of iterations to perform. Increasing number will result in longer build impostor build times."
  },
  "manual/nodes/render-custom-node.html": {
    "href": "manual/nodes/render-custom-node.html",
    "title": "Render Custom",
    "keywords": "Render Custom In most cases using other render nodes to like Render Base Color, Render Alpha is sufficient to extract surface data. However, in some cases you may want to extract some custom surface data that could be used in shader graph. This node can be handy in such cases, as it allows rendering with override material."
  },
  "manual/nodes/scene-node.html": {
    "href": "manual/nodes/scene-node.html",
    "title": "Scene Node",
    "keywords": "Scene Node Scene node constructs a scene specific to current render pipeline. Later on it can be used for extracting information about the surface (etc. normal, depth, etc.)."
  },
  "manual/nodes/tight-mesh-node.html": {
    "href": "manual/nodes/tight-mesh-node.html",
    "title": "Tight Mesh Node",
    "keywords": "Tight Mesh Node Generates a minimal billboard mesh based on impostor frames. It should produce a mesh that is as small as possible while still covering the entire impostor. Parameter Description Scene The scene to use for the impostor. Resolution Increasing the value will increase tight mesh vertex count, but also will eliminate more unused space. Mesh The generated mesh."
  },
  "manual/quick-start.html": {
    "href": "manual/quick-start.html",
    "title": "Quick Start",
    "keywords": "Quick Start To quickly create an impostor, follow these steps: First of all, make sure that your project is fully set up to use either HDRP or URP. Note: You can find more information about SRP in this link. In the project view folders and file area, right-click. Select Create and then Impostor. This will create a new impostor asset. Select the impostor asset and in the inspector view, click the Build button. This will start the process of building the impostor. All built assets will be stored under the same impostor asset as sub-assets. Note: You can learn more about sub-assets in this link. Finally, you can use a very convenient feature to create a game object out of the impostor. To do this, you need to select the impostor asset in the project view and drag-and-drop it into the scene view."
  },
  "manual/samples.html": {
    "href": "manual/samples.html",
    "title": "Samples",
    "keywords": "Samples In a package folder named Samples you can find projects that showcase possible use cases. Samples in this package are contained in a hidden folder named Samples~ and they can be imported using Package Manager. This allows package to be lighter if samples are not used. To import samples, follow these steps: Click menu item Window/Package Manager to open package manager window. Make sure you selected tab Packages: In Project. Find package Agents Navigation. Find button Samples and click it. Node. Make sure tab Packages: In Project is selected. For more information check https://docs.unity3d.com/2022.2/Documentation/Manual/cus-samples.html. URPGameKit This sample project shows usage of Impostor with Universal Render Pipeline. Sample contains these scenes: URPGameKitVegetation - shows how to use impostor with LOD Group. URPGameKitRockRuntime - shows how to use impostor that is baked at runtime. URPGameKit - synthetic performance test that uses lod. By pressing ESC button, it switches between using impostor and not. URPCustomRenderMode - shows how to bake impostor by capturing custom data instead of common like base color, normal, depth. HDRPTerrain This sample project shows usage of Impostor with High Definition Render Pipeline. HDRPTree - simple impostor tree."
  }
}